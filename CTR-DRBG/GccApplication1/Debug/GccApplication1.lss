
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000023e  00800100  000036fe  000037fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000036fe  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  0080033e  0080033e  00003a3c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003a3c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003a6c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00003ab0  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001872  00000000  00000000  00003b98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000990  00000000  00000000  0000540a  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00004feb  00000000  00000000  00005d9a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  0000ad88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000532  00000000  00000000  0000b03c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000db7  00000000  00000000  0000b56e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000c325  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	33 c0       	rjmp	.+102    	; 0x68 <__ctors_end>
       2:	00 00       	nop
       4:	4e c0       	rjmp	.+156    	; 0xa2 <__bad_interrupt>
       6:	00 00       	nop
       8:	4c c0       	rjmp	.+152    	; 0xa2 <__bad_interrupt>
       a:	00 00       	nop
       c:	4a c0       	rjmp	.+148    	; 0xa2 <__bad_interrupt>
       e:	00 00       	nop
      10:	48 c0       	rjmp	.+144    	; 0xa2 <__bad_interrupt>
      12:	00 00       	nop
      14:	46 c0       	rjmp	.+140    	; 0xa2 <__bad_interrupt>
      16:	00 00       	nop
      18:	44 c0       	rjmp	.+136    	; 0xa2 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	42 c0       	rjmp	.+132    	; 0xa2 <__bad_interrupt>
      1e:	00 00       	nop
      20:	40 c0       	rjmp	.+128    	; 0xa2 <__bad_interrupt>
      22:	00 00       	nop
      24:	3e c0       	rjmp	.+124    	; 0xa2 <__bad_interrupt>
      26:	00 00       	nop
      28:	3c c0       	rjmp	.+120    	; 0xa2 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	3a c0       	rjmp	.+116    	; 0xa2 <__bad_interrupt>
      2e:	00 00       	nop
      30:	38 c0       	rjmp	.+112    	; 0xa2 <__bad_interrupt>
      32:	00 00       	nop
      34:	36 c0       	rjmp	.+108    	; 0xa2 <__bad_interrupt>
      36:	00 00       	nop
      38:	34 c0       	rjmp	.+104    	; 0xa2 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	32 c0       	rjmp	.+100    	; 0xa2 <__bad_interrupt>
      3e:	00 00       	nop
      40:	30 c0       	rjmp	.+96     	; 0xa2 <__bad_interrupt>
      42:	00 00       	nop
      44:	2e c0       	rjmp	.+92     	; 0xa2 <__bad_interrupt>
      46:	00 00       	nop
      48:	2c c0       	rjmp	.+88     	; 0xa2 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	2a c0       	rjmp	.+84     	; 0xa2 <__bad_interrupt>
      4e:	00 00       	nop
      50:	28 c0       	rjmp	.+80     	; 0xa2 <__bad_interrupt>
      52:	00 00       	nop
      54:	26 c0       	rjmp	.+76     	; 0xa2 <__bad_interrupt>
      56:	00 00       	nop
      58:	24 c0       	rjmp	.+72     	; 0xa2 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	22 c0       	rjmp	.+68     	; 0xa2 <__bad_interrupt>
      5e:	00 00       	nop
      60:	20 c0       	rjmp	.+64     	; 0xa2 <__bad_interrupt>
      62:	00 00       	nop
      64:	1e c0       	rjmp	.+60     	; 0xa2 <__bad_interrupt>
	...

00000068 <__ctors_end>:
      68:	11 24       	eor	r1, r1
      6a:	1f be       	out	0x3f, r1	; 63
      6c:	cf ef       	ldi	r28, 0xFF	; 255
      6e:	d8 e0       	ldi	r29, 0x08	; 8
      70:	de bf       	out	0x3e, r29	; 62
      72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
      74:	13 e0       	ldi	r17, 0x03	; 3
      76:	a0 e0       	ldi	r26, 0x00	; 0
      78:	b1 e0       	ldi	r27, 0x01	; 1
      7a:	ee ef       	ldi	r30, 0xFE	; 254
      7c:	f6 e3       	ldi	r31, 0x36	; 54
      7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
      80:	05 90       	lpm	r0, Z+
      82:	0d 92       	st	X+, r0
      84:	ae 33       	cpi	r26, 0x3E	; 62
      86:	b1 07       	cpc	r27, r17
      88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
      8a:	23 e0       	ldi	r18, 0x03	; 3
      8c:	ae e3       	ldi	r26, 0x3E	; 62
      8e:	b3 e0       	ldi	r27, 0x03	; 3
      90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
      92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
      94:	a2 34       	cpi	r26, 0x42	; 66
      96:	b2 07       	cpc	r27, r18
      98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
      9a:	0e 94 c6 19 	call	0x338c	; 0x338c <main>
      9e:	0c 94 7d 1b 	jmp	0x36fa	; 0x36fa <_exit>

000000a2 <__bad_interrupt>:
      a2:	ae cf       	rjmp	.-164    	; 0x0 <__vectors>

000000a4 <aes256_enc_CBC_asm>:
P = 0
xREDUCER = 25

.global aes256_enc_CBC_asm
aes256_enc_CBC_asm:
	ldi r20, 14
      a4:	4e e0       	ldi	r20, 0x0E	; 14
	rjmp aes_encrypt_core
      a6:	03 c0       	rjmp	.+6      	; 0xae <aes_encrypt_core>

000000a8 <aes192_enc_CBC_asm>:

.global aes192_enc_CBC_asm
aes192_enc_CBC_asm:
	ldi r20, 12
      a8:	4c e0       	ldi	r20, 0x0C	; 12
	rjmp aes_encrypt_core
      aa:	01 c0       	rjmp	.+2      	; 0xae <aes_encrypt_core>

000000ac <aes128_enc_CBC_asm>:

.global aes128_enc_CBC_asm
aes128_enc_CBC_asm:
	ldi r20, 10
      ac:	4a e0       	ldi	r20, 0x0A	; 10

000000ae <aes_encrypt_core>:
 * param ks:     r22:r23
 * param rounds: r20   
 */
.global aes_encrypt_core
aes_encrypt_core:
	push_range 0, 22
      ae:	0f 92       	push	r0
      b0:	1f 92       	push	r1
      b2:	2f 92       	push	r2
      b4:	3f 92       	push	r3
      b6:	4f 92       	push	r4
      b8:	5f 92       	push	r5
      ba:	6f 92       	push	r6
      bc:	7f 92       	push	r7
      be:	8f 92       	push	r8
      c0:	9f 92       	push	r9
      c2:	af 92       	push	r10
      c4:	bf 92       	push	r11
      c6:	cf 92       	push	r12
      c8:	df 92       	push	r13
      ca:	ef 92       	push	r14
      cc:	ff 92       	push	r15
      ce:	0f 93       	push	r16
      d0:	1f 93       	push	r17
      d2:	2f 93       	push	r18
      d4:	3f 93       	push	r19
      d6:	4f 93       	push	r20
      d8:	5f 93       	push	r21
      da:	6f 93       	push	r22
	push r28
      dc:	cf 93       	push	r28
	push r29
      de:	df 93       	push	r29
	push r24
      e0:	8f 93       	push	r24
	push r25
      e2:	9f 93       	push	r25
	movw r26, r22
      e4:	db 01       	movw	r26, r22
	movw r30, r24
      e6:	fc 01       	movw	r30, r24
	mov  CTR, r20
      e8:	84 2f       	mov	r24, r20
	clt
      ea:	e8 94       	clt
	
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld ST\row\col, Z+
		.endr
	.endr
      ec:	81 90       	ld	r8, Z+
      ee:	91 90       	ld	r9, Z+
      f0:	a1 90       	ld	r10, Z+
      f2:	b1 90       	ld	r11, Z+
      f4:	c1 90       	ld	r12, Z+
      f6:	d1 90       	ld	r13, Z+
      f8:	e1 90       	ld	r14, Z+
      fa:	f1 90       	ld	r15, Z+
      fc:	01 91       	ld	r16, Z+
      fe:	11 91       	ld	r17, Z+
     100:	21 91       	ld	r18, Z+
     102:	31 91       	ld	r19, Z+
     104:	41 91       	ld	r20, Z+
     106:	51 91       	ld	r21, Z+
     108:	61 91       	ld	r22, Z+
     10a:	71 91       	ld	r23, Z+
	
	ldi xREDUCER, 0x1b /* load reducer */
     10c:	9b e1       	ldi	r25, 0x1B	; 27
	ldi r31, hi8(aes_sbox)
     10e:	f0 e2       	ldi	r31, 0x20	; 32
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r0, X+
			eor ST\row\col, r0
		.endr
	.endr
     110:	0d 90       	ld	r0, X+
     112:	80 24       	eor	r8, r0
     114:	0d 90       	ld	r0, X+
     116:	90 24       	eor	r9, r0
     118:	0d 90       	ld	r0, X+
     11a:	a0 24       	eor	r10, r0
     11c:	0d 90       	ld	r0, X+
     11e:	b0 24       	eor	r11, r0
     120:	0d 90       	ld	r0, X+
     122:	c0 24       	eor	r12, r0
     124:	0d 90       	ld	r0, X+
     126:	d0 24       	eor	r13, r0
     128:	0d 90       	ld	r0, X+
     12a:	e0 24       	eor	r14, r0
     12c:	0d 90       	ld	r0, X+
     12e:	f0 24       	eor	r15, r0
     130:	0d 90       	ld	r0, X+
     132:	00 25       	eor	r16, r0
     134:	0d 90       	ld	r0, X+
     136:	10 25       	eor	r17, r0
     138:	0d 90       	ld	r0, X+
     13a:	20 25       	eor	r18, r0
     13c:	0d 90       	ld	r0, X+
     13e:	30 25       	eor	r19, r0
     140:	0d 90       	ld	r0, X+
     142:	40 25       	eor	r20, r0
     144:	0d 90       	ld	r0, X+
     146:	50 25       	eor	r21, r0
     148:	0d 90       	ld	r0, X+
     14a:	60 25       	eor	r22, r0
     14c:	0d 90       	ld	r0, X+
     14e:	70 25       	eor	r23, r0
	
	brtc 2f
     150:	66 f5       	brtc	.+88     	; 0x1aa <exit+0x58>

00000152 <exit>:
exit:
	pop r31
     152:	ff 91       	pop	r31
	pop r30
     154:	ef 91       	pop	r30
	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
     156:	81 92       	st	Z+, r8
     158:	91 92       	st	Z+, r9
     15a:	a1 92       	st	Z+, r10
     15c:	b1 92       	st	Z+, r11
     15e:	c1 92       	st	Z+, r12
     160:	d1 92       	st	Z+, r13
     162:	e1 92       	st	Z+, r14
     164:	f1 92       	st	Z+, r15
     166:	01 93       	st	Z+, r16
     168:	11 93       	st	Z+, r17
     16a:	21 93       	st	Z+, r18
     16c:	31 93       	st	Z+, r19
     16e:	41 93       	st	Z+, r20
     170:	51 93       	st	Z+, r21
     172:	61 93       	st	Z+, r22
     174:	71 93       	st	Z+, r23
	pop r29
     176:	df 91       	pop	r29
	pop r28
     178:	cf 91       	pop	r28
	pop_range 0, 22
     17a:	6f 91       	pop	r22
     17c:	5f 91       	pop	r21
     17e:	4f 91       	pop	r20
     180:	3f 91       	pop	r19
     182:	2f 91       	pop	r18
     184:	1f 91       	pop	r17
     186:	0f 91       	pop	r16
     188:	ff 90       	pop	r15
     18a:	ef 90       	pop	r14
     18c:	df 90       	pop	r13
     18e:	cf 90       	pop	r12
     190:	bf 90       	pop	r11
     192:	af 90       	pop	r10
     194:	9f 90       	pop	r9
     196:	8f 90       	pop	r8
     198:	7f 90       	pop	r7
     19a:	6f 90       	pop	r6
     19c:	5f 90       	pop	r5
     19e:	4f 90       	pop	r4
     1a0:	3f 90       	pop	r3
     1a2:	2f 90       	pop	r2
     1a4:	1f 90       	pop	r1
     1a6:	0f 90       	pop	r0
	ret
     1a8:	08 95       	ret

2:	dec CTR
     1aa:	8a 95       	dec	r24
	brne 3f
     1ac:	09 f4       	brne	.+2      	; 0x1b0 <exit+0x5e>
	set
     1ae:	68 94       	set
3:

	/* encryption loop */ 

	/* SBOX substitution and shifting */
	mov r30, ST00
     1b0:	e8 2d       	mov	r30, r8
	lpm ST00, Z
     1b2:	84 90       	lpm	r8, Z
	mov r30, ST10
     1b4:	ec 2d       	mov	r30, r12
	lpm ST10, Z
     1b6:	c4 90       	lpm	r12, Z
	mov r30, ST20
     1b8:	e0 2f       	mov	r30, r16
	lpm ST20, Z
     1ba:	04 91       	lpm	r16, Z
	mov r30, ST30
     1bc:	e4 2f       	mov	r30, r20
	lpm ST30, Z
     1be:	44 91       	lpm	r20, Z

	mov r30, ST01
     1c0:	e9 2d       	mov	r30, r9
	lpm T0, Z
     1c2:	24 90       	lpm	r2, Z
	mov r30, ST11
     1c4:	ed 2d       	mov	r30, r13
	lpm ST01, Z
     1c6:	94 90       	lpm	r9, Z
	mov r30, ST21
     1c8:	e1 2f       	mov	r30, r17
	lpm ST11, Z
     1ca:	d4 90       	lpm	r13, Z
	mov r30, ST31
     1cc:	e5 2f       	mov	r30, r21
	lpm ST21, Z
     1ce:	14 91       	lpm	r17, Z
	mov ST31, T0
     1d0:	52 2d       	mov	r21, r2

	mov r30, ST02
     1d2:	ea 2d       	mov	r30, r10
	lpm T0, Z
     1d4:	24 90       	lpm	r2, Z
	mov r30, ST12
     1d6:	ee 2d       	mov	r30, r14
	lpm T1, Z
     1d8:	34 90       	lpm	r3, Z
	mov r30, ST22
     1da:	e2 2f       	mov	r30, r18
	lpm ST02, Z
     1dc:	a4 90       	lpm	r10, Z
	mov r30, ST32
     1de:	e6 2f       	mov	r30, r22
	lpm ST12, Z
     1e0:	e4 90       	lpm	r14, Z
	mov ST22, T0
     1e2:	22 2d       	mov	r18, r2
	mov ST32, T1
     1e4:	63 2d       	mov	r22, r3

	mov r30, ST03
     1e6:	eb 2d       	mov	r30, r11
	lpm T0, Z
     1e8:	24 90       	lpm	r2, Z
	mov r30, ST33
     1ea:	e7 2f       	mov	r30, r23
	lpm ST03, Z
     1ec:	b4 90       	lpm	r11, Z
	mov r30, ST23
     1ee:	e3 2f       	mov	r30, r19
	lpm ST33, Z
     1f0:	74 91       	lpm	r23, Z
	mov r30, ST13
     1f2:	ef 2d       	mov	r30, r15
	lpm ST23, Z
     1f4:	34 91       	lpm	r19, Z
	mov ST13, T0
     1f6:	f2 2c       	mov	r15, r2
		
	/* mixcols (or rows in our case) */
	brtc 2f
     1f8:	0e f4       	brtc	.+2      	; 0x1fc <exit+0xaa>
	rjmp 1b
     1fa:	8a cf       	rjmp	.-236    	; 0x110 <aes_encrypt_core+0x62>
	brcc 3f
	eor T0, xREDUCER
3:	eor T0, r0
	eor ST\row\()3, T0

.endr
     1fc:	0a 2c       	mov	r0, r10
     1fe:	0b 24       	eor	r0, r11
     200:	40 2c       	mov	r4, r0
     202:	28 2c       	mov	r2, r8
     204:	89 24       	eor	r8, r9
     206:	08 24       	eor	r0, r8
     208:	88 0c       	add	r8, r8
     20a:	08 f4       	brcc	.+2      	; 0x20e <exit+0xbc>
     20c:	89 26       	eor	r8, r25
     20e:	80 24       	eor	r8, r0
     210:	82 24       	eor	r8, r2
     212:	39 2c       	mov	r3, r9
     214:	3a 24       	eor	r3, r10
     216:	33 0c       	add	r3, r3
     218:	08 f4       	brcc	.+2      	; 0x21c <exit+0xca>
     21a:	39 26       	eor	r3, r25
     21c:	30 24       	eor	r3, r0
     21e:	93 24       	eor	r9, r3
     220:	44 0c       	add	r4, r4
     222:	08 f4       	brcc	.+2      	; 0x226 <exit+0xd4>
     224:	49 26       	eor	r4, r25
     226:	40 24       	eor	r4, r0
     228:	a4 24       	eor	r10, r4
     22a:	2b 24       	eor	r2, r11
     22c:	22 0c       	add	r2, r2
     22e:	08 f4       	brcc	.+2      	; 0x232 <exit+0xe0>
     230:	29 26       	eor	r2, r25
     232:	20 24       	eor	r2, r0
     234:	b2 24       	eor	r11, r2
     236:	0e 2c       	mov	r0, r14
     238:	0f 24       	eor	r0, r15
     23a:	40 2c       	mov	r4, r0
     23c:	2c 2c       	mov	r2, r12
     23e:	cd 24       	eor	r12, r13
     240:	0c 24       	eor	r0, r12
     242:	cc 0c       	add	r12, r12
     244:	08 f4       	brcc	.+2      	; 0x248 <exit+0xf6>
     246:	c9 26       	eor	r12, r25
     248:	c0 24       	eor	r12, r0
     24a:	c2 24       	eor	r12, r2
     24c:	3d 2c       	mov	r3, r13
     24e:	3e 24       	eor	r3, r14
     250:	33 0c       	add	r3, r3
     252:	08 f4       	brcc	.+2      	; 0x256 <exit+0x104>
     254:	39 26       	eor	r3, r25
     256:	30 24       	eor	r3, r0
     258:	d3 24       	eor	r13, r3
     25a:	44 0c       	add	r4, r4
     25c:	08 f4       	brcc	.+2      	; 0x260 <exit+0x10e>
     25e:	49 26       	eor	r4, r25
     260:	40 24       	eor	r4, r0
     262:	e4 24       	eor	r14, r4
     264:	2f 24       	eor	r2, r15
     266:	22 0c       	add	r2, r2
     268:	08 f4       	brcc	.+2      	; 0x26c <exit+0x11a>
     26a:	29 26       	eor	r2, r25
     26c:	20 24       	eor	r2, r0
     26e:	f2 24       	eor	r15, r2
     270:	02 2e       	mov	r0, r18
     272:	03 26       	eor	r0, r19
     274:	40 2c       	mov	r4, r0
     276:	20 2e       	mov	r2, r16
     278:	01 27       	eor	r16, r17
     27a:	00 26       	eor	r0, r16
     27c:	00 0f       	add	r16, r16
     27e:	08 f4       	brcc	.+2      	; 0x282 <exit+0x130>
     280:	09 27       	eor	r16, r25
     282:	00 25       	eor	r16, r0
     284:	02 25       	eor	r16, r2
     286:	31 2e       	mov	r3, r17
     288:	32 26       	eor	r3, r18
     28a:	33 0c       	add	r3, r3
     28c:	08 f4       	brcc	.+2      	; 0x290 <exit+0x13e>
     28e:	39 26       	eor	r3, r25
     290:	30 24       	eor	r3, r0
     292:	13 25       	eor	r17, r3
     294:	44 0c       	add	r4, r4
     296:	08 f4       	brcc	.+2      	; 0x29a <exit+0x148>
     298:	49 26       	eor	r4, r25
     29a:	40 24       	eor	r4, r0
     29c:	24 25       	eor	r18, r4
     29e:	23 26       	eor	r2, r19
     2a0:	22 0c       	add	r2, r2
     2a2:	08 f4       	brcc	.+2      	; 0x2a6 <exit+0x154>
     2a4:	29 26       	eor	r2, r25
     2a6:	20 24       	eor	r2, r0
     2a8:	32 25       	eor	r19, r2
     2aa:	06 2e       	mov	r0, r22
     2ac:	07 26       	eor	r0, r23
     2ae:	40 2c       	mov	r4, r0
     2b0:	24 2e       	mov	r2, r20
     2b2:	45 27       	eor	r20, r21
     2b4:	04 26       	eor	r0, r20
     2b6:	44 0f       	add	r20, r20
     2b8:	08 f4       	brcc	.+2      	; 0x2bc <exit+0x16a>
     2ba:	49 27       	eor	r20, r25
     2bc:	40 25       	eor	r20, r0
     2be:	42 25       	eor	r20, r2
     2c0:	35 2e       	mov	r3, r21
     2c2:	36 26       	eor	r3, r22
     2c4:	33 0c       	add	r3, r3
     2c6:	08 f4       	brcc	.+2      	; 0x2ca <exit+0x178>
     2c8:	39 26       	eor	r3, r25
     2ca:	30 24       	eor	r3, r0
     2cc:	53 25       	eor	r21, r3
     2ce:	44 0c       	add	r4, r4
     2d0:	08 f4       	brcc	.+2      	; 0x2d4 <exit+0x182>
     2d2:	49 26       	eor	r4, r25
     2d4:	40 24       	eor	r4, r0
     2d6:	64 25       	eor	r22, r4
     2d8:	27 26       	eor	r2, r23
     2da:	22 0c       	add	r2, r2
     2dc:	08 f4       	brcc	.+2      	; 0x2e0 <exit+0x18e>
     2de:	29 26       	eor	r2, r25
     2e0:	20 24       	eor	r2, r0
     2e2:	72 25       	eor	r23, r2
	/* mix colums (rows) done */

	/* add key*/
     2e4:	15 cf       	rjmp	.-470    	; 0x110 <aes_encrypt_core+0x62>

000002e6 <aes128_enc_CTR_asm>:
/*
 * param state:  r24:r25
 * param ks:     r22:r23
 * param rounds: r20   
 */
	push_range 0, 19
     2e6:	0f 92       	push	r0
     2e8:	1f 92       	push	r1
     2ea:	2f 92       	push	r2
     2ec:	3f 92       	push	r3
     2ee:	4f 92       	push	r4
     2f0:	5f 92       	push	r5
     2f2:	6f 92       	push	r6
     2f4:	7f 92       	push	r7
     2f6:	8f 92       	push	r8
     2f8:	9f 92       	push	r9
     2fa:	af 92       	push	r10
     2fc:	bf 92       	push	r11
     2fe:	cf 92       	push	r12
     300:	df 92       	push	r13
     302:	ef 92       	push	r14
     304:	ff 92       	push	r15
     306:	0f 93       	push	r16
     308:	1f 93       	push	r17
     30a:	2f 93       	push	r18
     30c:	3f 93       	push	r19
	push r28
     30e:	cf 93       	push	r28
	push r29
     310:	df 93       	push	r29
	push r24
     312:	8f 93       	push	r24
	push r25
     314:	9f 93       	push	r25
	movw r26, r22
     316:	db 01       	movw	r26, r22
	movw r30, r24
     318:	fc 01       	movw	r30, r24
	//State Set
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld ST\row\col, Z+
		.endr
	.endr
     31a:	01 90       	ld	r0, Z+
     31c:	11 90       	ld	r1, Z+
     31e:	21 90       	ld	r2, Z+
     320:	31 90       	ld	r3, Z+
     322:	41 90       	ld	r4, Z+
     324:	51 90       	ld	r5, Z+
     326:	61 90       	ld	r6, Z+
     328:	71 90       	ld	r7, Z+
     32a:	81 90       	ld	r8, Z+
     32c:	91 90       	ld	r9, Z+
     32e:	a1 90       	ld	r10, Z+
     330:	b1 90       	ld	r11, Z+
     332:	c1 90       	ld	r12, Z+
     334:	d1 90       	ld	r13, Z+
     336:	e1 90       	ld	r14, Z+
     338:	f1 90       	ld	r15, Z+
	push r26
     33a:	af 93       	push	r26
	push r27
     33c:	bf 93       	push	r27
	push r20
     33e:	4f 93       	push	r20
	push r21
     340:	5f 93       	push	r21
	ldi r31, hi8(SBOX_TABLE)	
     342:	f1 e0       	ldi	r31, 0x01	; 1
	ldi r29, hi8(MIX2_TABLE)
     344:	d2 e0       	ldi	r29, 0x02	; 2
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     346:	0d 91       	ld	r16, X+
     348:	00 26       	eor	r0, r16
     34a:	0d 91       	ld	r16, X+
     34c:	10 26       	eor	r1, r16
     34e:	0d 91       	ld	r16, X+
     350:	20 26       	eor	r2, r16
     352:	0d 91       	ld	r16, X+
     354:	30 26       	eor	r3, r16
     356:	0d 91       	ld	r16, X+
     358:	40 26       	eor	r4, r16
     35a:	0d 91       	ld	r16, X+
     35c:	50 26       	eor	r5, r16
     35e:	0d 91       	ld	r16, X+
     360:	60 26       	eor	r6, r16
     362:	0d 91       	ld	r16, X+
     364:	70 26       	eor	r7, r16
     366:	0d 91       	ld	r16, X+
     368:	80 26       	eor	r8, r16
     36a:	0d 91       	ld	r16, X+
     36c:	90 26       	eor	r9, r16
     36e:	0d 91       	ld	r16, X+
     370:	a0 26       	eor	r10, r16
     372:	0d 91       	ld	r16, X+
     374:	b0 26       	eor	r11, r16
     376:	0d 91       	ld	r16, X+
     378:	c0 26       	eor	r12, r16
     37a:	0d 91       	ld	r16, X+
     37c:	d0 26       	eor	r13, r16
     37e:	0d 91       	ld	r16, X+
     380:	e0 26       	eor	r14, r16
     382:	0d 91       	ld	r16, X+
     384:	f0 26       	eor	r15, r16

	//1 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	Inc ST33
     386:	f3 94       	inc	r15
	mov r30, ST00 
     388:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     38a:	10 81       	ld	r17, Z
	mov M2, M1
     38c:	21 2f       	mov	r18, r17
	mov M3, M2 
     38e:	32 2f       	mov	r19, r18
	mov r28, ST00
     390:	c0 2d       	mov	r28, r0
	ld  M0, Y
     392:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     394:	30 27       	eor	r19, r16

	mov r30, ST11
     396:	e5 2d       	mov	r30, r5
	ld  T0, Z
     398:	40 81       	ld	r20, Z
	eor M0, T0
     39a:	04 27       	eor	r16, r20
	eor M2, T0
     39c:	24 27       	eor	r18, r20
	eor M3, T0 
     39e:	34 27       	eor	r19, r20
	mov r28, ST11
     3a0:	c5 2d       	mov	r28, r5
	ld  T0, Y
     3a2:	48 81       	ld	r20, Y
	eor M0, T0
     3a4:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     3a6:	14 27       	eor	r17, r20

	mov r30, ST22
     3a8:	ea 2d       	mov	r30, r10
	ld  T0, Z
     3aa:	40 81       	ld	r20, Z
	eor M0, T0
     3ac:	04 27       	eor	r16, r20
	eor M1, T0
     3ae:	14 27       	eor	r17, r20
	eor M3, T0
     3b0:	34 27       	eor	r19, r20
	mov r28, ST22
     3b2:	ca 2d       	mov	r28, r10
	ld  T0, Y
     3b4:	48 81       	ld	r20, Y
	eor M1, T0
     3b6:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     3b8:	24 27       	eor	r18, r20

	mov r30, ST33
     3ba:	ef 2d       	mov	r30, r15
	ld  T0, Z
     3bc:	40 81       	ld	r20, Z
	eor M0, T0
     3be:	04 27       	eor	r16, r20
	eor M1, T0
     3c0:	14 27       	eor	r17, r20
	eor M2, T0 
     3c2:	24 27       	eor	r18, r20
	mov r28, ST33
     3c4:	cf 2d       	mov	r28, r15
	ld  T0, Y
     3c6:	48 81       	ld	r20, Y
	eor M2, T0
     3c8:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     3ca:	34 27       	eor	r19, r20

	mov ST00, M0
     3cc:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     3ce:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     3d0:	50 81       	ld	r21, Z
	mov T2, T1
     3d2:	65 2f       	mov	r22, r21
	mov T3, T2 
     3d4:	76 2f       	mov	r23, r22
	mov r28, ST10
     3d6:	c4 2d       	mov	r28, r4
	ld  T0, Y
     3d8:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     3da:	74 27       	eor	r23, r20

	mov r30, ST21
     3dc:	e9 2d       	mov	r30, r9
	ld  M0, Z
     3de:	00 81       	ld	r16, Z
	eor T0, M0
     3e0:	40 27       	eor	r20, r16
	eor T2, M0
     3e2:	60 27       	eor	r22, r16
	eor T3, M0 
     3e4:	70 27       	eor	r23, r16
	mov r28, ST21
     3e6:	c9 2d       	mov	r28, r9
	ld  M0, Y
     3e8:	08 81       	ld	r16, Y
	eor T0, M0
     3ea:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     3ec:	50 27       	eor	r21, r16

	mov r30, ST32
     3ee:	ee 2d       	mov	r30, r14
	ld  M0, Z
     3f0:	00 81       	ld	r16, Z
	eor T0, M0
     3f2:	40 27       	eor	r20, r16
	eor T1, M0
     3f4:	50 27       	eor	r21, r16
	eor T3, M0 
     3f6:	70 27       	eor	r23, r16
	mov r28, ST32
     3f8:	ce 2d       	mov	r28, r14
	ld  M0, Y
     3fa:	08 81       	ld	r16, Y
	eor T1, M0
     3fc:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     3fe:	60 27       	eor	r22, r16

	mov r30, ST03
     400:	e3 2d       	mov	r30, r3
	ld  M0, Z
     402:	00 81       	ld	r16, Z
	eor T0, M0
     404:	40 27       	eor	r20, r16
	eor T1, M0
     406:	50 27       	eor	r21, r16
	eor T2, M0 
     408:	60 27       	eor	r22, r16
	mov r28, ST03
     40a:	c3 2d       	mov	r28, r3
	ld  M0, Y
     40c:	08 81       	ld	r16, Y
	eor T2, M0
     40e:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     410:	70 27       	eor	r23, r16

	mov ST10, T0
     412:	44 2e       	mov	r4, r20
	mov ST11, T1
     414:	55 2e       	mov	r5, r21
	mov ST03, M3
     416:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     418:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     41a:	40 81       	ld	r20, Z
	mov T1, T0
     41c:	54 2f       	mov	r21, r20
	mov M3, T1 
     41e:	35 2f       	mov	r19, r21
	mov r28, ST20
     420:	c8 2d       	mov	r28, r8
	ld  M0, Y
     422:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     424:	30 27       	eor	r19, r16

	mov r30, ST31
     426:	ed 2d       	mov	r30, r13
	ld  r25, Z
     428:	90 81       	ld	r25, Z
	eor M0, r25
     42a:	09 27       	eor	r16, r25
	eor T1, r25
     42c:	59 27       	eor	r21, r25
	eor M3, r25
     42e:	39 27       	eor	r19, r25
	mov r28, ST31
     430:	cd 2d       	mov	r28, r13
	ld  r25, Y
     432:	98 81       	ld	r25, Y
	eor M0, r25
     434:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     436:	49 27       	eor	r20, r25

	mov r30, ST02
     438:	e2 2d       	mov	r30, r2
	ld  r25, Z
     43a:	90 81       	ld	r25, Z
	eor M0, r25
     43c:	09 27       	eor	r16, r25
	eor T0, r25
     43e:	49 27       	eor	r20, r25
	eor M3, r25
     440:	39 27       	eor	r19, r25
	mov r28, ST02
     442:	c2 2d       	mov	r28, r2
	ld  r25, Y
     444:	98 81       	ld	r25, Y
	eor T0, r25
     446:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     448:	59 27       	eor	r21, r25

	mov r30, ST13
     44a:	e7 2d       	mov	r30, r7
	ld  r25, Z
     44c:	90 81       	ld	r25, Z
	eor M0, r25
     44e:	09 27       	eor	r16, r25
	eor T0, r25
     450:	49 27       	eor	r20, r25
	eor T1, r25 
     452:	59 27       	eor	r21, r25
	mov r28, ST13
     454:	c7 2d       	mov	r28, r7
	ld  r25, Y
     456:	98 81       	ld	r25, Y
	eor T1, r25
     458:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     45a:	39 27       	eor	r19, r25

	mov ST20, M0
     45c:	80 2e       	mov	r8, r16
	mov ST21, T0
     45e:	94 2e       	mov	r9, r20
	mov ST22, T1
     460:	a5 2e       	mov	r10, r21
	mov ST13, T3
     462:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     464:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     466:	50 81       	ld	r21, Z
	mov T3, T1
     468:	75 2f       	mov	r23, r21
	mov r25, T3 
     46a:	97 2f       	mov	r25, r23
	mov r28, ST30
     46c:	cc 2d       	mov	r28, r12
	ld  T0, Y
     46e:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     470:	94 27       	eor	r25, r20

	mov r30, ST01
     472:	e1 2d       	mov	r30, r1
	ld  M0, Z
     474:	00 81       	ld	r16, Z
	eor T0, M0
     476:	40 27       	eor	r20, r16
	eor T3, M0
     478:	70 27       	eor	r23, r16
	eor r25, M0 
     47a:	90 27       	eor	r25, r16
	mov r28, ST01
     47c:	c1 2d       	mov	r28, r1
	ld  M0, Y
     47e:	08 81       	ld	r16, Y
	eor T0, M0
     480:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     482:	50 27       	eor	r21, r16

	mov r30, ST12
     484:	e6 2d       	mov	r30, r6
	ld  M0, Z
     486:	00 81       	ld	r16, Z
	eor T0, M0
     488:	40 27       	eor	r20, r16
	eor T1, M0
     48a:	50 27       	eor	r21, r16
	eor r25, M0 
     48c:	90 27       	eor	r25, r16
	mov r28, ST12
     48e:	c6 2d       	mov	r28, r6
	ld  M0, Y
     490:	08 81       	ld	r16, Y
	eor T1, M0
     492:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     494:	70 27       	eor	r23, r16

	mov r30, ST23
     496:	eb 2d       	mov	r30, r11
	ld  M0, Z
     498:	00 81       	ld	r16, Z
	eor T0, M0
     49a:	40 27       	eor	r20, r16
	eor T1, M0
     49c:	50 27       	eor	r21, r16
	eor T3, M0 
     49e:	70 27       	eor	r23, r16
	mov r28, ST23
     4a0:	cb 2d       	mov	r28, r11
	ld  M0, Y
     4a2:	08 81       	ld	r16, Y
	eor T3, M0
     4a4:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     4a6:	90 27       	eor	r25, r16

	mov ST30, T0
     4a8:	c4 2e       	mov	r12, r20
	mov ST31, T1
     4aa:	d5 2e       	mov	r13, r21
	mov ST32, T3
     4ac:	e7 2e       	mov	r14, r23
	mov ST33, r25
     4ae:	f9 2e       	mov	r15, r25
	mov ST01, M1
     4b0:	11 2e       	mov	r1, r17
	mov ST02, M2
     4b2:	22 2e       	mov	r2, r18
	mov ST12, T2
     4b4:	66 2e       	mov	r6, r22
	mov ST23, M3
     4b6:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     4b8:	0d 91       	ld	r16, X+
     4ba:	00 26       	eor	r0, r16
     4bc:	0d 91       	ld	r16, X+
     4be:	10 26       	eor	r1, r16
     4c0:	0d 91       	ld	r16, X+
     4c2:	20 26       	eor	r2, r16
     4c4:	0d 91       	ld	r16, X+
     4c6:	30 26       	eor	r3, r16
     4c8:	0d 91       	ld	r16, X+
     4ca:	40 26       	eor	r4, r16
     4cc:	0d 91       	ld	r16, X+
     4ce:	50 26       	eor	r5, r16
     4d0:	0d 91       	ld	r16, X+
     4d2:	60 26       	eor	r6, r16
     4d4:	0d 91       	ld	r16, X+
     4d6:	70 26       	eor	r7, r16
     4d8:	0d 91       	ld	r16, X+
     4da:	80 26       	eor	r8, r16
     4dc:	0d 91       	ld	r16, X+
     4de:	90 26       	eor	r9, r16
     4e0:	0d 91       	ld	r16, X+
     4e2:	a0 26       	eor	r10, r16
     4e4:	0d 91       	ld	r16, X+
     4e6:	b0 26       	eor	r11, r16
     4e8:	0d 91       	ld	r16, X+
     4ea:	c0 26       	eor	r12, r16
     4ec:	0d 91       	ld	r16, X+
     4ee:	d0 26       	eor	r13, r16
     4f0:	0d 91       	ld	r16, X+
     4f2:	e0 26       	eor	r14, r16
     4f4:	0d 91       	ld	r16, X+
     4f6:	f0 26       	eor	r15, r16
	
	pop r21
     4f8:	5f 91       	pop	r21
	pop r20
     4fa:	4f 91       	pop	r20
	movw r30, r20
     4fc:	fa 01       	movw	r30, r20
	push r20
     4fe:	4f 93       	push	r20
	push r21
     500:	5f 93       	push	r21
	st Z+, ST10
     502:	41 92       	st	Z+, r4
	st Z+, ST11
     504:	51 92       	st	Z+, r5
	st Z+, ST12
     506:	61 92       	st	Z+, r6
	st Z+, ST13
     508:	71 92       	st	Z+, r7
	st Z+, ST20
     50a:	81 92       	st	Z+, r8
	st Z+, ST21
     50c:	91 92       	st	Z+, r9
	st Z+, ST22
     50e:	a1 92       	st	Z+, r10
	st Z+, ST23
     510:	b1 92       	st	Z+, r11
	st Z+, ST30
     512:	c1 92       	st	Z+, r12
	st Z+, ST31
     514:	d1 92       	st	Z+, r13
	st Z+, ST32
     516:	e1 92       	st	Z+, r14
	st Z+, ST33
     518:	f1 92       	st	Z+, r15
	
	//2 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     51a:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     51c:	10 81       	ld	r17, Z
	mov M2, M1
     51e:	21 2f       	mov	r18, r17
	mov M3, M2 
     520:	32 2f       	mov	r19, r18
	mov r28, ST00
     522:	c0 2d       	mov	r28, r0
	ld  M0, Y
     524:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     526:	30 27       	eor	r19, r16

	mov r30, ST11
     528:	e5 2d       	mov	r30, r5
	ld  T0, Z
     52a:	40 81       	ld	r20, Z
	eor M0, T0
     52c:	04 27       	eor	r16, r20
	eor M2, T0
     52e:	24 27       	eor	r18, r20
	eor M3, T0 
     530:	34 27       	eor	r19, r20
	mov r28, ST11
     532:	c5 2d       	mov	r28, r5
	ld  T0, Y
     534:	48 81       	ld	r20, Y
	eor M0, T0
     536:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     538:	14 27       	eor	r17, r20

	mov r30, ST22
     53a:	ea 2d       	mov	r30, r10
	ld  T0, Z
     53c:	40 81       	ld	r20, Z
	eor M0, T0
     53e:	04 27       	eor	r16, r20
	eor M1, T0
     540:	14 27       	eor	r17, r20
	eor M3, T0
     542:	34 27       	eor	r19, r20
	mov r28, ST22
     544:	ca 2d       	mov	r28, r10
	ld  T0, Y
     546:	48 81       	ld	r20, Y
	eor M1, T0
     548:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     54a:	24 27       	eor	r18, r20

	mov r30, ST33
     54c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     54e:	40 81       	ld	r20, Z
	eor M0, T0
     550:	04 27       	eor	r16, r20
	eor M1, T0
     552:	14 27       	eor	r17, r20
	eor M2, T0 
     554:	24 27       	eor	r18, r20
	mov r28, ST33
     556:	cf 2d       	mov	r28, r15
	ld  T0, Y
     558:	48 81       	ld	r20, Y
	eor M2, T0
     55a:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     55c:	34 27       	eor	r19, r20

	mov ST00, M0
     55e:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     560:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     562:	50 81       	ld	r21, Z
	mov T2, T1
     564:	65 2f       	mov	r22, r21
	mov T3, T2 
     566:	76 2f       	mov	r23, r22
	mov r28, ST10
     568:	c4 2d       	mov	r28, r4
	ld  T0, Y
     56a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     56c:	74 27       	eor	r23, r20

	mov r30, ST21
     56e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     570:	00 81       	ld	r16, Z
	eor T0, M0
     572:	40 27       	eor	r20, r16
	eor T2, M0
     574:	60 27       	eor	r22, r16
	eor T3, M0 
     576:	70 27       	eor	r23, r16
	mov r28, ST21
     578:	c9 2d       	mov	r28, r9
	ld  M0, Y
     57a:	08 81       	ld	r16, Y
	eor T0, M0
     57c:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     57e:	50 27       	eor	r21, r16

	mov r30, ST32
     580:	ee 2d       	mov	r30, r14
	ld  M0, Z
     582:	00 81       	ld	r16, Z
	eor T0, M0
     584:	40 27       	eor	r20, r16
	eor T1, M0
     586:	50 27       	eor	r21, r16
	eor T3, M0 
     588:	70 27       	eor	r23, r16
	mov r28, ST32
     58a:	ce 2d       	mov	r28, r14
	ld  M0, Y
     58c:	08 81       	ld	r16, Y
	eor T1, M0
     58e:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     590:	60 27       	eor	r22, r16

	mov r30, ST03
     592:	e3 2d       	mov	r30, r3
	ld  M0, Z
     594:	00 81       	ld	r16, Z
	eor T0, M0
     596:	40 27       	eor	r20, r16
	eor T1, M0
     598:	50 27       	eor	r21, r16
	eor T2, M0 
     59a:	60 27       	eor	r22, r16
	mov r28, ST03
     59c:	c3 2d       	mov	r28, r3
	ld  M0, Y
     59e:	08 81       	ld	r16, Y
	eor T2, M0
     5a0:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     5a2:	70 27       	eor	r23, r16

	mov ST10, T0
     5a4:	44 2e       	mov	r4, r20
	mov ST11, T1
     5a6:	55 2e       	mov	r5, r21
	mov ST03, M3
     5a8:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     5aa:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     5ac:	40 81       	ld	r20, Z
	mov T1, T0
     5ae:	54 2f       	mov	r21, r20
	mov M3, T1 
     5b0:	35 2f       	mov	r19, r21
	mov r28, ST20
     5b2:	c8 2d       	mov	r28, r8
	ld  M0, Y
     5b4:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     5b6:	30 27       	eor	r19, r16

	mov r30, ST31
     5b8:	ed 2d       	mov	r30, r13
	ld  r25, Z
     5ba:	90 81       	ld	r25, Z
	eor M0, r25
     5bc:	09 27       	eor	r16, r25
	eor T1, r25
     5be:	59 27       	eor	r21, r25
	eor M3, r25
     5c0:	39 27       	eor	r19, r25
	mov r28, ST31
     5c2:	cd 2d       	mov	r28, r13
	ld  r25, Y
     5c4:	98 81       	ld	r25, Y
	eor M0, r25
     5c6:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     5c8:	49 27       	eor	r20, r25

	mov r30, ST02
     5ca:	e2 2d       	mov	r30, r2
	ld  r25, Z
     5cc:	90 81       	ld	r25, Z
	eor M0, r25
     5ce:	09 27       	eor	r16, r25
	eor T0, r25
     5d0:	49 27       	eor	r20, r25
	eor M3, r25
     5d2:	39 27       	eor	r19, r25
	mov r28, ST02
     5d4:	c2 2d       	mov	r28, r2
	ld  r25, Y
     5d6:	98 81       	ld	r25, Y
	eor T0, r25
     5d8:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     5da:	59 27       	eor	r21, r25

	mov r30, ST13
     5dc:	e7 2d       	mov	r30, r7
	ld  r25, Z
     5de:	90 81       	ld	r25, Z
	eor M0, r25
     5e0:	09 27       	eor	r16, r25
	eor T0, r25
     5e2:	49 27       	eor	r20, r25
	eor T1, r25 
     5e4:	59 27       	eor	r21, r25
	mov r28, ST13
     5e6:	c7 2d       	mov	r28, r7
	ld  r25, Y
     5e8:	98 81       	ld	r25, Y
	eor T1, r25
     5ea:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     5ec:	39 27       	eor	r19, r25

	mov ST20, M0
     5ee:	80 2e       	mov	r8, r16
	mov ST21, T0
     5f0:	94 2e       	mov	r9, r20
	mov ST22, T1
     5f2:	a5 2e       	mov	r10, r21
	mov ST13, T3
     5f4:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     5f6:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     5f8:	50 81       	ld	r21, Z
	mov T3, T1
     5fa:	75 2f       	mov	r23, r21
	mov r25, T3 
     5fc:	97 2f       	mov	r25, r23
	mov r28, ST30
     5fe:	cc 2d       	mov	r28, r12
	ld  T0, Y
     600:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     602:	94 27       	eor	r25, r20

	mov r30, ST01
     604:	e1 2d       	mov	r30, r1
	ld  M0, Z
     606:	00 81       	ld	r16, Z
	eor T0, M0
     608:	40 27       	eor	r20, r16
	eor T3, M0
     60a:	70 27       	eor	r23, r16
	eor r25, M0 
     60c:	90 27       	eor	r25, r16
	mov r28, ST01
     60e:	c1 2d       	mov	r28, r1
	ld  M0, Y
     610:	08 81       	ld	r16, Y
	eor T0, M0
     612:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     614:	50 27       	eor	r21, r16

	mov r30, ST12
     616:	e6 2d       	mov	r30, r6
	ld  M0, Z
     618:	00 81       	ld	r16, Z
	eor T0, M0
     61a:	40 27       	eor	r20, r16
	eor T1, M0
     61c:	50 27       	eor	r21, r16
	eor r25, M0 
     61e:	90 27       	eor	r25, r16
	mov r28, ST12
     620:	c6 2d       	mov	r28, r6
	ld  M0, Y
     622:	08 81       	ld	r16, Y
	eor T1, M0
     624:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     626:	70 27       	eor	r23, r16

	mov r30, ST23
     628:	eb 2d       	mov	r30, r11
	ld  M0, Z
     62a:	00 81       	ld	r16, Z
	eor T0, M0
     62c:	40 27       	eor	r20, r16
	eor T1, M0
     62e:	50 27       	eor	r21, r16
	eor T3, M0 
     630:	70 27       	eor	r23, r16
	mov r28, ST23
     632:	cb 2d       	mov	r28, r11
	ld  M0, Y
     634:	08 81       	ld	r16, Y
	eor T3, M0
     636:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     638:	90 27       	eor	r25, r16

	mov ST30, T0
     63a:	c4 2e       	mov	r12, r20
	mov ST31, T1
     63c:	d5 2e       	mov	r13, r21
	mov ST32, T3
     63e:	e7 2e       	mov	r14, r23
	mov ST33, r25
     640:	f9 2e       	mov	r15, r25
	mov ST01, M1
     642:	11 2e       	mov	r1, r17
	mov ST02, M2
     644:	22 2e       	mov	r2, r18
	mov ST12, T2
     646:	66 2e       	mov	r6, r22
	mov ST23, M3
     648:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     64a:	0d 91       	ld	r16, X+
     64c:	00 26       	eor	r0, r16
     64e:	0d 91       	ld	r16, X+
     650:	10 26       	eor	r1, r16
     652:	0d 91       	ld	r16, X+
     654:	20 26       	eor	r2, r16
     656:	0d 91       	ld	r16, X+
     658:	30 26       	eor	r3, r16
     65a:	0d 91       	ld	r16, X+
     65c:	40 26       	eor	r4, r16
     65e:	0d 91       	ld	r16, X+
     660:	50 26       	eor	r5, r16
     662:	0d 91       	ld	r16, X+
     664:	60 26       	eor	r6, r16
     666:	0d 91       	ld	r16, X+
     668:	70 26       	eor	r7, r16
     66a:	0d 91       	ld	r16, X+
     66c:	80 26       	eor	r8, r16
     66e:	0d 91       	ld	r16, X+
     670:	90 26       	eor	r9, r16
     672:	0d 91       	ld	r16, X+
     674:	a0 26       	eor	r10, r16
     676:	0d 91       	ld	r16, X+
     678:	b0 26       	eor	r11, r16
     67a:	0d 91       	ld	r16, X+
     67c:	c0 26       	eor	r12, r16
     67e:	0d 91       	ld	r16, X+
     680:	d0 26       	eor	r13, r16
     682:	0d 91       	ld	r16, X+
     684:	e0 26       	eor	r14, r16
     686:	0d 91       	ld	r16, X+
     688:	f0 26       	eor	r15, r16
	
	//3 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     68a:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     68c:	10 81       	ld	r17, Z
	mov M2, M1
     68e:	21 2f       	mov	r18, r17
	mov M3, M2 
     690:	32 2f       	mov	r19, r18
	mov r28, ST00
     692:	c0 2d       	mov	r28, r0
	ld  M0, Y
     694:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     696:	30 27       	eor	r19, r16

	mov r30, ST11
     698:	e5 2d       	mov	r30, r5
	ld  T0, Z
     69a:	40 81       	ld	r20, Z
	eor M0, T0
     69c:	04 27       	eor	r16, r20
	eor M2, T0
     69e:	24 27       	eor	r18, r20
	eor M3, T0 
     6a0:	34 27       	eor	r19, r20
	mov r28, ST11
     6a2:	c5 2d       	mov	r28, r5
	ld  T0, Y
     6a4:	48 81       	ld	r20, Y
	eor M0, T0
     6a6:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     6a8:	14 27       	eor	r17, r20

	mov r30, ST22
     6aa:	ea 2d       	mov	r30, r10
	ld  T0, Z
     6ac:	40 81       	ld	r20, Z
	eor M0, T0
     6ae:	04 27       	eor	r16, r20
	eor M1, T0
     6b0:	14 27       	eor	r17, r20
	eor M3, T0
     6b2:	34 27       	eor	r19, r20
	mov r28, ST22
     6b4:	ca 2d       	mov	r28, r10
	ld  T0, Y
     6b6:	48 81       	ld	r20, Y
	eor M1, T0
     6b8:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     6ba:	24 27       	eor	r18, r20

	mov r30, ST33
     6bc:	ef 2d       	mov	r30, r15
	ld  T0, Z
     6be:	40 81       	ld	r20, Z
	eor M0, T0
     6c0:	04 27       	eor	r16, r20
	eor M1, T0
     6c2:	14 27       	eor	r17, r20
	eor M2, T0 
     6c4:	24 27       	eor	r18, r20
	mov r28, ST33
     6c6:	cf 2d       	mov	r28, r15
	ld  T0, Y
     6c8:	48 81       	ld	r20, Y
	eor M2, T0
     6ca:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     6cc:	34 27       	eor	r19, r20

	mov ST00, M0
     6ce:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     6d0:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     6d2:	50 81       	ld	r21, Z
	mov T2, T1
     6d4:	65 2f       	mov	r22, r21
	mov T3, T2 
     6d6:	76 2f       	mov	r23, r22
	mov r28, ST10
     6d8:	c4 2d       	mov	r28, r4
	ld  T0, Y
     6da:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     6dc:	74 27       	eor	r23, r20

	mov r30, ST21
     6de:	e9 2d       	mov	r30, r9
	ld  M0, Z
     6e0:	00 81       	ld	r16, Z
	eor T0, M0
     6e2:	40 27       	eor	r20, r16
	eor T2, M0
     6e4:	60 27       	eor	r22, r16
	eor T3, M0 
     6e6:	70 27       	eor	r23, r16
	mov r28, ST21
     6e8:	c9 2d       	mov	r28, r9
	ld  M0, Y
     6ea:	08 81       	ld	r16, Y
	eor T0, M0
     6ec:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     6ee:	50 27       	eor	r21, r16

	mov r30, ST32
     6f0:	ee 2d       	mov	r30, r14
	ld  M0, Z
     6f2:	00 81       	ld	r16, Z
	eor T0, M0
     6f4:	40 27       	eor	r20, r16
	eor T1, M0
     6f6:	50 27       	eor	r21, r16
	eor T3, M0 
     6f8:	70 27       	eor	r23, r16
	mov r28, ST32
     6fa:	ce 2d       	mov	r28, r14
	ld  M0, Y
     6fc:	08 81       	ld	r16, Y
	eor T1, M0
     6fe:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     700:	60 27       	eor	r22, r16

	mov r30, ST03
     702:	e3 2d       	mov	r30, r3
	ld  M0, Z
     704:	00 81       	ld	r16, Z
	eor T0, M0
     706:	40 27       	eor	r20, r16
	eor T1, M0
     708:	50 27       	eor	r21, r16
	eor T2, M0 
     70a:	60 27       	eor	r22, r16
	mov r28, ST03
     70c:	c3 2d       	mov	r28, r3
	ld  M0, Y
     70e:	08 81       	ld	r16, Y
	eor T2, M0
     710:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     712:	70 27       	eor	r23, r16

	mov ST10, T0
     714:	44 2e       	mov	r4, r20
	mov ST11, T1
     716:	55 2e       	mov	r5, r21
	mov ST03, M3
     718:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     71a:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     71c:	40 81       	ld	r20, Z
	mov T1, T0
     71e:	54 2f       	mov	r21, r20
	mov M3, T1 
     720:	35 2f       	mov	r19, r21
	mov r28, ST20
     722:	c8 2d       	mov	r28, r8
	ld  M0, Y
     724:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     726:	30 27       	eor	r19, r16

	mov r30, ST31
     728:	ed 2d       	mov	r30, r13
	ld  r25, Z
     72a:	90 81       	ld	r25, Z
	eor M0, r25
     72c:	09 27       	eor	r16, r25
	eor T1, r25
     72e:	59 27       	eor	r21, r25
	eor M3, r25
     730:	39 27       	eor	r19, r25
	mov r28, ST31
     732:	cd 2d       	mov	r28, r13
	ld  r25, Y
     734:	98 81       	ld	r25, Y
	eor M0, r25
     736:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     738:	49 27       	eor	r20, r25

	mov r30, ST02
     73a:	e2 2d       	mov	r30, r2
	ld  r25, Z
     73c:	90 81       	ld	r25, Z
	eor M0, r25
     73e:	09 27       	eor	r16, r25
	eor T0, r25
     740:	49 27       	eor	r20, r25
	eor M3, r25
     742:	39 27       	eor	r19, r25
	mov r28, ST02
     744:	c2 2d       	mov	r28, r2
	ld  r25, Y
     746:	98 81       	ld	r25, Y
	eor T0, r25
     748:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     74a:	59 27       	eor	r21, r25

	mov r30, ST13
     74c:	e7 2d       	mov	r30, r7
	ld  r25, Z
     74e:	90 81       	ld	r25, Z
	eor M0, r25
     750:	09 27       	eor	r16, r25
	eor T0, r25
     752:	49 27       	eor	r20, r25
	eor T1, r25 
     754:	59 27       	eor	r21, r25
	mov r28, ST13
     756:	c7 2d       	mov	r28, r7
	ld  r25, Y
     758:	98 81       	ld	r25, Y
	eor T1, r25
     75a:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     75c:	39 27       	eor	r19, r25

	mov ST20, M0
     75e:	80 2e       	mov	r8, r16
	mov ST21, T0
     760:	94 2e       	mov	r9, r20
	mov ST22, T1
     762:	a5 2e       	mov	r10, r21
	mov ST13, T3
     764:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     766:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     768:	50 81       	ld	r21, Z
	mov T3, T1
     76a:	75 2f       	mov	r23, r21
	mov r25, T3 
     76c:	97 2f       	mov	r25, r23
	mov r28, ST30
     76e:	cc 2d       	mov	r28, r12
	ld  T0, Y
     770:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     772:	94 27       	eor	r25, r20

	mov r30, ST01
     774:	e1 2d       	mov	r30, r1
	ld  M0, Z
     776:	00 81       	ld	r16, Z
	eor T0, M0
     778:	40 27       	eor	r20, r16
	eor T3, M0
     77a:	70 27       	eor	r23, r16
	eor r25, M0 
     77c:	90 27       	eor	r25, r16
	mov r28, ST01
     77e:	c1 2d       	mov	r28, r1
	ld  M0, Y
     780:	08 81       	ld	r16, Y
	eor T0, M0
     782:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     784:	50 27       	eor	r21, r16

	mov r30, ST12
     786:	e6 2d       	mov	r30, r6
	ld  M0, Z
     788:	00 81       	ld	r16, Z
	eor T0, M0
     78a:	40 27       	eor	r20, r16
	eor T1, M0
     78c:	50 27       	eor	r21, r16
	eor r25, M0 
     78e:	90 27       	eor	r25, r16
	mov r28, ST12
     790:	c6 2d       	mov	r28, r6
	ld  M0, Y
     792:	08 81       	ld	r16, Y
	eor T1, M0
     794:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     796:	70 27       	eor	r23, r16

	mov r30, ST23
     798:	eb 2d       	mov	r30, r11
	ld  M0, Z
     79a:	00 81       	ld	r16, Z
	eor T0, M0
     79c:	40 27       	eor	r20, r16
	eor T1, M0
     79e:	50 27       	eor	r21, r16
	eor T3, M0 
     7a0:	70 27       	eor	r23, r16
	mov r28, ST23
     7a2:	cb 2d       	mov	r28, r11
	ld  M0, Y
     7a4:	08 81       	ld	r16, Y
	eor T3, M0
     7a6:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     7a8:	90 27       	eor	r25, r16

	mov ST30, T0
     7aa:	c4 2e       	mov	r12, r20
	mov ST31, T1
     7ac:	d5 2e       	mov	r13, r21
	mov ST32, T3
     7ae:	e7 2e       	mov	r14, r23
	mov ST33, r25
     7b0:	f9 2e       	mov	r15, r25
	mov ST01, M1
     7b2:	11 2e       	mov	r1, r17
	mov ST02, M2
     7b4:	22 2e       	mov	r2, r18
	mov ST12, T2
     7b6:	66 2e       	mov	r6, r22
	mov ST23, M3
     7b8:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     7ba:	0d 91       	ld	r16, X+
     7bc:	00 26       	eor	r0, r16
     7be:	0d 91       	ld	r16, X+
     7c0:	10 26       	eor	r1, r16
     7c2:	0d 91       	ld	r16, X+
     7c4:	20 26       	eor	r2, r16
     7c6:	0d 91       	ld	r16, X+
     7c8:	30 26       	eor	r3, r16
     7ca:	0d 91       	ld	r16, X+
     7cc:	40 26       	eor	r4, r16
     7ce:	0d 91       	ld	r16, X+
     7d0:	50 26       	eor	r5, r16
     7d2:	0d 91       	ld	r16, X+
     7d4:	60 26       	eor	r6, r16
     7d6:	0d 91       	ld	r16, X+
     7d8:	70 26       	eor	r7, r16
     7da:	0d 91       	ld	r16, X+
     7dc:	80 26       	eor	r8, r16
     7de:	0d 91       	ld	r16, X+
     7e0:	90 26       	eor	r9, r16
     7e2:	0d 91       	ld	r16, X+
     7e4:	a0 26       	eor	r10, r16
     7e6:	0d 91       	ld	r16, X+
     7e8:	b0 26       	eor	r11, r16
     7ea:	0d 91       	ld	r16, X+
     7ec:	c0 26       	eor	r12, r16
     7ee:	0d 91       	ld	r16, X+
     7f0:	d0 26       	eor	r13, r16
     7f2:	0d 91       	ld	r16, X+
     7f4:	e0 26       	eor	r14, r16
     7f6:	0d 91       	ld	r16, X+
     7f8:	f0 26       	eor	r15, r16
	
	//4 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     7fa:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     7fc:	10 81       	ld	r17, Z
	mov M2, M1
     7fe:	21 2f       	mov	r18, r17
	mov M3, M2 
     800:	32 2f       	mov	r19, r18
	mov r28, ST00
     802:	c0 2d       	mov	r28, r0
	ld  M0, Y
     804:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     806:	30 27       	eor	r19, r16

	mov r30, ST11
     808:	e5 2d       	mov	r30, r5
	ld  T0, Z
     80a:	40 81       	ld	r20, Z
	eor M0, T0
     80c:	04 27       	eor	r16, r20
	eor M2, T0
     80e:	24 27       	eor	r18, r20
	eor M3, T0 
     810:	34 27       	eor	r19, r20
	mov r28, ST11
     812:	c5 2d       	mov	r28, r5
	ld  T0, Y
     814:	48 81       	ld	r20, Y
	eor M0, T0
     816:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     818:	14 27       	eor	r17, r20

	mov r30, ST22
     81a:	ea 2d       	mov	r30, r10
	ld  T0, Z
     81c:	40 81       	ld	r20, Z
	eor M0, T0
     81e:	04 27       	eor	r16, r20
	eor M1, T0
     820:	14 27       	eor	r17, r20
	eor M3, T0
     822:	34 27       	eor	r19, r20
	mov r28, ST22
     824:	ca 2d       	mov	r28, r10
	ld  T0, Y
     826:	48 81       	ld	r20, Y
	eor M1, T0
     828:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     82a:	24 27       	eor	r18, r20

	mov r30, ST33
     82c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     82e:	40 81       	ld	r20, Z
	eor M0, T0
     830:	04 27       	eor	r16, r20
	eor M1, T0
     832:	14 27       	eor	r17, r20
	eor M2, T0 
     834:	24 27       	eor	r18, r20
	mov r28, ST33
     836:	cf 2d       	mov	r28, r15
	ld  T0, Y
     838:	48 81       	ld	r20, Y
	eor M2, T0
     83a:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     83c:	34 27       	eor	r19, r20

	mov ST00, M0
     83e:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     840:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     842:	50 81       	ld	r21, Z
	mov T2, T1
     844:	65 2f       	mov	r22, r21
	mov T3, T2 
     846:	76 2f       	mov	r23, r22
	mov r28, ST10
     848:	c4 2d       	mov	r28, r4
	ld  T0, Y
     84a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     84c:	74 27       	eor	r23, r20

	mov r30, ST21
     84e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     850:	00 81       	ld	r16, Z
	eor T0, M0
     852:	40 27       	eor	r20, r16
	eor T2, M0
     854:	60 27       	eor	r22, r16
	eor T3, M0 
     856:	70 27       	eor	r23, r16
	mov r28, ST21
     858:	c9 2d       	mov	r28, r9
	ld  M0, Y
     85a:	08 81       	ld	r16, Y
	eor T0, M0
     85c:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     85e:	50 27       	eor	r21, r16

	mov r30, ST32
     860:	ee 2d       	mov	r30, r14
	ld  M0, Z
     862:	00 81       	ld	r16, Z
	eor T0, M0
     864:	40 27       	eor	r20, r16
	eor T1, M0
     866:	50 27       	eor	r21, r16
	eor T3, M0 
     868:	70 27       	eor	r23, r16
	mov r28, ST32
     86a:	ce 2d       	mov	r28, r14
	ld  M0, Y
     86c:	08 81       	ld	r16, Y
	eor T1, M0
     86e:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     870:	60 27       	eor	r22, r16

	mov r30, ST03
     872:	e3 2d       	mov	r30, r3
	ld  M0, Z
     874:	00 81       	ld	r16, Z
	eor T0, M0
     876:	40 27       	eor	r20, r16
	eor T1, M0
     878:	50 27       	eor	r21, r16
	eor T2, M0 
     87a:	60 27       	eor	r22, r16
	mov r28, ST03
     87c:	c3 2d       	mov	r28, r3
	ld  M0, Y
     87e:	08 81       	ld	r16, Y
	eor T2, M0
     880:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     882:	70 27       	eor	r23, r16

	mov ST10, T0
     884:	44 2e       	mov	r4, r20
	mov ST11, T1
     886:	55 2e       	mov	r5, r21
	mov ST03, M3
     888:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     88a:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     88c:	40 81       	ld	r20, Z
	mov T1, T0
     88e:	54 2f       	mov	r21, r20
	mov M3, T1 
     890:	35 2f       	mov	r19, r21
	mov r28, ST20
     892:	c8 2d       	mov	r28, r8
	ld  M0, Y
     894:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     896:	30 27       	eor	r19, r16

	mov r30, ST31
     898:	ed 2d       	mov	r30, r13
	ld  r25, Z
     89a:	90 81       	ld	r25, Z
	eor M0, r25
     89c:	09 27       	eor	r16, r25
	eor T1, r25
     89e:	59 27       	eor	r21, r25
	eor M3, r25
     8a0:	39 27       	eor	r19, r25
	mov r28, ST31
     8a2:	cd 2d       	mov	r28, r13
	ld  r25, Y
     8a4:	98 81       	ld	r25, Y
	eor M0, r25
     8a6:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     8a8:	49 27       	eor	r20, r25

	mov r30, ST02
     8aa:	e2 2d       	mov	r30, r2
	ld  r25, Z
     8ac:	90 81       	ld	r25, Z
	eor M0, r25
     8ae:	09 27       	eor	r16, r25
	eor T0, r25
     8b0:	49 27       	eor	r20, r25
	eor M3, r25
     8b2:	39 27       	eor	r19, r25
	mov r28, ST02
     8b4:	c2 2d       	mov	r28, r2
	ld  r25, Y
     8b6:	98 81       	ld	r25, Y
	eor T0, r25
     8b8:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     8ba:	59 27       	eor	r21, r25

	mov r30, ST13
     8bc:	e7 2d       	mov	r30, r7
	ld  r25, Z
     8be:	90 81       	ld	r25, Z
	eor M0, r25
     8c0:	09 27       	eor	r16, r25
	eor T0, r25
     8c2:	49 27       	eor	r20, r25
	eor T1, r25 
     8c4:	59 27       	eor	r21, r25
	mov r28, ST13
     8c6:	c7 2d       	mov	r28, r7
	ld  r25, Y
     8c8:	98 81       	ld	r25, Y
	eor T1, r25
     8ca:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     8cc:	39 27       	eor	r19, r25

	mov ST20, M0
     8ce:	80 2e       	mov	r8, r16
	mov ST21, T0
     8d0:	94 2e       	mov	r9, r20
	mov ST22, T1
     8d2:	a5 2e       	mov	r10, r21
	mov ST13, T3
     8d4:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     8d6:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     8d8:	50 81       	ld	r21, Z
	mov T3, T1
     8da:	75 2f       	mov	r23, r21
	mov r25, T3 
     8dc:	97 2f       	mov	r25, r23
	mov r28, ST30
     8de:	cc 2d       	mov	r28, r12
	ld  T0, Y
     8e0:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     8e2:	94 27       	eor	r25, r20

	mov r30, ST01
     8e4:	e1 2d       	mov	r30, r1
	ld  M0, Z
     8e6:	00 81       	ld	r16, Z
	eor T0, M0
     8e8:	40 27       	eor	r20, r16
	eor T3, M0
     8ea:	70 27       	eor	r23, r16
	eor r25, M0 
     8ec:	90 27       	eor	r25, r16
	mov r28, ST01
     8ee:	c1 2d       	mov	r28, r1
	ld  M0, Y
     8f0:	08 81       	ld	r16, Y
	eor T0, M0
     8f2:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     8f4:	50 27       	eor	r21, r16

	mov r30, ST12
     8f6:	e6 2d       	mov	r30, r6
	ld  M0, Z
     8f8:	00 81       	ld	r16, Z
	eor T0, M0
     8fa:	40 27       	eor	r20, r16
	eor T1, M0
     8fc:	50 27       	eor	r21, r16
	eor r25, M0 
     8fe:	90 27       	eor	r25, r16
	mov r28, ST12
     900:	c6 2d       	mov	r28, r6
	ld  M0, Y
     902:	08 81       	ld	r16, Y
	eor T1, M0
     904:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     906:	70 27       	eor	r23, r16

	mov r30, ST23
     908:	eb 2d       	mov	r30, r11
	ld  M0, Z
     90a:	00 81       	ld	r16, Z
	eor T0, M0
     90c:	40 27       	eor	r20, r16
	eor T1, M0
     90e:	50 27       	eor	r21, r16
	eor T3, M0 
     910:	70 27       	eor	r23, r16
	mov r28, ST23
     912:	cb 2d       	mov	r28, r11
	ld  M0, Y
     914:	08 81       	ld	r16, Y
	eor T3, M0
     916:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     918:	90 27       	eor	r25, r16

	mov ST30, T0
     91a:	c4 2e       	mov	r12, r20
	mov ST31, T1
     91c:	d5 2e       	mov	r13, r21
	mov ST32, T3
     91e:	e7 2e       	mov	r14, r23
	mov ST33, r25
     920:	f9 2e       	mov	r15, r25
	mov ST01, M1
     922:	11 2e       	mov	r1, r17
	mov ST02, M2
     924:	22 2e       	mov	r2, r18
	mov ST12, T2
     926:	66 2e       	mov	r6, r22
	mov ST23, M3
     928:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     92a:	0d 91       	ld	r16, X+
     92c:	00 26       	eor	r0, r16
     92e:	0d 91       	ld	r16, X+
     930:	10 26       	eor	r1, r16
     932:	0d 91       	ld	r16, X+
     934:	20 26       	eor	r2, r16
     936:	0d 91       	ld	r16, X+
     938:	30 26       	eor	r3, r16
     93a:	0d 91       	ld	r16, X+
     93c:	40 26       	eor	r4, r16
     93e:	0d 91       	ld	r16, X+
     940:	50 26       	eor	r5, r16
     942:	0d 91       	ld	r16, X+
     944:	60 26       	eor	r6, r16
     946:	0d 91       	ld	r16, X+
     948:	70 26       	eor	r7, r16
     94a:	0d 91       	ld	r16, X+
     94c:	80 26       	eor	r8, r16
     94e:	0d 91       	ld	r16, X+
     950:	90 26       	eor	r9, r16
     952:	0d 91       	ld	r16, X+
     954:	a0 26       	eor	r10, r16
     956:	0d 91       	ld	r16, X+
     958:	b0 26       	eor	r11, r16
     95a:	0d 91       	ld	r16, X+
     95c:	c0 26       	eor	r12, r16
     95e:	0d 91       	ld	r16, X+
     960:	d0 26       	eor	r13, r16
     962:	0d 91       	ld	r16, X+
     964:	e0 26       	eor	r14, r16
     966:	0d 91       	ld	r16, X+
     968:	f0 26       	eor	r15, r16
	
	//5 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     96a:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     96c:	10 81       	ld	r17, Z
	mov M2, M1
     96e:	21 2f       	mov	r18, r17
	mov M3, M2 
     970:	32 2f       	mov	r19, r18
	mov r28, ST00
     972:	c0 2d       	mov	r28, r0
	ld  M0, Y
     974:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     976:	30 27       	eor	r19, r16

	mov r30, ST11
     978:	e5 2d       	mov	r30, r5
	ld  T0, Z
     97a:	40 81       	ld	r20, Z
	eor M0, T0
     97c:	04 27       	eor	r16, r20
	eor M2, T0
     97e:	24 27       	eor	r18, r20
	eor M3, T0 
     980:	34 27       	eor	r19, r20
	mov r28, ST11
     982:	c5 2d       	mov	r28, r5
	ld  T0, Y
     984:	48 81       	ld	r20, Y
	eor M0, T0
     986:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     988:	14 27       	eor	r17, r20

	mov r30, ST22
     98a:	ea 2d       	mov	r30, r10
	ld  T0, Z
     98c:	40 81       	ld	r20, Z
	eor M0, T0
     98e:	04 27       	eor	r16, r20
	eor M1, T0
     990:	14 27       	eor	r17, r20
	eor M3, T0
     992:	34 27       	eor	r19, r20
	mov r28, ST22
     994:	ca 2d       	mov	r28, r10
	ld  T0, Y
     996:	48 81       	ld	r20, Y
	eor M1, T0
     998:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     99a:	24 27       	eor	r18, r20

	mov r30, ST33
     99c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     99e:	40 81       	ld	r20, Z
	eor M0, T0
     9a0:	04 27       	eor	r16, r20
	eor M1, T0
     9a2:	14 27       	eor	r17, r20
	eor M2, T0 
     9a4:	24 27       	eor	r18, r20
	mov r28, ST33
     9a6:	cf 2d       	mov	r28, r15
	ld  T0, Y
     9a8:	48 81       	ld	r20, Y
	eor M2, T0
     9aa:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     9ac:	34 27       	eor	r19, r20

	mov ST00, M0
     9ae:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     9b0:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     9b2:	50 81       	ld	r21, Z
	mov T2, T1
     9b4:	65 2f       	mov	r22, r21
	mov T3, T2 
     9b6:	76 2f       	mov	r23, r22
	mov r28, ST10
     9b8:	c4 2d       	mov	r28, r4
	ld  T0, Y
     9ba:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     9bc:	74 27       	eor	r23, r20

	mov r30, ST21
     9be:	e9 2d       	mov	r30, r9
	ld  M0, Z
     9c0:	00 81       	ld	r16, Z
	eor T0, M0
     9c2:	40 27       	eor	r20, r16
	eor T2, M0
     9c4:	60 27       	eor	r22, r16
	eor T3, M0 
     9c6:	70 27       	eor	r23, r16
	mov r28, ST21
     9c8:	c9 2d       	mov	r28, r9
	ld  M0, Y
     9ca:	08 81       	ld	r16, Y
	eor T0, M0
     9cc:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     9ce:	50 27       	eor	r21, r16

	mov r30, ST32
     9d0:	ee 2d       	mov	r30, r14
	ld  M0, Z
     9d2:	00 81       	ld	r16, Z
	eor T0, M0
     9d4:	40 27       	eor	r20, r16
	eor T1, M0
     9d6:	50 27       	eor	r21, r16
	eor T3, M0 
     9d8:	70 27       	eor	r23, r16
	mov r28, ST32
     9da:	ce 2d       	mov	r28, r14
	ld  M0, Y
     9dc:	08 81       	ld	r16, Y
	eor T1, M0
     9de:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     9e0:	60 27       	eor	r22, r16

	mov r30, ST03
     9e2:	e3 2d       	mov	r30, r3
	ld  M0, Z
     9e4:	00 81       	ld	r16, Z
	eor T0, M0
     9e6:	40 27       	eor	r20, r16
	eor T1, M0
     9e8:	50 27       	eor	r21, r16
	eor T2, M0 
     9ea:	60 27       	eor	r22, r16
	mov r28, ST03
     9ec:	c3 2d       	mov	r28, r3
	ld  M0, Y
     9ee:	08 81       	ld	r16, Y
	eor T2, M0
     9f0:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     9f2:	70 27       	eor	r23, r16

	mov ST10, T0
     9f4:	44 2e       	mov	r4, r20
	mov ST11, T1
     9f6:	55 2e       	mov	r5, r21
	mov ST03, M3
     9f8:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     9fa:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     9fc:	40 81       	ld	r20, Z
	mov T1, T0
     9fe:	54 2f       	mov	r21, r20
	mov M3, T1 
     a00:	35 2f       	mov	r19, r21
	mov r28, ST20
     a02:	c8 2d       	mov	r28, r8
	ld  M0, Y
     a04:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     a06:	30 27       	eor	r19, r16

	mov r30, ST31
     a08:	ed 2d       	mov	r30, r13
	ld  r25, Z
     a0a:	90 81       	ld	r25, Z
	eor M0, r25
     a0c:	09 27       	eor	r16, r25
	eor T1, r25
     a0e:	59 27       	eor	r21, r25
	eor M3, r25
     a10:	39 27       	eor	r19, r25
	mov r28, ST31
     a12:	cd 2d       	mov	r28, r13
	ld  r25, Y
     a14:	98 81       	ld	r25, Y
	eor M0, r25
     a16:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     a18:	49 27       	eor	r20, r25

	mov r30, ST02
     a1a:	e2 2d       	mov	r30, r2
	ld  r25, Z
     a1c:	90 81       	ld	r25, Z
	eor M0, r25
     a1e:	09 27       	eor	r16, r25
	eor T0, r25
     a20:	49 27       	eor	r20, r25
	eor M3, r25
     a22:	39 27       	eor	r19, r25
	mov r28, ST02
     a24:	c2 2d       	mov	r28, r2
	ld  r25, Y
     a26:	98 81       	ld	r25, Y
	eor T0, r25
     a28:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     a2a:	59 27       	eor	r21, r25

	mov r30, ST13
     a2c:	e7 2d       	mov	r30, r7
	ld  r25, Z
     a2e:	90 81       	ld	r25, Z
	eor M0, r25
     a30:	09 27       	eor	r16, r25
	eor T0, r25
     a32:	49 27       	eor	r20, r25
	eor T1, r25 
     a34:	59 27       	eor	r21, r25
	mov r28, ST13
     a36:	c7 2d       	mov	r28, r7
	ld  r25, Y
     a38:	98 81       	ld	r25, Y
	eor T1, r25
     a3a:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     a3c:	39 27       	eor	r19, r25

	mov ST20, M0
     a3e:	80 2e       	mov	r8, r16
	mov ST21, T0
     a40:	94 2e       	mov	r9, r20
	mov ST22, T1
     a42:	a5 2e       	mov	r10, r21
	mov ST13, T3
     a44:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     a46:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     a48:	50 81       	ld	r21, Z
	mov T3, T1
     a4a:	75 2f       	mov	r23, r21
	mov r25, T3 
     a4c:	97 2f       	mov	r25, r23
	mov r28, ST30
     a4e:	cc 2d       	mov	r28, r12
	ld  T0, Y
     a50:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     a52:	94 27       	eor	r25, r20

	mov r30, ST01
     a54:	e1 2d       	mov	r30, r1
	ld  M0, Z
     a56:	00 81       	ld	r16, Z
	eor T0, M0
     a58:	40 27       	eor	r20, r16
	eor T3, M0
     a5a:	70 27       	eor	r23, r16
	eor r25, M0 
     a5c:	90 27       	eor	r25, r16
	mov r28, ST01
     a5e:	c1 2d       	mov	r28, r1
	ld  M0, Y
     a60:	08 81       	ld	r16, Y
	eor T0, M0
     a62:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     a64:	50 27       	eor	r21, r16

	mov r30, ST12
     a66:	e6 2d       	mov	r30, r6
	ld  M0, Z
     a68:	00 81       	ld	r16, Z
	eor T0, M0
     a6a:	40 27       	eor	r20, r16
	eor T1, M0
     a6c:	50 27       	eor	r21, r16
	eor r25, M0 
     a6e:	90 27       	eor	r25, r16
	mov r28, ST12
     a70:	c6 2d       	mov	r28, r6
	ld  M0, Y
     a72:	08 81       	ld	r16, Y
	eor T1, M0
     a74:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     a76:	70 27       	eor	r23, r16

	mov r30, ST23
     a78:	eb 2d       	mov	r30, r11
	ld  M0, Z
     a7a:	00 81       	ld	r16, Z
	eor T0, M0
     a7c:	40 27       	eor	r20, r16
	eor T1, M0
     a7e:	50 27       	eor	r21, r16
	eor T3, M0 
     a80:	70 27       	eor	r23, r16
	mov r28, ST23
     a82:	cb 2d       	mov	r28, r11
	ld  M0, Y
     a84:	08 81       	ld	r16, Y
	eor T3, M0
     a86:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     a88:	90 27       	eor	r25, r16

	mov ST30, T0
     a8a:	c4 2e       	mov	r12, r20
	mov ST31, T1
     a8c:	d5 2e       	mov	r13, r21
	mov ST32, T3
     a8e:	e7 2e       	mov	r14, r23
	mov ST33, r25
     a90:	f9 2e       	mov	r15, r25
	mov ST01, M1
     a92:	11 2e       	mov	r1, r17
	mov ST02, M2
     a94:	22 2e       	mov	r2, r18
	mov ST12, T2
     a96:	66 2e       	mov	r6, r22
	mov ST23, M3
     a98:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     a9a:	0d 91       	ld	r16, X+
     a9c:	00 26       	eor	r0, r16
     a9e:	0d 91       	ld	r16, X+
     aa0:	10 26       	eor	r1, r16
     aa2:	0d 91       	ld	r16, X+
     aa4:	20 26       	eor	r2, r16
     aa6:	0d 91       	ld	r16, X+
     aa8:	30 26       	eor	r3, r16
     aaa:	0d 91       	ld	r16, X+
     aac:	40 26       	eor	r4, r16
     aae:	0d 91       	ld	r16, X+
     ab0:	50 26       	eor	r5, r16
     ab2:	0d 91       	ld	r16, X+
     ab4:	60 26       	eor	r6, r16
     ab6:	0d 91       	ld	r16, X+
     ab8:	70 26       	eor	r7, r16
     aba:	0d 91       	ld	r16, X+
     abc:	80 26       	eor	r8, r16
     abe:	0d 91       	ld	r16, X+
     ac0:	90 26       	eor	r9, r16
     ac2:	0d 91       	ld	r16, X+
     ac4:	a0 26       	eor	r10, r16
     ac6:	0d 91       	ld	r16, X+
     ac8:	b0 26       	eor	r11, r16
     aca:	0d 91       	ld	r16, X+
     acc:	c0 26       	eor	r12, r16
     ace:	0d 91       	ld	r16, X+
     ad0:	d0 26       	eor	r13, r16
     ad2:	0d 91       	ld	r16, X+
     ad4:	e0 26       	eor	r14, r16
     ad6:	0d 91       	ld	r16, X+
     ad8:	f0 26       	eor	r15, r16
	
	//6 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     ada:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     adc:	10 81       	ld	r17, Z
	mov M2, M1
     ade:	21 2f       	mov	r18, r17
	mov M3, M2 
     ae0:	32 2f       	mov	r19, r18
	mov r28, ST00
     ae2:	c0 2d       	mov	r28, r0
	ld  M0, Y
     ae4:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     ae6:	30 27       	eor	r19, r16

	mov r30, ST11
     ae8:	e5 2d       	mov	r30, r5
	ld  T0, Z
     aea:	40 81       	ld	r20, Z
	eor M0, T0
     aec:	04 27       	eor	r16, r20
	eor M2, T0
     aee:	24 27       	eor	r18, r20
	eor M3, T0 
     af0:	34 27       	eor	r19, r20
	mov r28, ST11
     af2:	c5 2d       	mov	r28, r5
	ld  T0, Y
     af4:	48 81       	ld	r20, Y
	eor M0, T0
     af6:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     af8:	14 27       	eor	r17, r20

	mov r30, ST22
     afa:	ea 2d       	mov	r30, r10
	ld  T0, Z
     afc:	40 81       	ld	r20, Z
	eor M0, T0
     afe:	04 27       	eor	r16, r20
	eor M1, T0
     b00:	14 27       	eor	r17, r20
	eor M3, T0
     b02:	34 27       	eor	r19, r20
	mov r28, ST22
     b04:	ca 2d       	mov	r28, r10
	ld  T0, Y
     b06:	48 81       	ld	r20, Y
	eor M1, T0
     b08:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     b0a:	24 27       	eor	r18, r20

	mov r30, ST33
     b0c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     b0e:	40 81       	ld	r20, Z
	eor M0, T0
     b10:	04 27       	eor	r16, r20
	eor M1, T0
     b12:	14 27       	eor	r17, r20
	eor M2, T0 
     b14:	24 27       	eor	r18, r20
	mov r28, ST33
     b16:	cf 2d       	mov	r28, r15
	ld  T0, Y
     b18:	48 81       	ld	r20, Y
	eor M2, T0
     b1a:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     b1c:	34 27       	eor	r19, r20

	mov ST00, M0
     b1e:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     b20:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     b22:	50 81       	ld	r21, Z
	mov T2, T1
     b24:	65 2f       	mov	r22, r21
	mov T3, T2 
     b26:	76 2f       	mov	r23, r22
	mov r28, ST10
     b28:	c4 2d       	mov	r28, r4
	ld  T0, Y
     b2a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     b2c:	74 27       	eor	r23, r20

	mov r30, ST21
     b2e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     b30:	00 81       	ld	r16, Z
	eor T0, M0
     b32:	40 27       	eor	r20, r16
	eor T2, M0
     b34:	60 27       	eor	r22, r16
	eor T3, M0 
     b36:	70 27       	eor	r23, r16
	mov r28, ST21
     b38:	c9 2d       	mov	r28, r9
	ld  M0, Y
     b3a:	08 81       	ld	r16, Y
	eor T0, M0
     b3c:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     b3e:	50 27       	eor	r21, r16

	mov r30, ST32
     b40:	ee 2d       	mov	r30, r14
	ld  M0, Z
     b42:	00 81       	ld	r16, Z
	eor T0, M0
     b44:	40 27       	eor	r20, r16
	eor T1, M0
     b46:	50 27       	eor	r21, r16
	eor T3, M0 
     b48:	70 27       	eor	r23, r16
	mov r28, ST32
     b4a:	ce 2d       	mov	r28, r14
	ld  M0, Y
     b4c:	08 81       	ld	r16, Y
	eor T1, M0
     b4e:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     b50:	60 27       	eor	r22, r16

	mov r30, ST03
     b52:	e3 2d       	mov	r30, r3
	ld  M0, Z
     b54:	00 81       	ld	r16, Z
	eor T0, M0
     b56:	40 27       	eor	r20, r16
	eor T1, M0
     b58:	50 27       	eor	r21, r16
	eor T2, M0 
     b5a:	60 27       	eor	r22, r16
	mov r28, ST03
     b5c:	c3 2d       	mov	r28, r3
	ld  M0, Y
     b5e:	08 81       	ld	r16, Y
	eor T2, M0
     b60:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     b62:	70 27       	eor	r23, r16

	mov ST10, T0
     b64:	44 2e       	mov	r4, r20
	mov ST11, T1
     b66:	55 2e       	mov	r5, r21
	mov ST03, M3
     b68:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     b6a:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     b6c:	40 81       	ld	r20, Z
	mov T1, T0
     b6e:	54 2f       	mov	r21, r20
	mov M3, T1 
     b70:	35 2f       	mov	r19, r21
	mov r28, ST20
     b72:	c8 2d       	mov	r28, r8
	ld  M0, Y
     b74:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     b76:	30 27       	eor	r19, r16

	mov r30, ST31
     b78:	ed 2d       	mov	r30, r13
	ld  r25, Z
     b7a:	90 81       	ld	r25, Z
	eor M0, r25
     b7c:	09 27       	eor	r16, r25
	eor T1, r25
     b7e:	59 27       	eor	r21, r25
	eor M3, r25
     b80:	39 27       	eor	r19, r25
	mov r28, ST31
     b82:	cd 2d       	mov	r28, r13
	ld  r25, Y
     b84:	98 81       	ld	r25, Y
	eor M0, r25
     b86:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     b88:	49 27       	eor	r20, r25

	mov r30, ST02
     b8a:	e2 2d       	mov	r30, r2
	ld  r25, Z
     b8c:	90 81       	ld	r25, Z
	eor M0, r25
     b8e:	09 27       	eor	r16, r25
	eor T0, r25
     b90:	49 27       	eor	r20, r25
	eor M3, r25
     b92:	39 27       	eor	r19, r25
	mov r28, ST02
     b94:	c2 2d       	mov	r28, r2
	ld  r25, Y
     b96:	98 81       	ld	r25, Y
	eor T0, r25
     b98:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     b9a:	59 27       	eor	r21, r25

	mov r30, ST13
     b9c:	e7 2d       	mov	r30, r7
	ld  r25, Z
     b9e:	90 81       	ld	r25, Z
	eor M0, r25
     ba0:	09 27       	eor	r16, r25
	eor T0, r25
     ba2:	49 27       	eor	r20, r25
	eor T1, r25 
     ba4:	59 27       	eor	r21, r25
	mov r28, ST13
     ba6:	c7 2d       	mov	r28, r7
	ld  r25, Y
     ba8:	98 81       	ld	r25, Y
	eor T1, r25
     baa:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     bac:	39 27       	eor	r19, r25

	mov ST20, M0
     bae:	80 2e       	mov	r8, r16
	mov ST21, T0
     bb0:	94 2e       	mov	r9, r20
	mov ST22, T1
     bb2:	a5 2e       	mov	r10, r21
	mov ST13, T3
     bb4:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     bb6:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     bb8:	50 81       	ld	r21, Z
	mov T3, T1
     bba:	75 2f       	mov	r23, r21
	mov r25, T3 
     bbc:	97 2f       	mov	r25, r23
	mov r28, ST30
     bbe:	cc 2d       	mov	r28, r12
	ld  T0, Y
     bc0:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     bc2:	94 27       	eor	r25, r20

	mov r30, ST01
     bc4:	e1 2d       	mov	r30, r1
	ld  M0, Z
     bc6:	00 81       	ld	r16, Z
	eor T0, M0
     bc8:	40 27       	eor	r20, r16
	eor T3, M0
     bca:	70 27       	eor	r23, r16
	eor r25, M0 
     bcc:	90 27       	eor	r25, r16
	mov r28, ST01
     bce:	c1 2d       	mov	r28, r1
	ld  M0, Y
     bd0:	08 81       	ld	r16, Y
	eor T0, M0
     bd2:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     bd4:	50 27       	eor	r21, r16

	mov r30, ST12
     bd6:	e6 2d       	mov	r30, r6
	ld  M0, Z
     bd8:	00 81       	ld	r16, Z
	eor T0, M0
     bda:	40 27       	eor	r20, r16
	eor T1, M0
     bdc:	50 27       	eor	r21, r16
	eor r25, M0 
     bde:	90 27       	eor	r25, r16
	mov r28, ST12
     be0:	c6 2d       	mov	r28, r6
	ld  M0, Y
     be2:	08 81       	ld	r16, Y
	eor T1, M0
     be4:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     be6:	70 27       	eor	r23, r16

	mov r30, ST23
     be8:	eb 2d       	mov	r30, r11
	ld  M0, Z
     bea:	00 81       	ld	r16, Z
	eor T0, M0
     bec:	40 27       	eor	r20, r16
	eor T1, M0
     bee:	50 27       	eor	r21, r16
	eor T3, M0 
     bf0:	70 27       	eor	r23, r16
	mov r28, ST23
     bf2:	cb 2d       	mov	r28, r11
	ld  M0, Y
     bf4:	08 81       	ld	r16, Y
	eor T3, M0
     bf6:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     bf8:	90 27       	eor	r25, r16

	mov ST30, T0
     bfa:	c4 2e       	mov	r12, r20
	mov ST31, T1
     bfc:	d5 2e       	mov	r13, r21
	mov ST32, T3
     bfe:	e7 2e       	mov	r14, r23
	mov ST33, r25
     c00:	f9 2e       	mov	r15, r25
	mov ST01, M1
     c02:	11 2e       	mov	r1, r17
	mov ST02, M2
     c04:	22 2e       	mov	r2, r18
	mov ST12, T2
     c06:	66 2e       	mov	r6, r22
	mov ST23, M3
     c08:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     c0a:	0d 91       	ld	r16, X+
     c0c:	00 26       	eor	r0, r16
     c0e:	0d 91       	ld	r16, X+
     c10:	10 26       	eor	r1, r16
     c12:	0d 91       	ld	r16, X+
     c14:	20 26       	eor	r2, r16
     c16:	0d 91       	ld	r16, X+
     c18:	30 26       	eor	r3, r16
     c1a:	0d 91       	ld	r16, X+
     c1c:	40 26       	eor	r4, r16
     c1e:	0d 91       	ld	r16, X+
     c20:	50 26       	eor	r5, r16
     c22:	0d 91       	ld	r16, X+
     c24:	60 26       	eor	r6, r16
     c26:	0d 91       	ld	r16, X+
     c28:	70 26       	eor	r7, r16
     c2a:	0d 91       	ld	r16, X+
     c2c:	80 26       	eor	r8, r16
     c2e:	0d 91       	ld	r16, X+
     c30:	90 26       	eor	r9, r16
     c32:	0d 91       	ld	r16, X+
     c34:	a0 26       	eor	r10, r16
     c36:	0d 91       	ld	r16, X+
     c38:	b0 26       	eor	r11, r16
     c3a:	0d 91       	ld	r16, X+
     c3c:	c0 26       	eor	r12, r16
     c3e:	0d 91       	ld	r16, X+
     c40:	d0 26       	eor	r13, r16
     c42:	0d 91       	ld	r16, X+
     c44:	e0 26       	eor	r14, r16
     c46:	0d 91       	ld	r16, X+
     c48:	f0 26       	eor	r15, r16
	
	//7 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     c4a:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     c4c:	10 81       	ld	r17, Z
	mov M2, M1
     c4e:	21 2f       	mov	r18, r17
	mov M3, M2 
     c50:	32 2f       	mov	r19, r18
	mov r28, ST00
     c52:	c0 2d       	mov	r28, r0
	ld  M0, Y
     c54:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     c56:	30 27       	eor	r19, r16

	mov r30, ST11
     c58:	e5 2d       	mov	r30, r5
	ld  T0, Z
     c5a:	40 81       	ld	r20, Z
	eor M0, T0
     c5c:	04 27       	eor	r16, r20
	eor M2, T0
     c5e:	24 27       	eor	r18, r20
	eor M3, T0 
     c60:	34 27       	eor	r19, r20
	mov r28, ST11
     c62:	c5 2d       	mov	r28, r5
	ld  T0, Y
     c64:	48 81       	ld	r20, Y
	eor M0, T0
     c66:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     c68:	14 27       	eor	r17, r20

	mov r30, ST22
     c6a:	ea 2d       	mov	r30, r10
	ld  T0, Z
     c6c:	40 81       	ld	r20, Z
	eor M0, T0
     c6e:	04 27       	eor	r16, r20
	eor M1, T0
     c70:	14 27       	eor	r17, r20
	eor M3, T0
     c72:	34 27       	eor	r19, r20
	mov r28, ST22
     c74:	ca 2d       	mov	r28, r10
	ld  T0, Y
     c76:	48 81       	ld	r20, Y
	eor M1, T0
     c78:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     c7a:	24 27       	eor	r18, r20

	mov r30, ST33
     c7c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     c7e:	40 81       	ld	r20, Z
	eor M0, T0
     c80:	04 27       	eor	r16, r20
	eor M1, T0
     c82:	14 27       	eor	r17, r20
	eor M2, T0 
     c84:	24 27       	eor	r18, r20
	mov r28, ST33
     c86:	cf 2d       	mov	r28, r15
	ld  T0, Y
     c88:	48 81       	ld	r20, Y
	eor M2, T0
     c8a:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     c8c:	34 27       	eor	r19, r20

	mov ST00, M0
     c8e:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     c90:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     c92:	50 81       	ld	r21, Z
	mov T2, T1
     c94:	65 2f       	mov	r22, r21
	mov T3, T2 
     c96:	76 2f       	mov	r23, r22
	mov r28, ST10
     c98:	c4 2d       	mov	r28, r4
	ld  T0, Y
     c9a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     c9c:	74 27       	eor	r23, r20

	mov r30, ST21
     c9e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     ca0:	00 81       	ld	r16, Z
	eor T0, M0
     ca2:	40 27       	eor	r20, r16
	eor T2, M0
     ca4:	60 27       	eor	r22, r16
	eor T3, M0 
     ca6:	70 27       	eor	r23, r16
	mov r28, ST21
     ca8:	c9 2d       	mov	r28, r9
	ld  M0, Y
     caa:	08 81       	ld	r16, Y
	eor T0, M0
     cac:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     cae:	50 27       	eor	r21, r16

	mov r30, ST32
     cb0:	ee 2d       	mov	r30, r14
	ld  M0, Z
     cb2:	00 81       	ld	r16, Z
	eor T0, M0
     cb4:	40 27       	eor	r20, r16
	eor T1, M0
     cb6:	50 27       	eor	r21, r16
	eor T3, M0 
     cb8:	70 27       	eor	r23, r16
	mov r28, ST32
     cba:	ce 2d       	mov	r28, r14
	ld  M0, Y
     cbc:	08 81       	ld	r16, Y
	eor T1, M0
     cbe:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     cc0:	60 27       	eor	r22, r16

	mov r30, ST03
     cc2:	e3 2d       	mov	r30, r3
	ld  M0, Z
     cc4:	00 81       	ld	r16, Z
	eor T0, M0
     cc6:	40 27       	eor	r20, r16
	eor T1, M0
     cc8:	50 27       	eor	r21, r16
	eor T2, M0 
     cca:	60 27       	eor	r22, r16
	mov r28, ST03
     ccc:	c3 2d       	mov	r28, r3
	ld  M0, Y
     cce:	08 81       	ld	r16, Y
	eor T2, M0
     cd0:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     cd2:	70 27       	eor	r23, r16

	mov ST10, T0
     cd4:	44 2e       	mov	r4, r20
	mov ST11, T1
     cd6:	55 2e       	mov	r5, r21
	mov ST03, M3
     cd8:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     cda:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     cdc:	40 81       	ld	r20, Z
	mov T1, T0
     cde:	54 2f       	mov	r21, r20
	mov M3, T1 
     ce0:	35 2f       	mov	r19, r21
	mov r28, ST20
     ce2:	c8 2d       	mov	r28, r8
	ld  M0, Y
     ce4:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     ce6:	30 27       	eor	r19, r16

	mov r30, ST31
     ce8:	ed 2d       	mov	r30, r13
	ld  r25, Z
     cea:	90 81       	ld	r25, Z
	eor M0, r25
     cec:	09 27       	eor	r16, r25
	eor T1, r25
     cee:	59 27       	eor	r21, r25
	eor M3, r25
     cf0:	39 27       	eor	r19, r25
	mov r28, ST31
     cf2:	cd 2d       	mov	r28, r13
	ld  r25, Y
     cf4:	98 81       	ld	r25, Y
	eor M0, r25
     cf6:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     cf8:	49 27       	eor	r20, r25

	mov r30, ST02
     cfa:	e2 2d       	mov	r30, r2
	ld  r25, Z
     cfc:	90 81       	ld	r25, Z
	eor M0, r25
     cfe:	09 27       	eor	r16, r25
	eor T0, r25
     d00:	49 27       	eor	r20, r25
	eor M3, r25
     d02:	39 27       	eor	r19, r25
	mov r28, ST02
     d04:	c2 2d       	mov	r28, r2
	ld  r25, Y
     d06:	98 81       	ld	r25, Y
	eor T0, r25
     d08:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     d0a:	59 27       	eor	r21, r25

	mov r30, ST13
     d0c:	e7 2d       	mov	r30, r7
	ld  r25, Z
     d0e:	90 81       	ld	r25, Z
	eor M0, r25
     d10:	09 27       	eor	r16, r25
	eor T0, r25
     d12:	49 27       	eor	r20, r25
	eor T1, r25 
     d14:	59 27       	eor	r21, r25
	mov r28, ST13
     d16:	c7 2d       	mov	r28, r7
	ld  r25, Y
     d18:	98 81       	ld	r25, Y
	eor T1, r25
     d1a:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     d1c:	39 27       	eor	r19, r25

	mov ST20, M0
     d1e:	80 2e       	mov	r8, r16
	mov ST21, T0
     d20:	94 2e       	mov	r9, r20
	mov ST22, T1
     d22:	a5 2e       	mov	r10, r21
	mov ST13, T3
     d24:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     d26:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     d28:	50 81       	ld	r21, Z
	mov T3, T1
     d2a:	75 2f       	mov	r23, r21
	mov r25, T3 
     d2c:	97 2f       	mov	r25, r23
	mov r28, ST30
     d2e:	cc 2d       	mov	r28, r12
	ld  T0, Y
     d30:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     d32:	94 27       	eor	r25, r20

	mov r30, ST01
     d34:	e1 2d       	mov	r30, r1
	ld  M0, Z
     d36:	00 81       	ld	r16, Z
	eor T0, M0
     d38:	40 27       	eor	r20, r16
	eor T3, M0
     d3a:	70 27       	eor	r23, r16
	eor r25, M0 
     d3c:	90 27       	eor	r25, r16
	mov r28, ST01
     d3e:	c1 2d       	mov	r28, r1
	ld  M0, Y
     d40:	08 81       	ld	r16, Y
	eor T0, M0
     d42:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     d44:	50 27       	eor	r21, r16

	mov r30, ST12
     d46:	e6 2d       	mov	r30, r6
	ld  M0, Z
     d48:	00 81       	ld	r16, Z
	eor T0, M0
     d4a:	40 27       	eor	r20, r16
	eor T1, M0
     d4c:	50 27       	eor	r21, r16
	eor r25, M0 
     d4e:	90 27       	eor	r25, r16
	mov r28, ST12
     d50:	c6 2d       	mov	r28, r6
	ld  M0, Y
     d52:	08 81       	ld	r16, Y
	eor T1, M0
     d54:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     d56:	70 27       	eor	r23, r16

	mov r30, ST23
     d58:	eb 2d       	mov	r30, r11
	ld  M0, Z
     d5a:	00 81       	ld	r16, Z
	eor T0, M0
     d5c:	40 27       	eor	r20, r16
	eor T1, M0
     d5e:	50 27       	eor	r21, r16
	eor T3, M0 
     d60:	70 27       	eor	r23, r16
	mov r28, ST23
     d62:	cb 2d       	mov	r28, r11
	ld  M0, Y
     d64:	08 81       	ld	r16, Y
	eor T3, M0
     d66:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     d68:	90 27       	eor	r25, r16

	mov ST30, T0
     d6a:	c4 2e       	mov	r12, r20
	mov ST31, T1
     d6c:	d5 2e       	mov	r13, r21
	mov ST32, T3
     d6e:	e7 2e       	mov	r14, r23
	mov ST33, r25
     d70:	f9 2e       	mov	r15, r25
	mov ST01, M1
     d72:	11 2e       	mov	r1, r17
	mov ST02, M2
     d74:	22 2e       	mov	r2, r18
	mov ST12, T2
     d76:	66 2e       	mov	r6, r22
	mov ST23, M3
     d78:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     d7a:	0d 91       	ld	r16, X+
     d7c:	00 26       	eor	r0, r16
     d7e:	0d 91       	ld	r16, X+
     d80:	10 26       	eor	r1, r16
     d82:	0d 91       	ld	r16, X+
     d84:	20 26       	eor	r2, r16
     d86:	0d 91       	ld	r16, X+
     d88:	30 26       	eor	r3, r16
     d8a:	0d 91       	ld	r16, X+
     d8c:	40 26       	eor	r4, r16
     d8e:	0d 91       	ld	r16, X+
     d90:	50 26       	eor	r5, r16
     d92:	0d 91       	ld	r16, X+
     d94:	60 26       	eor	r6, r16
     d96:	0d 91       	ld	r16, X+
     d98:	70 26       	eor	r7, r16
     d9a:	0d 91       	ld	r16, X+
     d9c:	80 26       	eor	r8, r16
     d9e:	0d 91       	ld	r16, X+
     da0:	90 26       	eor	r9, r16
     da2:	0d 91       	ld	r16, X+
     da4:	a0 26       	eor	r10, r16
     da6:	0d 91       	ld	r16, X+
     da8:	b0 26       	eor	r11, r16
     daa:	0d 91       	ld	r16, X+
     dac:	c0 26       	eor	r12, r16
     dae:	0d 91       	ld	r16, X+
     db0:	d0 26       	eor	r13, r16
     db2:	0d 91       	ld	r16, X+
     db4:	e0 26       	eor	r14, r16
     db6:	0d 91       	ld	r16, X+
     db8:	f0 26       	eor	r15, r16
	
	//8 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     dba:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     dbc:	10 81       	ld	r17, Z
	mov M2, M1
     dbe:	21 2f       	mov	r18, r17
	mov M3, M2 
     dc0:	32 2f       	mov	r19, r18
	mov r28, ST00
     dc2:	c0 2d       	mov	r28, r0
	ld  M0, Y
     dc4:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     dc6:	30 27       	eor	r19, r16

	mov r30, ST11
     dc8:	e5 2d       	mov	r30, r5
	ld  T0, Z
     dca:	40 81       	ld	r20, Z
	eor M0, T0
     dcc:	04 27       	eor	r16, r20
	eor M2, T0
     dce:	24 27       	eor	r18, r20
	eor M3, T0 
     dd0:	34 27       	eor	r19, r20
	mov r28, ST11
     dd2:	c5 2d       	mov	r28, r5
	ld  T0, Y
     dd4:	48 81       	ld	r20, Y
	eor M0, T0
     dd6:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     dd8:	14 27       	eor	r17, r20

	mov r30, ST22
     dda:	ea 2d       	mov	r30, r10
	ld  T0, Z
     ddc:	40 81       	ld	r20, Z
	eor M0, T0
     dde:	04 27       	eor	r16, r20
	eor M1, T0
     de0:	14 27       	eor	r17, r20
	eor M3, T0
     de2:	34 27       	eor	r19, r20
	mov r28, ST22
     de4:	ca 2d       	mov	r28, r10
	ld  T0, Y
     de6:	48 81       	ld	r20, Y
	eor M1, T0
     de8:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     dea:	24 27       	eor	r18, r20

	mov r30, ST33
     dec:	ef 2d       	mov	r30, r15
	ld  T0, Z
     dee:	40 81       	ld	r20, Z
	eor M0, T0
     df0:	04 27       	eor	r16, r20
	eor M1, T0
     df2:	14 27       	eor	r17, r20
	eor M2, T0 
     df4:	24 27       	eor	r18, r20
	mov r28, ST33
     df6:	cf 2d       	mov	r28, r15
	ld  T0, Y
     df8:	48 81       	ld	r20, Y
	eor M2, T0
     dfa:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     dfc:	34 27       	eor	r19, r20

	mov ST00, M0
     dfe:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     e00:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     e02:	50 81       	ld	r21, Z
	mov T2, T1
     e04:	65 2f       	mov	r22, r21
	mov T3, T2 
     e06:	76 2f       	mov	r23, r22
	mov r28, ST10
     e08:	c4 2d       	mov	r28, r4
	ld  T0, Y
     e0a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     e0c:	74 27       	eor	r23, r20

	mov r30, ST21
     e0e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     e10:	00 81       	ld	r16, Z
	eor T0, M0
     e12:	40 27       	eor	r20, r16
	eor T2, M0
     e14:	60 27       	eor	r22, r16
	eor T3, M0 
     e16:	70 27       	eor	r23, r16
	mov r28, ST21
     e18:	c9 2d       	mov	r28, r9
	ld  M0, Y
     e1a:	08 81       	ld	r16, Y
	eor T0, M0
     e1c:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     e1e:	50 27       	eor	r21, r16

	mov r30, ST32
     e20:	ee 2d       	mov	r30, r14
	ld  M0, Z
     e22:	00 81       	ld	r16, Z
	eor T0, M0
     e24:	40 27       	eor	r20, r16
	eor T1, M0
     e26:	50 27       	eor	r21, r16
	eor T3, M0 
     e28:	70 27       	eor	r23, r16
	mov r28, ST32
     e2a:	ce 2d       	mov	r28, r14
	ld  M0, Y
     e2c:	08 81       	ld	r16, Y
	eor T1, M0
     e2e:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     e30:	60 27       	eor	r22, r16

	mov r30, ST03
     e32:	e3 2d       	mov	r30, r3
	ld  M0, Z
     e34:	00 81       	ld	r16, Z
	eor T0, M0
     e36:	40 27       	eor	r20, r16
	eor T1, M0
     e38:	50 27       	eor	r21, r16
	eor T2, M0 
     e3a:	60 27       	eor	r22, r16
	mov r28, ST03
     e3c:	c3 2d       	mov	r28, r3
	ld  M0, Y
     e3e:	08 81       	ld	r16, Y
	eor T2, M0
     e40:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     e42:	70 27       	eor	r23, r16

	mov ST10, T0
     e44:	44 2e       	mov	r4, r20
	mov ST11, T1
     e46:	55 2e       	mov	r5, r21
	mov ST03, M3
     e48:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     e4a:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     e4c:	40 81       	ld	r20, Z
	mov T1, T0
     e4e:	54 2f       	mov	r21, r20
	mov M3, T1 
     e50:	35 2f       	mov	r19, r21
	mov r28, ST20
     e52:	c8 2d       	mov	r28, r8
	ld  M0, Y
     e54:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     e56:	30 27       	eor	r19, r16

	mov r30, ST31
     e58:	ed 2d       	mov	r30, r13
	ld  r25, Z
     e5a:	90 81       	ld	r25, Z
	eor M0, r25
     e5c:	09 27       	eor	r16, r25
	eor T1, r25
     e5e:	59 27       	eor	r21, r25
	eor M3, r25
     e60:	39 27       	eor	r19, r25
	mov r28, ST31
     e62:	cd 2d       	mov	r28, r13
	ld  r25, Y
     e64:	98 81       	ld	r25, Y
	eor M0, r25
     e66:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     e68:	49 27       	eor	r20, r25

	mov r30, ST02
     e6a:	e2 2d       	mov	r30, r2
	ld  r25, Z
     e6c:	90 81       	ld	r25, Z
	eor M0, r25
     e6e:	09 27       	eor	r16, r25
	eor T0, r25
     e70:	49 27       	eor	r20, r25
	eor M3, r25
     e72:	39 27       	eor	r19, r25
	mov r28, ST02
     e74:	c2 2d       	mov	r28, r2
	ld  r25, Y
     e76:	98 81       	ld	r25, Y
	eor T0, r25
     e78:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     e7a:	59 27       	eor	r21, r25

	mov r30, ST13
     e7c:	e7 2d       	mov	r30, r7
	ld  r25, Z
     e7e:	90 81       	ld	r25, Z
	eor M0, r25
     e80:	09 27       	eor	r16, r25
	eor T0, r25
     e82:	49 27       	eor	r20, r25
	eor T1, r25 
     e84:	59 27       	eor	r21, r25
	mov r28, ST13
     e86:	c7 2d       	mov	r28, r7
	ld  r25, Y
     e88:	98 81       	ld	r25, Y
	eor T1, r25
     e8a:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     e8c:	39 27       	eor	r19, r25

	mov ST20, M0
     e8e:	80 2e       	mov	r8, r16
	mov ST21, T0
     e90:	94 2e       	mov	r9, r20
	mov ST22, T1
     e92:	a5 2e       	mov	r10, r21
	mov ST13, T3
     e94:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     e96:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     e98:	50 81       	ld	r21, Z
	mov T3, T1
     e9a:	75 2f       	mov	r23, r21
	mov r25, T3 
     e9c:	97 2f       	mov	r25, r23
	mov r28, ST30
     e9e:	cc 2d       	mov	r28, r12
	ld  T0, Y
     ea0:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     ea2:	94 27       	eor	r25, r20

	mov r30, ST01
     ea4:	e1 2d       	mov	r30, r1
	ld  M0, Z
     ea6:	00 81       	ld	r16, Z
	eor T0, M0
     ea8:	40 27       	eor	r20, r16
	eor T3, M0
     eaa:	70 27       	eor	r23, r16
	eor r25, M0 
     eac:	90 27       	eor	r25, r16
	mov r28, ST01
     eae:	c1 2d       	mov	r28, r1
	ld  M0, Y
     eb0:	08 81       	ld	r16, Y
	eor T0, M0
     eb2:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     eb4:	50 27       	eor	r21, r16

	mov r30, ST12
     eb6:	e6 2d       	mov	r30, r6
	ld  M0, Z
     eb8:	00 81       	ld	r16, Z
	eor T0, M0
     eba:	40 27       	eor	r20, r16
	eor T1, M0
     ebc:	50 27       	eor	r21, r16
	eor r25, M0 
     ebe:	90 27       	eor	r25, r16
	mov r28, ST12
     ec0:	c6 2d       	mov	r28, r6
	ld  M0, Y
     ec2:	08 81       	ld	r16, Y
	eor T1, M0
     ec4:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     ec6:	70 27       	eor	r23, r16

	mov r30, ST23
     ec8:	eb 2d       	mov	r30, r11
	ld  M0, Z
     eca:	00 81       	ld	r16, Z
	eor T0, M0
     ecc:	40 27       	eor	r20, r16
	eor T1, M0
     ece:	50 27       	eor	r21, r16
	eor T3, M0 
     ed0:	70 27       	eor	r23, r16
	mov r28, ST23
     ed2:	cb 2d       	mov	r28, r11
	ld  M0, Y
     ed4:	08 81       	ld	r16, Y
	eor T3, M0
     ed6:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     ed8:	90 27       	eor	r25, r16

	mov ST30, T0
     eda:	c4 2e       	mov	r12, r20
	mov ST31, T1
     edc:	d5 2e       	mov	r13, r21
	mov ST32, T3
     ede:	e7 2e       	mov	r14, r23
	mov ST33, r25
     ee0:	f9 2e       	mov	r15, r25
	mov ST01, M1
     ee2:	11 2e       	mov	r1, r17
	mov ST02, M2
     ee4:	22 2e       	mov	r2, r18
	mov ST12, T2
     ee6:	66 2e       	mov	r6, r22
	mov ST23, M3
     ee8:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     eea:	0d 91       	ld	r16, X+
     eec:	00 26       	eor	r0, r16
     eee:	0d 91       	ld	r16, X+
     ef0:	10 26       	eor	r1, r16
     ef2:	0d 91       	ld	r16, X+
     ef4:	20 26       	eor	r2, r16
     ef6:	0d 91       	ld	r16, X+
     ef8:	30 26       	eor	r3, r16
     efa:	0d 91       	ld	r16, X+
     efc:	40 26       	eor	r4, r16
     efe:	0d 91       	ld	r16, X+
     f00:	50 26       	eor	r5, r16
     f02:	0d 91       	ld	r16, X+
     f04:	60 26       	eor	r6, r16
     f06:	0d 91       	ld	r16, X+
     f08:	70 26       	eor	r7, r16
     f0a:	0d 91       	ld	r16, X+
     f0c:	80 26       	eor	r8, r16
     f0e:	0d 91       	ld	r16, X+
     f10:	90 26       	eor	r9, r16
     f12:	0d 91       	ld	r16, X+
     f14:	a0 26       	eor	r10, r16
     f16:	0d 91       	ld	r16, X+
     f18:	b0 26       	eor	r11, r16
     f1a:	0d 91       	ld	r16, X+
     f1c:	c0 26       	eor	r12, r16
     f1e:	0d 91       	ld	r16, X+
     f20:	d0 26       	eor	r13, r16
     f22:	0d 91       	ld	r16, X+
     f24:	e0 26       	eor	r14, r16
     f26:	0d 91       	ld	r16, X+
     f28:	f0 26       	eor	r15, r16
	
	//9 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     f2a:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     f2c:	10 81       	ld	r17, Z
	mov M2, M1
     f2e:	21 2f       	mov	r18, r17
	mov M3, M2 
     f30:	32 2f       	mov	r19, r18
	mov r28, ST00
     f32:	c0 2d       	mov	r28, r0
	ld  M0, Y
     f34:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     f36:	30 27       	eor	r19, r16

	mov r30, ST11
     f38:	e5 2d       	mov	r30, r5
	ld  T0, Z
     f3a:	40 81       	ld	r20, Z
	eor M0, T0
     f3c:	04 27       	eor	r16, r20
	eor M2, T0
     f3e:	24 27       	eor	r18, r20
	eor M3, T0 
     f40:	34 27       	eor	r19, r20
	mov r28, ST11
     f42:	c5 2d       	mov	r28, r5
	ld  T0, Y
     f44:	48 81       	ld	r20, Y
	eor M0, T0
     f46:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     f48:	14 27       	eor	r17, r20

	mov r30, ST22
     f4a:	ea 2d       	mov	r30, r10
	ld  T0, Z
     f4c:	40 81       	ld	r20, Z
	eor M0, T0
     f4e:	04 27       	eor	r16, r20
	eor M1, T0
     f50:	14 27       	eor	r17, r20
	eor M3, T0
     f52:	34 27       	eor	r19, r20
	mov r28, ST22
     f54:	ca 2d       	mov	r28, r10
	ld  T0, Y
     f56:	48 81       	ld	r20, Y
	eor M1, T0
     f58:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     f5a:	24 27       	eor	r18, r20

	mov r30, ST33
     f5c:	ef 2d       	mov	r30, r15
	ld  T0, Z
     f5e:	40 81       	ld	r20, Z
	eor M0, T0
     f60:	04 27       	eor	r16, r20
	eor M1, T0
     f62:	14 27       	eor	r17, r20
	eor M2, T0 
     f64:	24 27       	eor	r18, r20
	mov r28, ST33
     f66:	cf 2d       	mov	r28, r15
	ld  T0, Y
     f68:	48 81       	ld	r20, Y
	eor M2, T0
     f6a:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     f6c:	34 27       	eor	r19, r20

	mov ST00, M0
     f6e:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     f70:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     f72:	50 81       	ld	r21, Z
	mov T2, T1
     f74:	65 2f       	mov	r22, r21
	mov T3, T2 
     f76:	76 2f       	mov	r23, r22
	mov r28, ST10
     f78:	c4 2d       	mov	r28, r4
	ld  T0, Y
     f7a:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     f7c:	74 27       	eor	r23, r20

	mov r30, ST21
     f7e:	e9 2d       	mov	r30, r9
	ld  M0, Z
     f80:	00 81       	ld	r16, Z
	eor T0, M0
     f82:	40 27       	eor	r20, r16
	eor T2, M0
     f84:	60 27       	eor	r22, r16
	eor T3, M0 
     f86:	70 27       	eor	r23, r16
	mov r28, ST21
     f88:	c9 2d       	mov	r28, r9
	ld  M0, Y
     f8a:	08 81       	ld	r16, Y
	eor T0, M0
     f8c:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     f8e:	50 27       	eor	r21, r16

	mov r30, ST32
     f90:	ee 2d       	mov	r30, r14
	ld  M0, Z
     f92:	00 81       	ld	r16, Z
	eor T0, M0
     f94:	40 27       	eor	r20, r16
	eor T1, M0
     f96:	50 27       	eor	r21, r16
	eor T3, M0 
     f98:	70 27       	eor	r23, r16
	mov r28, ST32
     f9a:	ce 2d       	mov	r28, r14
	ld  M0, Y
     f9c:	08 81       	ld	r16, Y
	eor T1, M0
     f9e:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     fa0:	60 27       	eor	r22, r16

	mov r30, ST03
     fa2:	e3 2d       	mov	r30, r3
	ld  M0, Z
     fa4:	00 81       	ld	r16, Z
	eor T0, M0
     fa6:	40 27       	eor	r20, r16
	eor T1, M0
     fa8:	50 27       	eor	r21, r16
	eor T2, M0 
     faa:	60 27       	eor	r22, r16
	mov r28, ST03
     fac:	c3 2d       	mov	r28, r3
	ld  M0, Y
     fae:	08 81       	ld	r16, Y
	eor T2, M0
     fb0:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     fb2:	70 27       	eor	r23, r16

	mov ST10, T0
     fb4:	44 2e       	mov	r4, r20
	mov ST11, T1
     fb6:	55 2e       	mov	r5, r21
	mov ST03, M3
     fb8:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     fba:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     fbc:	40 81       	ld	r20, Z
	mov T1, T0
     fbe:	54 2f       	mov	r21, r20
	mov M3, T1 
     fc0:	35 2f       	mov	r19, r21
	mov r28, ST20
     fc2:	c8 2d       	mov	r28, r8
	ld  M0, Y
     fc4:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     fc6:	30 27       	eor	r19, r16

	mov r30, ST31
     fc8:	ed 2d       	mov	r30, r13
	ld  r25, Z
     fca:	90 81       	ld	r25, Z
	eor M0, r25
     fcc:	09 27       	eor	r16, r25
	eor T1, r25
     fce:	59 27       	eor	r21, r25
	eor M3, r25
     fd0:	39 27       	eor	r19, r25
	mov r28, ST31
     fd2:	cd 2d       	mov	r28, r13
	ld  r25, Y
     fd4:	98 81       	ld	r25, Y
	eor M0, r25
     fd6:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     fd8:	49 27       	eor	r20, r25

	mov r30, ST02
     fda:	e2 2d       	mov	r30, r2
	ld  r25, Z
     fdc:	90 81       	ld	r25, Z
	eor M0, r25
     fde:	09 27       	eor	r16, r25
	eor T0, r25
     fe0:	49 27       	eor	r20, r25
	eor M3, r25
     fe2:	39 27       	eor	r19, r25
	mov r28, ST02
     fe4:	c2 2d       	mov	r28, r2
	ld  r25, Y
     fe6:	98 81       	ld	r25, Y
	eor T0, r25
     fe8:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     fea:	59 27       	eor	r21, r25

	mov r30, ST13
     fec:	e7 2d       	mov	r30, r7
	ld  r25, Z
     fee:	90 81       	ld	r25, Z
	eor M0, r25
     ff0:	09 27       	eor	r16, r25
	eor T0, r25
     ff2:	49 27       	eor	r20, r25
	eor T1, r25 
     ff4:	59 27       	eor	r21, r25
	mov r28, ST13
     ff6:	c7 2d       	mov	r28, r7
	ld  r25, Y
     ff8:	98 81       	ld	r25, Y
	eor T1, r25
     ffa:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     ffc:	39 27       	eor	r19, r25

	mov ST20, M0
     ffe:	80 2e       	mov	r8, r16
	mov ST21, T0
    1000:	94 2e       	mov	r9, r20
	mov ST22, T1
    1002:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1004:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1006:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1008:	50 81       	ld	r21, Z
	mov T3, T1
    100a:	75 2f       	mov	r23, r21
	mov r25, T3 
    100c:	97 2f       	mov	r25, r23
	mov r28, ST30
    100e:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1010:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1012:	94 27       	eor	r25, r20

	mov r30, ST01
    1014:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1016:	00 81       	ld	r16, Z
	eor T0, M0
    1018:	40 27       	eor	r20, r16
	eor T3, M0
    101a:	70 27       	eor	r23, r16
	eor r25, M0 
    101c:	90 27       	eor	r25, r16
	mov r28, ST01
    101e:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1020:	08 81       	ld	r16, Y
	eor T0, M0
    1022:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1024:	50 27       	eor	r21, r16

	mov r30, ST12
    1026:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1028:	00 81       	ld	r16, Z
	eor T0, M0
    102a:	40 27       	eor	r20, r16
	eor T1, M0
    102c:	50 27       	eor	r21, r16
	eor r25, M0 
    102e:	90 27       	eor	r25, r16
	mov r28, ST12
    1030:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1032:	08 81       	ld	r16, Y
	eor T1, M0
    1034:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1036:	70 27       	eor	r23, r16

	mov r30, ST23
    1038:	eb 2d       	mov	r30, r11
	ld  M0, Z
    103a:	00 81       	ld	r16, Z
	eor T0, M0
    103c:	40 27       	eor	r20, r16
	eor T1, M0
    103e:	50 27       	eor	r21, r16
	eor T3, M0 
    1040:	70 27       	eor	r23, r16
	mov r28, ST23
    1042:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1044:	08 81       	ld	r16, Y
	eor T3, M0
    1046:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1048:	90 27       	eor	r25, r16

	mov ST30, T0
    104a:	c4 2e       	mov	r12, r20
	mov ST31, T1
    104c:	d5 2e       	mov	r13, r21
	mov ST32, T3
    104e:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1050:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1052:	11 2e       	mov	r1, r17
	mov ST02, M2
    1054:	22 2e       	mov	r2, r18
	mov ST12, T2
    1056:	66 2e       	mov	r6, r22
	mov ST23, M3
    1058:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    105a:	0d 91       	ld	r16, X+
    105c:	00 26       	eor	r0, r16
    105e:	0d 91       	ld	r16, X+
    1060:	10 26       	eor	r1, r16
    1062:	0d 91       	ld	r16, X+
    1064:	20 26       	eor	r2, r16
    1066:	0d 91       	ld	r16, X+
    1068:	30 26       	eor	r3, r16
    106a:	0d 91       	ld	r16, X+
    106c:	40 26       	eor	r4, r16
    106e:	0d 91       	ld	r16, X+
    1070:	50 26       	eor	r5, r16
    1072:	0d 91       	ld	r16, X+
    1074:	60 26       	eor	r6, r16
    1076:	0d 91       	ld	r16, X+
    1078:	70 26       	eor	r7, r16
    107a:	0d 91       	ld	r16, X+
    107c:	80 26       	eor	r8, r16
    107e:	0d 91       	ld	r16, X+
    1080:	90 26       	eor	r9, r16
    1082:	0d 91       	ld	r16, X+
    1084:	a0 26       	eor	r10, r16
    1086:	0d 91       	ld	r16, X+
    1088:	b0 26       	eor	r11, r16
    108a:	0d 91       	ld	r16, X+
    108c:	c0 26       	eor	r12, r16
    108e:	0d 91       	ld	r16, X+
    1090:	d0 26       	eor	r13, r16
    1092:	0d 91       	ld	r16, X+
    1094:	e0 26       	eor	r14, r16
    1096:	0d 91       	ld	r16, X+
    1098:	f0 26       	eor	r15, r16
	


	// 10 Round--------------------------------------------------------------------------------------------
	// Shift Row + Subbyte
	mov r30, ST00
    109a:	e0 2d       	mov	r30, r0
	ld ST00, Z
    109c:	00 80       	ld	r0, Z
	mov r30, ST10
    109e:	e4 2d       	mov	r30, r4
	ld ST10, Z
    10a0:	40 80       	ld	r4, Z
	mov r30, ST20
    10a2:	e8 2d       	mov	r30, r8
	ld ST20, Z
    10a4:	80 80       	ld	r8, Z
	mov r30, ST30
    10a6:	ec 2d       	mov	r30, r12
	ld ST30, Z
    10a8:	c0 80       	ld	r12, Z

	mov r30, ST01
    10aa:	e1 2d       	mov	r30, r1
	ld T0, Z
    10ac:	40 81       	ld	r20, Z
	mov r30, ST11
    10ae:	e5 2d       	mov	r30, r5
	ld ST01, Z
    10b0:	10 80       	ld	r1, Z
	mov r30, ST21
    10b2:	e9 2d       	mov	r30, r9
	ld ST11, Z
    10b4:	50 80       	ld	r5, Z
	mov r30, ST31
    10b6:	ed 2d       	mov	r30, r13
	ld ST21, Z
    10b8:	90 80       	ld	r9, Z
	mov ST31, T0
    10ba:	d4 2e       	mov	r13, r20

	mov r30, ST02
    10bc:	e2 2d       	mov	r30, r2
	ld T0, Z
    10be:	40 81       	ld	r20, Z
	mov r30, ST12
    10c0:	e6 2d       	mov	r30, r6
	ld T1, Z
    10c2:	50 81       	ld	r21, Z
	mov r30, ST22
    10c4:	ea 2d       	mov	r30, r10
	ld ST02, Z
    10c6:	20 80       	ld	r2, Z
	mov r30, ST32
    10c8:	ee 2d       	mov	r30, r14
	ld ST12, Z
    10ca:	60 80       	ld	r6, Z
	mov ST22, T0
    10cc:	a4 2e       	mov	r10, r20
	mov ST32, T1
    10ce:	e5 2e       	mov	r14, r21

	mov r30, ST03
    10d0:	e3 2d       	mov	r30, r3
	ld T0, Z
    10d2:	40 81       	ld	r20, Z
	mov r30, ST33
    10d4:	ef 2d       	mov	r30, r15
	ld  ST03, Z
    10d6:	30 80       	ld	r3, Z
	mov r30, ST23
    10d8:	eb 2d       	mov	r30, r11
	ld ST33, Z
    10da:	f0 80       	ld	r15, Z
	mov r30, ST13
    10dc:	e7 2d       	mov	r30, r7
	ld ST23, Z
    10de:	b0 80       	ld	r11, Z
	mov ST13, T0
    10e0:	74 2e       	mov	r7, r20
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    10e2:	0d 91       	ld	r16, X+
    10e4:	00 26       	eor	r0, r16
    10e6:	0d 91       	ld	r16, X+
    10e8:	10 26       	eor	r1, r16
    10ea:	0d 91       	ld	r16, X+
    10ec:	20 26       	eor	r2, r16
    10ee:	0d 91       	ld	r16, X+
    10f0:	30 26       	eor	r3, r16
    10f2:	0d 91       	ld	r16, X+
    10f4:	40 26       	eor	r4, r16
    10f6:	0d 91       	ld	r16, X+
    10f8:	50 26       	eor	r5, r16
    10fa:	0d 91       	ld	r16, X+
    10fc:	60 26       	eor	r6, r16
    10fe:	0d 91       	ld	r16, X+
    1100:	70 26       	eor	r7, r16
    1102:	0d 91       	ld	r16, X+
    1104:	80 26       	eor	r8, r16
    1106:	0d 91       	ld	r16, X+
    1108:	90 26       	eor	r9, r16
    110a:	0d 91       	ld	r16, X+
    110c:	a0 26       	eor	r10, r16
    110e:	0d 91       	ld	r16, X+
    1110:	b0 26       	eor	r11, r16
    1112:	0d 91       	ld	r16, X+
    1114:	c0 26       	eor	r12, r16
    1116:	0d 91       	ld	r16, X+
    1118:	d0 26       	eor	r13, r16
    111a:	0d 91       	ld	r16, X+
    111c:	e0 26       	eor	r14, r16
    111e:	0d 91       	ld	r16, X+
    1120:	f0 26       	eor	r15, r16
	pop r21
    1122:	5f 91       	pop	r21
	pop r20
    1124:	4f 91       	pop	r20
	pop r27
    1126:	bf 91       	pop	r27
	pop r26
    1128:	af 91       	pop	r26
	pop r31
    112a:	ff 91       	pop	r31
	pop r30
    112c:	ef 91       	pop	r30
	movw r16, r30
    112e:	8f 01       	movw	r16, r30

	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
    1130:	01 92       	st	Z+, r0
    1132:	11 92       	st	Z+, r1
    1134:	21 92       	st	Z+, r2
    1136:	31 92       	st	Z+, r3
    1138:	41 92       	st	Z+, r4
    113a:	51 92       	st	Z+, r5
    113c:	61 92       	st	Z+, r6
    113e:	71 92       	st	Z+, r7
    1140:	81 92       	st	Z+, r8
    1142:	91 92       	st	Z+, r9
    1144:	a1 92       	st	Z+, r10
    1146:	b1 92       	st	Z+, r11
    1148:	c1 92       	st	Z+, r12
    114a:	d1 92       	st	Z+, r13
    114c:	e1 92       	st	Z+, r14
    114e:	f1 92       	st	Z+, r15
	movw r30, r16
    1150:	f8 01       	movw	r30, r16
	ld r16, Z
    1152:	00 81       	ld	r16, Z
	inc r16
    1154:	03 95       	inc	r16
	st Z, r16
    1156:	00 83       	st	Z, r16
	movw r16, r30
    1158:	8f 01       	movw	r16, r30

	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			ld ST\row\col ,Z+
		.endr
	.endr
    115a:	01 90       	ld	r0, Z+
    115c:	11 90       	ld	r1, Z+
    115e:	21 90       	ld	r2, Z+
    1160:	31 90       	ld	r3, Z+
    1162:	41 90       	ld	r4, Z+
    1164:	51 90       	ld	r5, Z+
    1166:	61 90       	ld	r6, Z+
    1168:	71 90       	ld	r7, Z+
    116a:	81 90       	ld	r8, Z+
    116c:	91 90       	ld	r9, Z+
    116e:	a1 90       	ld	r10, Z+
    1170:	b1 90       	ld	r11, Z+
    1172:	c1 90       	ld	r12, Z+
    1174:	d1 90       	ld	r13, Z+
    1176:	e1 90       	ld	r14, Z+
    1178:	f1 90       	ld	r15, Z+
	movw r30, r16
    117a:	f8 01       	movw	r30, r16

	push r30
    117c:	ef 93       	push	r30
	push r31
    117e:	ff 93       	push	r31
	push r26
    1180:	af 93       	push	r26
	push r27
    1182:	bf 93       	push	r27
	push r20
    1184:	4f 93       	push	r20
	push r21
    1186:	5f 93       	push	r21

	ldi r16, 12
    1188:	0c e0       	ldi	r16, 0x0C	; 12
	add r26, r16
    118a:	a0 0f       	add	r26, r16

	ld r16, X+
    118c:	0d 91       	ld	r16, X+
	eor ST30, r16
    118e:	c0 26       	eor	r12, r16
	ld r16, X+
    1190:	0d 91       	ld	r16, X+
	eor ST31, r16
    1192:	d0 26       	eor	r13, r16
	ld r16, X+
    1194:	0d 91       	ld	r16, X+
	eor ST32, r16
    1196:	e0 26       	eor	r14, r16
	ld r16, X+
    1198:	0d 91       	ld	r16, X+
	eor ST33, r16
    119a:	f0 26       	eor	r15, r16
	

	//1 Round------------------------------------------------------------------------------------------
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	ldi r31, hi8(SBOX_TABLE)	
    119c:	f1 e0       	ldi	r31, 0x01	; 1
	mov r30, ST00 
    119e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    11a0:	10 81       	ld	r17, Z
	mov M2, M1
    11a2:	21 2f       	mov	r18, r17
	mov M3, M2 
    11a4:	32 2f       	mov	r19, r18
	mov r28, ST00
    11a6:	c0 2d       	mov	r28, r0
	ld  M0, Y
    11a8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    11aa:	30 27       	eor	r19, r16

	mov r30, ST11
    11ac:	e5 2d       	mov	r30, r5
	ld  T0, Z
    11ae:	40 81       	ld	r20, Z
	eor M0, T0
    11b0:	04 27       	eor	r16, r20
	eor M2, T0
    11b2:	24 27       	eor	r18, r20
	eor M3, T0 
    11b4:	34 27       	eor	r19, r20
	mov r28, ST11
    11b6:	c5 2d       	mov	r28, r5
	ld  T0, Y
    11b8:	48 81       	ld	r20, Y
	eor M0, T0
    11ba:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    11bc:	14 27       	eor	r17, r20

	mov r30, ST22
    11be:	ea 2d       	mov	r30, r10
	ld  T0, Z
    11c0:	40 81       	ld	r20, Z
	eor M0, T0
    11c2:	04 27       	eor	r16, r20
	eor M1, T0
    11c4:	14 27       	eor	r17, r20
	eor M3, T0
    11c6:	34 27       	eor	r19, r20
	mov r28, ST22
    11c8:	ca 2d       	mov	r28, r10
	ld  T0, Y
    11ca:	48 81       	ld	r20, Y
	eor M1, T0
    11cc:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    11ce:	24 27       	eor	r18, r20

	mov r30, ST33
    11d0:	ef 2d       	mov	r30, r15
	ld  T0, Z
    11d2:	40 81       	ld	r20, Z
	eor M0, T0
    11d4:	04 27       	eor	r16, r20
	eor M1, T0
    11d6:	14 27       	eor	r17, r20
	eor M2, T0 
    11d8:	24 27       	eor	r18, r20
	mov r28, ST33
    11da:	cf 2d       	mov	r28, r15
	ld  T0, Y
    11dc:	48 81       	ld	r20, Y
	eor M2, T0
    11de:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    11e0:	34 27       	eor	r19, r20

	mov ST00, M0
    11e2:	00 2e       	mov	r0, r16
	mov ST01, M1
    11e4:	11 2e       	mov	r1, r17
	mov ST02, M2
    11e6:	22 2e       	mov	r2, r18
	mov ST03, M3
    11e8:	33 2e       	mov	r3, r19

	ld r16, X+
    11ea:	0d 91       	ld	r16, X+
	eor ST00, r16
    11ec:	00 26       	eor	r0, r16
	ld r16, X+
    11ee:	0d 91       	ld	r16, X+
	eor ST01, r16
    11f0:	10 26       	eor	r1, r16
	ld r16, X+
    11f2:	0d 91       	ld	r16, X+
	eor ST02, r16
    11f4:	20 26       	eor	r2, r16
	ld r16, X+
    11f6:	0d 91       	ld	r16, X+
	eor ST03, r16
    11f8:	30 26       	eor	r3, r16

	pop r31
    11fa:	ff 91       	pop	r31
	pop r30
    11fc:	ef 91       	pop	r30
	movw r16, r30
    11fe:	8f 01       	movw	r16, r30
	
	ld ST10, Z+
    1200:	41 90       	ld	r4, Z+
	ld ST11, Z+
    1202:	51 90       	ld	r5, Z+
	ld ST12, Z+
    1204:	61 90       	ld	r6, Z+
	ld ST13, Z+
    1206:	71 90       	ld	r7, Z+
	ld ST20, Z+
    1208:	81 90       	ld	r8, Z+
	ld ST21, Z+
    120a:	91 90       	ld	r9, Z+
	ld ST22, Z+
    120c:	a1 90       	ld	r10, Z+
	ld ST23, Z+
    120e:	b1 90       	ld	r11, Z+
	ld ST30, Z+
    1210:	c1 90       	ld	r12, Z+
	ld ST31, Z+
    1212:	d1 90       	ld	r13, Z+
	ld ST32, Z+
    1214:	e1 90       	ld	r14, Z+
	ld ST33, Z+
    1216:	f1 90       	ld	r15, Z+
	push r16
    1218:	0f 93       	push	r16
	push r17
    121a:	1f 93       	push	r17
	ldi r31, hi8(SBOX_TABLE)	
    121c:	f1 e0       	ldi	r31, 0x01	; 1

	//2 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    121e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1220:	10 81       	ld	r17, Z
	mov M2, M1
    1222:	21 2f       	mov	r18, r17
	mov M3, M2 
    1224:	32 2f       	mov	r19, r18
	mov r28, ST00
    1226:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1228:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    122a:	30 27       	eor	r19, r16

	mov r30, ST11
    122c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    122e:	40 81       	ld	r20, Z
	eor M0, T0
    1230:	04 27       	eor	r16, r20
	eor M2, T0
    1232:	24 27       	eor	r18, r20
	eor M3, T0 
    1234:	34 27       	eor	r19, r20
	mov r28, ST11
    1236:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1238:	48 81       	ld	r20, Y
	eor M0, T0
    123a:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    123c:	14 27       	eor	r17, r20

	mov r30, ST22
    123e:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1240:	40 81       	ld	r20, Z
	eor M0, T0
    1242:	04 27       	eor	r16, r20
	eor M1, T0
    1244:	14 27       	eor	r17, r20
	eor M3, T0
    1246:	34 27       	eor	r19, r20
	mov r28, ST22
    1248:	ca 2d       	mov	r28, r10
	ld  T0, Y
    124a:	48 81       	ld	r20, Y
	eor M1, T0
    124c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    124e:	24 27       	eor	r18, r20

	mov r30, ST33
    1250:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1252:	40 81       	ld	r20, Z
	eor M0, T0
    1254:	04 27       	eor	r16, r20
	eor M1, T0
    1256:	14 27       	eor	r17, r20
	eor M2, T0 
    1258:	24 27       	eor	r18, r20
	mov r28, ST33
    125a:	cf 2d       	mov	r28, r15
	ld  T0, Y
    125c:	48 81       	ld	r20, Y
	eor M2, T0
    125e:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1260:	34 27       	eor	r19, r20

	mov ST00, M0
    1262:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1264:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1266:	50 81       	ld	r21, Z
	mov T2, T1
    1268:	65 2f       	mov	r22, r21
	mov T3, T2 
    126a:	76 2f       	mov	r23, r22
	mov r28, ST10
    126c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    126e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1270:	74 27       	eor	r23, r20

	mov r30, ST21
    1272:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1274:	00 81       	ld	r16, Z
	eor T0, M0
    1276:	40 27       	eor	r20, r16
	eor T2, M0
    1278:	60 27       	eor	r22, r16
	eor T3, M0 
    127a:	70 27       	eor	r23, r16
	mov r28, ST21
    127c:	c9 2d       	mov	r28, r9
	ld  M0, Y
    127e:	08 81       	ld	r16, Y
	eor T0, M0
    1280:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1282:	50 27       	eor	r21, r16

	mov r30, ST32
    1284:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1286:	00 81       	ld	r16, Z
	eor T0, M0
    1288:	40 27       	eor	r20, r16
	eor T1, M0
    128a:	50 27       	eor	r21, r16
	eor T3, M0 
    128c:	70 27       	eor	r23, r16
	mov r28, ST32
    128e:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1290:	08 81       	ld	r16, Y
	eor T1, M0
    1292:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1294:	60 27       	eor	r22, r16

	mov r30, ST03
    1296:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1298:	00 81       	ld	r16, Z
	eor T0, M0
    129a:	40 27       	eor	r20, r16
	eor T1, M0
    129c:	50 27       	eor	r21, r16
	eor T2, M0 
    129e:	60 27       	eor	r22, r16
	mov r28, ST03
    12a0:	c3 2d       	mov	r28, r3
	ld  M0, Y
    12a2:	08 81       	ld	r16, Y
	eor T2, M0
    12a4:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    12a6:	70 27       	eor	r23, r16

	mov ST10, T0
    12a8:	44 2e       	mov	r4, r20
	mov ST11, T1
    12aa:	55 2e       	mov	r5, r21
	mov ST03, M3
    12ac:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    12ae:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    12b0:	40 81       	ld	r20, Z
	mov T1, T0
    12b2:	54 2f       	mov	r21, r20
	mov M3, T1 
    12b4:	35 2f       	mov	r19, r21
	mov r28, ST20
    12b6:	c8 2d       	mov	r28, r8
	ld  M0, Y
    12b8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    12ba:	30 27       	eor	r19, r16

	mov r30, ST31
    12bc:	ed 2d       	mov	r30, r13
	ld  r25, Z
    12be:	90 81       	ld	r25, Z
	eor M0, r25
    12c0:	09 27       	eor	r16, r25
	eor T1, r25
    12c2:	59 27       	eor	r21, r25
	eor M3, r25
    12c4:	39 27       	eor	r19, r25
	mov r28, ST31
    12c6:	cd 2d       	mov	r28, r13
	ld  r25, Y
    12c8:	98 81       	ld	r25, Y
	eor M0, r25
    12ca:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    12cc:	49 27       	eor	r20, r25

	mov r30, ST02
    12ce:	e2 2d       	mov	r30, r2
	ld  r25, Z
    12d0:	90 81       	ld	r25, Z
	eor M0, r25
    12d2:	09 27       	eor	r16, r25
	eor T0, r25
    12d4:	49 27       	eor	r20, r25
	eor M3, r25
    12d6:	39 27       	eor	r19, r25
	mov r28, ST02
    12d8:	c2 2d       	mov	r28, r2
	ld  r25, Y
    12da:	98 81       	ld	r25, Y
	eor T0, r25
    12dc:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    12de:	59 27       	eor	r21, r25

	mov r30, ST13
    12e0:	e7 2d       	mov	r30, r7
	ld  r25, Z
    12e2:	90 81       	ld	r25, Z
	eor M0, r25
    12e4:	09 27       	eor	r16, r25
	eor T0, r25
    12e6:	49 27       	eor	r20, r25
	eor T1, r25 
    12e8:	59 27       	eor	r21, r25
	mov r28, ST13
    12ea:	c7 2d       	mov	r28, r7
	ld  r25, Y
    12ec:	98 81       	ld	r25, Y
	eor T1, r25
    12ee:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    12f0:	39 27       	eor	r19, r25

	mov ST20, M0
    12f2:	80 2e       	mov	r8, r16
	mov ST21, T0
    12f4:	94 2e       	mov	r9, r20
	mov ST22, T1
    12f6:	a5 2e       	mov	r10, r21
	mov ST13, T3
    12f8:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    12fa:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    12fc:	50 81       	ld	r21, Z
	mov T3, T1
    12fe:	75 2f       	mov	r23, r21
	mov r25, T3 
    1300:	97 2f       	mov	r25, r23
	mov r28, ST30
    1302:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1304:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1306:	94 27       	eor	r25, r20

	mov r30, ST01
    1308:	e1 2d       	mov	r30, r1
	ld  M0, Z
    130a:	00 81       	ld	r16, Z
	eor T0, M0
    130c:	40 27       	eor	r20, r16
	eor T3, M0
    130e:	70 27       	eor	r23, r16
	eor r25, M0 
    1310:	90 27       	eor	r25, r16
	mov r28, ST01
    1312:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1314:	08 81       	ld	r16, Y
	eor T0, M0
    1316:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1318:	50 27       	eor	r21, r16

	mov r30, ST12
    131a:	e6 2d       	mov	r30, r6
	ld  M0, Z
    131c:	00 81       	ld	r16, Z
	eor T0, M0
    131e:	40 27       	eor	r20, r16
	eor T1, M0
    1320:	50 27       	eor	r21, r16
	eor r25, M0 
    1322:	90 27       	eor	r25, r16
	mov r28, ST12
    1324:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1326:	08 81       	ld	r16, Y
	eor T1, M0
    1328:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    132a:	70 27       	eor	r23, r16

	mov r30, ST23
    132c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    132e:	00 81       	ld	r16, Z
	eor T0, M0
    1330:	40 27       	eor	r20, r16
	eor T1, M0
    1332:	50 27       	eor	r21, r16
	eor T3, M0 
    1334:	70 27       	eor	r23, r16
	mov r28, ST23
    1336:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1338:	08 81       	ld	r16, Y
	eor T3, M0
    133a:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    133c:	90 27       	eor	r25, r16

	mov ST30, T0
    133e:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1340:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1342:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1344:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1346:	11 2e       	mov	r1, r17
	mov ST02, M2
    1348:	22 2e       	mov	r2, r18
	mov ST12, T2
    134a:	66 2e       	mov	r6, r22
	mov ST23, M3
    134c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    134e:	0d 91       	ld	r16, X+
    1350:	00 26       	eor	r0, r16
    1352:	0d 91       	ld	r16, X+
    1354:	10 26       	eor	r1, r16
    1356:	0d 91       	ld	r16, X+
    1358:	20 26       	eor	r2, r16
    135a:	0d 91       	ld	r16, X+
    135c:	30 26       	eor	r3, r16
    135e:	0d 91       	ld	r16, X+
    1360:	40 26       	eor	r4, r16
    1362:	0d 91       	ld	r16, X+
    1364:	50 26       	eor	r5, r16
    1366:	0d 91       	ld	r16, X+
    1368:	60 26       	eor	r6, r16
    136a:	0d 91       	ld	r16, X+
    136c:	70 26       	eor	r7, r16
    136e:	0d 91       	ld	r16, X+
    1370:	80 26       	eor	r8, r16
    1372:	0d 91       	ld	r16, X+
    1374:	90 26       	eor	r9, r16
    1376:	0d 91       	ld	r16, X+
    1378:	a0 26       	eor	r10, r16
    137a:	0d 91       	ld	r16, X+
    137c:	b0 26       	eor	r11, r16
    137e:	0d 91       	ld	r16, X+
    1380:	c0 26       	eor	r12, r16
    1382:	0d 91       	ld	r16, X+
    1384:	d0 26       	eor	r13, r16
    1386:	0d 91       	ld	r16, X+
    1388:	e0 26       	eor	r14, r16
    138a:	0d 91       	ld	r16, X+
    138c:	f0 26       	eor	r15, r16
	
	//3 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    138e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1390:	10 81       	ld	r17, Z
	mov M2, M1
    1392:	21 2f       	mov	r18, r17
	mov M3, M2 
    1394:	32 2f       	mov	r19, r18
	mov r28, ST00
    1396:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1398:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    139a:	30 27       	eor	r19, r16

	mov r30, ST11
    139c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    139e:	40 81       	ld	r20, Z
	eor M0, T0
    13a0:	04 27       	eor	r16, r20
	eor M2, T0
    13a2:	24 27       	eor	r18, r20
	eor M3, T0 
    13a4:	34 27       	eor	r19, r20
	mov r28, ST11
    13a6:	c5 2d       	mov	r28, r5
	ld  T0, Y
    13a8:	48 81       	ld	r20, Y
	eor M0, T0
    13aa:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    13ac:	14 27       	eor	r17, r20

	mov r30, ST22
    13ae:	ea 2d       	mov	r30, r10
	ld  T0, Z
    13b0:	40 81       	ld	r20, Z
	eor M0, T0
    13b2:	04 27       	eor	r16, r20
	eor M1, T0
    13b4:	14 27       	eor	r17, r20
	eor M3, T0
    13b6:	34 27       	eor	r19, r20
	mov r28, ST22
    13b8:	ca 2d       	mov	r28, r10
	ld  T0, Y
    13ba:	48 81       	ld	r20, Y
	eor M1, T0
    13bc:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    13be:	24 27       	eor	r18, r20

	mov r30, ST33
    13c0:	ef 2d       	mov	r30, r15
	ld  T0, Z
    13c2:	40 81       	ld	r20, Z
	eor M0, T0
    13c4:	04 27       	eor	r16, r20
	eor M1, T0
    13c6:	14 27       	eor	r17, r20
	eor M2, T0 
    13c8:	24 27       	eor	r18, r20
	mov r28, ST33
    13ca:	cf 2d       	mov	r28, r15
	ld  T0, Y
    13cc:	48 81       	ld	r20, Y
	eor M2, T0
    13ce:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    13d0:	34 27       	eor	r19, r20

	mov ST00, M0
    13d2:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    13d4:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    13d6:	50 81       	ld	r21, Z
	mov T2, T1
    13d8:	65 2f       	mov	r22, r21
	mov T3, T2 
    13da:	76 2f       	mov	r23, r22
	mov r28, ST10
    13dc:	c4 2d       	mov	r28, r4
	ld  T0, Y
    13de:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    13e0:	74 27       	eor	r23, r20

	mov r30, ST21
    13e2:	e9 2d       	mov	r30, r9
	ld  M0, Z
    13e4:	00 81       	ld	r16, Z
	eor T0, M0
    13e6:	40 27       	eor	r20, r16
	eor T2, M0
    13e8:	60 27       	eor	r22, r16
	eor T3, M0 
    13ea:	70 27       	eor	r23, r16
	mov r28, ST21
    13ec:	c9 2d       	mov	r28, r9
	ld  M0, Y
    13ee:	08 81       	ld	r16, Y
	eor T0, M0
    13f0:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    13f2:	50 27       	eor	r21, r16

	mov r30, ST32
    13f4:	ee 2d       	mov	r30, r14
	ld  M0, Z
    13f6:	00 81       	ld	r16, Z
	eor T0, M0
    13f8:	40 27       	eor	r20, r16
	eor T1, M0
    13fa:	50 27       	eor	r21, r16
	eor T3, M0 
    13fc:	70 27       	eor	r23, r16
	mov r28, ST32
    13fe:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1400:	08 81       	ld	r16, Y
	eor T1, M0
    1402:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1404:	60 27       	eor	r22, r16

	mov r30, ST03
    1406:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1408:	00 81       	ld	r16, Z
	eor T0, M0
    140a:	40 27       	eor	r20, r16
	eor T1, M0
    140c:	50 27       	eor	r21, r16
	eor T2, M0 
    140e:	60 27       	eor	r22, r16
	mov r28, ST03
    1410:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1412:	08 81       	ld	r16, Y
	eor T2, M0
    1414:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1416:	70 27       	eor	r23, r16

	mov ST10, T0
    1418:	44 2e       	mov	r4, r20
	mov ST11, T1
    141a:	55 2e       	mov	r5, r21
	mov ST03, M3
    141c:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    141e:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1420:	40 81       	ld	r20, Z
	mov T1, T0
    1422:	54 2f       	mov	r21, r20
	mov M3, T1 
    1424:	35 2f       	mov	r19, r21
	mov r28, ST20
    1426:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1428:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    142a:	30 27       	eor	r19, r16

	mov r30, ST31
    142c:	ed 2d       	mov	r30, r13
	ld  r25, Z
    142e:	90 81       	ld	r25, Z
	eor M0, r25
    1430:	09 27       	eor	r16, r25
	eor T1, r25
    1432:	59 27       	eor	r21, r25
	eor M3, r25
    1434:	39 27       	eor	r19, r25
	mov r28, ST31
    1436:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1438:	98 81       	ld	r25, Y
	eor M0, r25
    143a:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    143c:	49 27       	eor	r20, r25

	mov r30, ST02
    143e:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1440:	90 81       	ld	r25, Z
	eor M0, r25
    1442:	09 27       	eor	r16, r25
	eor T0, r25
    1444:	49 27       	eor	r20, r25
	eor M3, r25
    1446:	39 27       	eor	r19, r25
	mov r28, ST02
    1448:	c2 2d       	mov	r28, r2
	ld  r25, Y
    144a:	98 81       	ld	r25, Y
	eor T0, r25
    144c:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    144e:	59 27       	eor	r21, r25

	mov r30, ST13
    1450:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1452:	90 81       	ld	r25, Z
	eor M0, r25
    1454:	09 27       	eor	r16, r25
	eor T0, r25
    1456:	49 27       	eor	r20, r25
	eor T1, r25 
    1458:	59 27       	eor	r21, r25
	mov r28, ST13
    145a:	c7 2d       	mov	r28, r7
	ld  r25, Y
    145c:	98 81       	ld	r25, Y
	eor T1, r25
    145e:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1460:	39 27       	eor	r19, r25

	mov ST20, M0
    1462:	80 2e       	mov	r8, r16
	mov ST21, T0
    1464:	94 2e       	mov	r9, r20
	mov ST22, T1
    1466:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1468:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    146a:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    146c:	50 81       	ld	r21, Z
	mov T3, T1
    146e:	75 2f       	mov	r23, r21
	mov r25, T3 
    1470:	97 2f       	mov	r25, r23
	mov r28, ST30
    1472:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1474:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1476:	94 27       	eor	r25, r20

	mov r30, ST01
    1478:	e1 2d       	mov	r30, r1
	ld  M0, Z
    147a:	00 81       	ld	r16, Z
	eor T0, M0
    147c:	40 27       	eor	r20, r16
	eor T3, M0
    147e:	70 27       	eor	r23, r16
	eor r25, M0 
    1480:	90 27       	eor	r25, r16
	mov r28, ST01
    1482:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1484:	08 81       	ld	r16, Y
	eor T0, M0
    1486:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1488:	50 27       	eor	r21, r16

	mov r30, ST12
    148a:	e6 2d       	mov	r30, r6
	ld  M0, Z
    148c:	00 81       	ld	r16, Z
	eor T0, M0
    148e:	40 27       	eor	r20, r16
	eor T1, M0
    1490:	50 27       	eor	r21, r16
	eor r25, M0 
    1492:	90 27       	eor	r25, r16
	mov r28, ST12
    1494:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1496:	08 81       	ld	r16, Y
	eor T1, M0
    1498:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    149a:	70 27       	eor	r23, r16

	mov r30, ST23
    149c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    149e:	00 81       	ld	r16, Z
	eor T0, M0
    14a0:	40 27       	eor	r20, r16
	eor T1, M0
    14a2:	50 27       	eor	r21, r16
	eor T3, M0 
    14a4:	70 27       	eor	r23, r16
	mov r28, ST23
    14a6:	cb 2d       	mov	r28, r11
	ld  M0, Y
    14a8:	08 81       	ld	r16, Y
	eor T3, M0
    14aa:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    14ac:	90 27       	eor	r25, r16

	mov ST30, T0
    14ae:	c4 2e       	mov	r12, r20
	mov ST31, T1
    14b0:	d5 2e       	mov	r13, r21
	mov ST32, T3
    14b2:	e7 2e       	mov	r14, r23
	mov ST33, r25
    14b4:	f9 2e       	mov	r15, r25
	mov ST01, M1
    14b6:	11 2e       	mov	r1, r17
	mov ST02, M2
    14b8:	22 2e       	mov	r2, r18
	mov ST12, T2
    14ba:	66 2e       	mov	r6, r22
	mov ST23, M3
    14bc:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    14be:	0d 91       	ld	r16, X+
    14c0:	00 26       	eor	r0, r16
    14c2:	0d 91       	ld	r16, X+
    14c4:	10 26       	eor	r1, r16
    14c6:	0d 91       	ld	r16, X+
    14c8:	20 26       	eor	r2, r16
    14ca:	0d 91       	ld	r16, X+
    14cc:	30 26       	eor	r3, r16
    14ce:	0d 91       	ld	r16, X+
    14d0:	40 26       	eor	r4, r16
    14d2:	0d 91       	ld	r16, X+
    14d4:	50 26       	eor	r5, r16
    14d6:	0d 91       	ld	r16, X+
    14d8:	60 26       	eor	r6, r16
    14da:	0d 91       	ld	r16, X+
    14dc:	70 26       	eor	r7, r16
    14de:	0d 91       	ld	r16, X+
    14e0:	80 26       	eor	r8, r16
    14e2:	0d 91       	ld	r16, X+
    14e4:	90 26       	eor	r9, r16
    14e6:	0d 91       	ld	r16, X+
    14e8:	a0 26       	eor	r10, r16
    14ea:	0d 91       	ld	r16, X+
    14ec:	b0 26       	eor	r11, r16
    14ee:	0d 91       	ld	r16, X+
    14f0:	c0 26       	eor	r12, r16
    14f2:	0d 91       	ld	r16, X+
    14f4:	d0 26       	eor	r13, r16
    14f6:	0d 91       	ld	r16, X+
    14f8:	e0 26       	eor	r14, r16
    14fa:	0d 91       	ld	r16, X+
    14fc:	f0 26       	eor	r15, r16
	
	//4 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    14fe:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1500:	10 81       	ld	r17, Z
	mov M2, M1
    1502:	21 2f       	mov	r18, r17
	mov M3, M2 
    1504:	32 2f       	mov	r19, r18
	mov r28, ST00
    1506:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1508:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    150a:	30 27       	eor	r19, r16

	mov r30, ST11
    150c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    150e:	40 81       	ld	r20, Z
	eor M0, T0
    1510:	04 27       	eor	r16, r20
	eor M2, T0
    1512:	24 27       	eor	r18, r20
	eor M3, T0 
    1514:	34 27       	eor	r19, r20
	mov r28, ST11
    1516:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1518:	48 81       	ld	r20, Y
	eor M0, T0
    151a:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    151c:	14 27       	eor	r17, r20

	mov r30, ST22
    151e:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1520:	40 81       	ld	r20, Z
	eor M0, T0
    1522:	04 27       	eor	r16, r20
	eor M1, T0
    1524:	14 27       	eor	r17, r20
	eor M3, T0
    1526:	34 27       	eor	r19, r20
	mov r28, ST22
    1528:	ca 2d       	mov	r28, r10
	ld  T0, Y
    152a:	48 81       	ld	r20, Y
	eor M1, T0
    152c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    152e:	24 27       	eor	r18, r20

	mov r30, ST33
    1530:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1532:	40 81       	ld	r20, Z
	eor M0, T0
    1534:	04 27       	eor	r16, r20
	eor M1, T0
    1536:	14 27       	eor	r17, r20
	eor M2, T0 
    1538:	24 27       	eor	r18, r20
	mov r28, ST33
    153a:	cf 2d       	mov	r28, r15
	ld  T0, Y
    153c:	48 81       	ld	r20, Y
	eor M2, T0
    153e:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1540:	34 27       	eor	r19, r20

	mov ST00, M0
    1542:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1544:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1546:	50 81       	ld	r21, Z
	mov T2, T1
    1548:	65 2f       	mov	r22, r21
	mov T3, T2 
    154a:	76 2f       	mov	r23, r22
	mov r28, ST10
    154c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    154e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1550:	74 27       	eor	r23, r20

	mov r30, ST21
    1552:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1554:	00 81       	ld	r16, Z
	eor T0, M0
    1556:	40 27       	eor	r20, r16
	eor T2, M0
    1558:	60 27       	eor	r22, r16
	eor T3, M0 
    155a:	70 27       	eor	r23, r16
	mov r28, ST21
    155c:	c9 2d       	mov	r28, r9
	ld  M0, Y
    155e:	08 81       	ld	r16, Y
	eor T0, M0
    1560:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1562:	50 27       	eor	r21, r16

	mov r30, ST32
    1564:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1566:	00 81       	ld	r16, Z
	eor T0, M0
    1568:	40 27       	eor	r20, r16
	eor T1, M0
    156a:	50 27       	eor	r21, r16
	eor T3, M0 
    156c:	70 27       	eor	r23, r16
	mov r28, ST32
    156e:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1570:	08 81       	ld	r16, Y
	eor T1, M0
    1572:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1574:	60 27       	eor	r22, r16

	mov r30, ST03
    1576:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1578:	00 81       	ld	r16, Z
	eor T0, M0
    157a:	40 27       	eor	r20, r16
	eor T1, M0
    157c:	50 27       	eor	r21, r16
	eor T2, M0 
    157e:	60 27       	eor	r22, r16
	mov r28, ST03
    1580:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1582:	08 81       	ld	r16, Y
	eor T2, M0
    1584:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1586:	70 27       	eor	r23, r16

	mov ST10, T0
    1588:	44 2e       	mov	r4, r20
	mov ST11, T1
    158a:	55 2e       	mov	r5, r21
	mov ST03, M3
    158c:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    158e:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1590:	40 81       	ld	r20, Z
	mov T1, T0
    1592:	54 2f       	mov	r21, r20
	mov M3, T1 
    1594:	35 2f       	mov	r19, r21
	mov r28, ST20
    1596:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1598:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    159a:	30 27       	eor	r19, r16

	mov r30, ST31
    159c:	ed 2d       	mov	r30, r13
	ld  r25, Z
    159e:	90 81       	ld	r25, Z
	eor M0, r25
    15a0:	09 27       	eor	r16, r25
	eor T1, r25
    15a2:	59 27       	eor	r21, r25
	eor M3, r25
    15a4:	39 27       	eor	r19, r25
	mov r28, ST31
    15a6:	cd 2d       	mov	r28, r13
	ld  r25, Y
    15a8:	98 81       	ld	r25, Y
	eor M0, r25
    15aa:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    15ac:	49 27       	eor	r20, r25

	mov r30, ST02
    15ae:	e2 2d       	mov	r30, r2
	ld  r25, Z
    15b0:	90 81       	ld	r25, Z
	eor M0, r25
    15b2:	09 27       	eor	r16, r25
	eor T0, r25
    15b4:	49 27       	eor	r20, r25
	eor M3, r25
    15b6:	39 27       	eor	r19, r25
	mov r28, ST02
    15b8:	c2 2d       	mov	r28, r2
	ld  r25, Y
    15ba:	98 81       	ld	r25, Y
	eor T0, r25
    15bc:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    15be:	59 27       	eor	r21, r25

	mov r30, ST13
    15c0:	e7 2d       	mov	r30, r7
	ld  r25, Z
    15c2:	90 81       	ld	r25, Z
	eor M0, r25
    15c4:	09 27       	eor	r16, r25
	eor T0, r25
    15c6:	49 27       	eor	r20, r25
	eor T1, r25 
    15c8:	59 27       	eor	r21, r25
	mov r28, ST13
    15ca:	c7 2d       	mov	r28, r7
	ld  r25, Y
    15cc:	98 81       	ld	r25, Y
	eor T1, r25
    15ce:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    15d0:	39 27       	eor	r19, r25

	mov ST20, M0
    15d2:	80 2e       	mov	r8, r16
	mov ST21, T0
    15d4:	94 2e       	mov	r9, r20
	mov ST22, T1
    15d6:	a5 2e       	mov	r10, r21
	mov ST13, T3
    15d8:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    15da:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    15dc:	50 81       	ld	r21, Z
	mov T3, T1
    15de:	75 2f       	mov	r23, r21
	mov r25, T3 
    15e0:	97 2f       	mov	r25, r23
	mov r28, ST30
    15e2:	cc 2d       	mov	r28, r12
	ld  T0, Y
    15e4:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    15e6:	94 27       	eor	r25, r20

	mov r30, ST01
    15e8:	e1 2d       	mov	r30, r1
	ld  M0, Z
    15ea:	00 81       	ld	r16, Z
	eor T0, M0
    15ec:	40 27       	eor	r20, r16
	eor T3, M0
    15ee:	70 27       	eor	r23, r16
	eor r25, M0 
    15f0:	90 27       	eor	r25, r16
	mov r28, ST01
    15f2:	c1 2d       	mov	r28, r1
	ld  M0, Y
    15f4:	08 81       	ld	r16, Y
	eor T0, M0
    15f6:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    15f8:	50 27       	eor	r21, r16

	mov r30, ST12
    15fa:	e6 2d       	mov	r30, r6
	ld  M0, Z
    15fc:	00 81       	ld	r16, Z
	eor T0, M0
    15fe:	40 27       	eor	r20, r16
	eor T1, M0
    1600:	50 27       	eor	r21, r16
	eor r25, M0 
    1602:	90 27       	eor	r25, r16
	mov r28, ST12
    1604:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1606:	08 81       	ld	r16, Y
	eor T1, M0
    1608:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    160a:	70 27       	eor	r23, r16

	mov r30, ST23
    160c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    160e:	00 81       	ld	r16, Z
	eor T0, M0
    1610:	40 27       	eor	r20, r16
	eor T1, M0
    1612:	50 27       	eor	r21, r16
	eor T3, M0 
    1614:	70 27       	eor	r23, r16
	mov r28, ST23
    1616:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1618:	08 81       	ld	r16, Y
	eor T3, M0
    161a:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    161c:	90 27       	eor	r25, r16

	mov ST30, T0
    161e:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1620:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1622:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1624:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1626:	11 2e       	mov	r1, r17
	mov ST02, M2
    1628:	22 2e       	mov	r2, r18
	mov ST12, T2
    162a:	66 2e       	mov	r6, r22
	mov ST23, M3
    162c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    162e:	0d 91       	ld	r16, X+
    1630:	00 26       	eor	r0, r16
    1632:	0d 91       	ld	r16, X+
    1634:	10 26       	eor	r1, r16
    1636:	0d 91       	ld	r16, X+
    1638:	20 26       	eor	r2, r16
    163a:	0d 91       	ld	r16, X+
    163c:	30 26       	eor	r3, r16
    163e:	0d 91       	ld	r16, X+
    1640:	40 26       	eor	r4, r16
    1642:	0d 91       	ld	r16, X+
    1644:	50 26       	eor	r5, r16
    1646:	0d 91       	ld	r16, X+
    1648:	60 26       	eor	r6, r16
    164a:	0d 91       	ld	r16, X+
    164c:	70 26       	eor	r7, r16
    164e:	0d 91       	ld	r16, X+
    1650:	80 26       	eor	r8, r16
    1652:	0d 91       	ld	r16, X+
    1654:	90 26       	eor	r9, r16
    1656:	0d 91       	ld	r16, X+
    1658:	a0 26       	eor	r10, r16
    165a:	0d 91       	ld	r16, X+
    165c:	b0 26       	eor	r11, r16
    165e:	0d 91       	ld	r16, X+
    1660:	c0 26       	eor	r12, r16
    1662:	0d 91       	ld	r16, X+
    1664:	d0 26       	eor	r13, r16
    1666:	0d 91       	ld	r16, X+
    1668:	e0 26       	eor	r14, r16
    166a:	0d 91       	ld	r16, X+
    166c:	f0 26       	eor	r15, r16
	
	//5 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    166e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1670:	10 81       	ld	r17, Z
	mov M2, M1
    1672:	21 2f       	mov	r18, r17
	mov M3, M2 
    1674:	32 2f       	mov	r19, r18
	mov r28, ST00
    1676:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1678:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    167a:	30 27       	eor	r19, r16

	mov r30, ST11
    167c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    167e:	40 81       	ld	r20, Z
	eor M0, T0
    1680:	04 27       	eor	r16, r20
	eor M2, T0
    1682:	24 27       	eor	r18, r20
	eor M3, T0 
    1684:	34 27       	eor	r19, r20
	mov r28, ST11
    1686:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1688:	48 81       	ld	r20, Y
	eor M0, T0
    168a:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    168c:	14 27       	eor	r17, r20

	mov r30, ST22
    168e:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1690:	40 81       	ld	r20, Z
	eor M0, T0
    1692:	04 27       	eor	r16, r20
	eor M1, T0
    1694:	14 27       	eor	r17, r20
	eor M3, T0
    1696:	34 27       	eor	r19, r20
	mov r28, ST22
    1698:	ca 2d       	mov	r28, r10
	ld  T0, Y
    169a:	48 81       	ld	r20, Y
	eor M1, T0
    169c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    169e:	24 27       	eor	r18, r20

	mov r30, ST33
    16a0:	ef 2d       	mov	r30, r15
	ld  T0, Z
    16a2:	40 81       	ld	r20, Z
	eor M0, T0
    16a4:	04 27       	eor	r16, r20
	eor M1, T0
    16a6:	14 27       	eor	r17, r20
	eor M2, T0 
    16a8:	24 27       	eor	r18, r20
	mov r28, ST33
    16aa:	cf 2d       	mov	r28, r15
	ld  T0, Y
    16ac:	48 81       	ld	r20, Y
	eor M2, T0
    16ae:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    16b0:	34 27       	eor	r19, r20

	mov ST00, M0
    16b2:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    16b4:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    16b6:	50 81       	ld	r21, Z
	mov T2, T1
    16b8:	65 2f       	mov	r22, r21
	mov T3, T2 
    16ba:	76 2f       	mov	r23, r22
	mov r28, ST10
    16bc:	c4 2d       	mov	r28, r4
	ld  T0, Y
    16be:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    16c0:	74 27       	eor	r23, r20

	mov r30, ST21
    16c2:	e9 2d       	mov	r30, r9
	ld  M0, Z
    16c4:	00 81       	ld	r16, Z
	eor T0, M0
    16c6:	40 27       	eor	r20, r16
	eor T2, M0
    16c8:	60 27       	eor	r22, r16
	eor T3, M0 
    16ca:	70 27       	eor	r23, r16
	mov r28, ST21
    16cc:	c9 2d       	mov	r28, r9
	ld  M0, Y
    16ce:	08 81       	ld	r16, Y
	eor T0, M0
    16d0:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    16d2:	50 27       	eor	r21, r16

	mov r30, ST32
    16d4:	ee 2d       	mov	r30, r14
	ld  M0, Z
    16d6:	00 81       	ld	r16, Z
	eor T0, M0
    16d8:	40 27       	eor	r20, r16
	eor T1, M0
    16da:	50 27       	eor	r21, r16
	eor T3, M0 
    16dc:	70 27       	eor	r23, r16
	mov r28, ST32
    16de:	ce 2d       	mov	r28, r14
	ld  M0, Y
    16e0:	08 81       	ld	r16, Y
	eor T1, M0
    16e2:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    16e4:	60 27       	eor	r22, r16

	mov r30, ST03
    16e6:	e3 2d       	mov	r30, r3
	ld  M0, Z
    16e8:	00 81       	ld	r16, Z
	eor T0, M0
    16ea:	40 27       	eor	r20, r16
	eor T1, M0
    16ec:	50 27       	eor	r21, r16
	eor T2, M0 
    16ee:	60 27       	eor	r22, r16
	mov r28, ST03
    16f0:	c3 2d       	mov	r28, r3
	ld  M0, Y
    16f2:	08 81       	ld	r16, Y
	eor T2, M0
    16f4:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    16f6:	70 27       	eor	r23, r16

	mov ST10, T0
    16f8:	44 2e       	mov	r4, r20
	mov ST11, T1
    16fa:	55 2e       	mov	r5, r21
	mov ST03, M3
    16fc:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    16fe:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1700:	40 81       	ld	r20, Z
	mov T1, T0
    1702:	54 2f       	mov	r21, r20
	mov M3, T1 
    1704:	35 2f       	mov	r19, r21
	mov r28, ST20
    1706:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1708:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    170a:	30 27       	eor	r19, r16

	mov r30, ST31
    170c:	ed 2d       	mov	r30, r13
	ld  r25, Z
    170e:	90 81       	ld	r25, Z
	eor M0, r25
    1710:	09 27       	eor	r16, r25
	eor T1, r25
    1712:	59 27       	eor	r21, r25
	eor M3, r25
    1714:	39 27       	eor	r19, r25
	mov r28, ST31
    1716:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1718:	98 81       	ld	r25, Y
	eor M0, r25
    171a:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    171c:	49 27       	eor	r20, r25

	mov r30, ST02
    171e:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1720:	90 81       	ld	r25, Z
	eor M0, r25
    1722:	09 27       	eor	r16, r25
	eor T0, r25
    1724:	49 27       	eor	r20, r25
	eor M3, r25
    1726:	39 27       	eor	r19, r25
	mov r28, ST02
    1728:	c2 2d       	mov	r28, r2
	ld  r25, Y
    172a:	98 81       	ld	r25, Y
	eor T0, r25
    172c:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    172e:	59 27       	eor	r21, r25

	mov r30, ST13
    1730:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1732:	90 81       	ld	r25, Z
	eor M0, r25
    1734:	09 27       	eor	r16, r25
	eor T0, r25
    1736:	49 27       	eor	r20, r25
	eor T1, r25 
    1738:	59 27       	eor	r21, r25
	mov r28, ST13
    173a:	c7 2d       	mov	r28, r7
	ld  r25, Y
    173c:	98 81       	ld	r25, Y
	eor T1, r25
    173e:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1740:	39 27       	eor	r19, r25

	mov ST20, M0
    1742:	80 2e       	mov	r8, r16
	mov ST21, T0
    1744:	94 2e       	mov	r9, r20
	mov ST22, T1
    1746:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1748:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    174a:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    174c:	50 81       	ld	r21, Z
	mov T3, T1
    174e:	75 2f       	mov	r23, r21
	mov r25, T3 
    1750:	97 2f       	mov	r25, r23
	mov r28, ST30
    1752:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1754:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1756:	94 27       	eor	r25, r20

	mov r30, ST01
    1758:	e1 2d       	mov	r30, r1
	ld  M0, Z
    175a:	00 81       	ld	r16, Z
	eor T0, M0
    175c:	40 27       	eor	r20, r16
	eor T3, M0
    175e:	70 27       	eor	r23, r16
	eor r25, M0 
    1760:	90 27       	eor	r25, r16
	mov r28, ST01
    1762:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1764:	08 81       	ld	r16, Y
	eor T0, M0
    1766:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1768:	50 27       	eor	r21, r16

	mov r30, ST12
    176a:	e6 2d       	mov	r30, r6
	ld  M0, Z
    176c:	00 81       	ld	r16, Z
	eor T0, M0
    176e:	40 27       	eor	r20, r16
	eor T1, M0
    1770:	50 27       	eor	r21, r16
	eor r25, M0 
    1772:	90 27       	eor	r25, r16
	mov r28, ST12
    1774:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1776:	08 81       	ld	r16, Y
	eor T1, M0
    1778:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    177a:	70 27       	eor	r23, r16

	mov r30, ST23
    177c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    177e:	00 81       	ld	r16, Z
	eor T0, M0
    1780:	40 27       	eor	r20, r16
	eor T1, M0
    1782:	50 27       	eor	r21, r16
	eor T3, M0 
    1784:	70 27       	eor	r23, r16
	mov r28, ST23
    1786:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1788:	08 81       	ld	r16, Y
	eor T3, M0
    178a:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    178c:	90 27       	eor	r25, r16

	mov ST30, T0
    178e:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1790:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1792:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1794:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1796:	11 2e       	mov	r1, r17
	mov ST02, M2
    1798:	22 2e       	mov	r2, r18
	mov ST12, T2
    179a:	66 2e       	mov	r6, r22
	mov ST23, M3
    179c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    179e:	0d 91       	ld	r16, X+
    17a0:	00 26       	eor	r0, r16
    17a2:	0d 91       	ld	r16, X+
    17a4:	10 26       	eor	r1, r16
    17a6:	0d 91       	ld	r16, X+
    17a8:	20 26       	eor	r2, r16
    17aa:	0d 91       	ld	r16, X+
    17ac:	30 26       	eor	r3, r16
    17ae:	0d 91       	ld	r16, X+
    17b0:	40 26       	eor	r4, r16
    17b2:	0d 91       	ld	r16, X+
    17b4:	50 26       	eor	r5, r16
    17b6:	0d 91       	ld	r16, X+
    17b8:	60 26       	eor	r6, r16
    17ba:	0d 91       	ld	r16, X+
    17bc:	70 26       	eor	r7, r16
    17be:	0d 91       	ld	r16, X+
    17c0:	80 26       	eor	r8, r16
    17c2:	0d 91       	ld	r16, X+
    17c4:	90 26       	eor	r9, r16
    17c6:	0d 91       	ld	r16, X+
    17c8:	a0 26       	eor	r10, r16
    17ca:	0d 91       	ld	r16, X+
    17cc:	b0 26       	eor	r11, r16
    17ce:	0d 91       	ld	r16, X+
    17d0:	c0 26       	eor	r12, r16
    17d2:	0d 91       	ld	r16, X+
    17d4:	d0 26       	eor	r13, r16
    17d6:	0d 91       	ld	r16, X+
    17d8:	e0 26       	eor	r14, r16
    17da:	0d 91       	ld	r16, X+
    17dc:	f0 26       	eor	r15, r16
	
	//6 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    17de:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    17e0:	10 81       	ld	r17, Z
	mov M2, M1
    17e2:	21 2f       	mov	r18, r17
	mov M3, M2 
    17e4:	32 2f       	mov	r19, r18
	mov r28, ST00
    17e6:	c0 2d       	mov	r28, r0
	ld  M0, Y
    17e8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    17ea:	30 27       	eor	r19, r16

	mov r30, ST11
    17ec:	e5 2d       	mov	r30, r5
	ld  T0, Z
    17ee:	40 81       	ld	r20, Z
	eor M0, T0
    17f0:	04 27       	eor	r16, r20
	eor M2, T0
    17f2:	24 27       	eor	r18, r20
	eor M3, T0 
    17f4:	34 27       	eor	r19, r20
	mov r28, ST11
    17f6:	c5 2d       	mov	r28, r5
	ld  T0, Y
    17f8:	48 81       	ld	r20, Y
	eor M0, T0
    17fa:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    17fc:	14 27       	eor	r17, r20

	mov r30, ST22
    17fe:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1800:	40 81       	ld	r20, Z
	eor M0, T0
    1802:	04 27       	eor	r16, r20
	eor M1, T0
    1804:	14 27       	eor	r17, r20
	eor M3, T0
    1806:	34 27       	eor	r19, r20
	mov r28, ST22
    1808:	ca 2d       	mov	r28, r10
	ld  T0, Y
    180a:	48 81       	ld	r20, Y
	eor M1, T0
    180c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    180e:	24 27       	eor	r18, r20

	mov r30, ST33
    1810:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1812:	40 81       	ld	r20, Z
	eor M0, T0
    1814:	04 27       	eor	r16, r20
	eor M1, T0
    1816:	14 27       	eor	r17, r20
	eor M2, T0 
    1818:	24 27       	eor	r18, r20
	mov r28, ST33
    181a:	cf 2d       	mov	r28, r15
	ld  T0, Y
    181c:	48 81       	ld	r20, Y
	eor M2, T0
    181e:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1820:	34 27       	eor	r19, r20

	mov ST00, M0
    1822:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1824:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1826:	50 81       	ld	r21, Z
	mov T2, T1
    1828:	65 2f       	mov	r22, r21
	mov T3, T2 
    182a:	76 2f       	mov	r23, r22
	mov r28, ST10
    182c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    182e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1830:	74 27       	eor	r23, r20

	mov r30, ST21
    1832:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1834:	00 81       	ld	r16, Z
	eor T0, M0
    1836:	40 27       	eor	r20, r16
	eor T2, M0
    1838:	60 27       	eor	r22, r16
	eor T3, M0 
    183a:	70 27       	eor	r23, r16
	mov r28, ST21
    183c:	c9 2d       	mov	r28, r9
	ld  M0, Y
    183e:	08 81       	ld	r16, Y
	eor T0, M0
    1840:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1842:	50 27       	eor	r21, r16

	mov r30, ST32
    1844:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1846:	00 81       	ld	r16, Z
	eor T0, M0
    1848:	40 27       	eor	r20, r16
	eor T1, M0
    184a:	50 27       	eor	r21, r16
	eor T3, M0 
    184c:	70 27       	eor	r23, r16
	mov r28, ST32
    184e:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1850:	08 81       	ld	r16, Y
	eor T1, M0
    1852:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1854:	60 27       	eor	r22, r16

	mov r30, ST03
    1856:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1858:	00 81       	ld	r16, Z
	eor T0, M0
    185a:	40 27       	eor	r20, r16
	eor T1, M0
    185c:	50 27       	eor	r21, r16
	eor T2, M0 
    185e:	60 27       	eor	r22, r16
	mov r28, ST03
    1860:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1862:	08 81       	ld	r16, Y
	eor T2, M0
    1864:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1866:	70 27       	eor	r23, r16

	mov ST10, T0
    1868:	44 2e       	mov	r4, r20
	mov ST11, T1
    186a:	55 2e       	mov	r5, r21
	mov ST03, M3
    186c:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    186e:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1870:	40 81       	ld	r20, Z
	mov T1, T0
    1872:	54 2f       	mov	r21, r20
	mov M3, T1 
    1874:	35 2f       	mov	r19, r21
	mov r28, ST20
    1876:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1878:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    187a:	30 27       	eor	r19, r16

	mov r30, ST31
    187c:	ed 2d       	mov	r30, r13
	ld  r25, Z
    187e:	90 81       	ld	r25, Z
	eor M0, r25
    1880:	09 27       	eor	r16, r25
	eor T1, r25
    1882:	59 27       	eor	r21, r25
	eor M3, r25
    1884:	39 27       	eor	r19, r25
	mov r28, ST31
    1886:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1888:	98 81       	ld	r25, Y
	eor M0, r25
    188a:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    188c:	49 27       	eor	r20, r25

	mov r30, ST02
    188e:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1890:	90 81       	ld	r25, Z
	eor M0, r25
    1892:	09 27       	eor	r16, r25
	eor T0, r25
    1894:	49 27       	eor	r20, r25
	eor M3, r25
    1896:	39 27       	eor	r19, r25
	mov r28, ST02
    1898:	c2 2d       	mov	r28, r2
	ld  r25, Y
    189a:	98 81       	ld	r25, Y
	eor T0, r25
    189c:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    189e:	59 27       	eor	r21, r25

	mov r30, ST13
    18a0:	e7 2d       	mov	r30, r7
	ld  r25, Z
    18a2:	90 81       	ld	r25, Z
	eor M0, r25
    18a4:	09 27       	eor	r16, r25
	eor T0, r25
    18a6:	49 27       	eor	r20, r25
	eor T1, r25 
    18a8:	59 27       	eor	r21, r25
	mov r28, ST13
    18aa:	c7 2d       	mov	r28, r7
	ld  r25, Y
    18ac:	98 81       	ld	r25, Y
	eor T1, r25
    18ae:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    18b0:	39 27       	eor	r19, r25

	mov ST20, M0
    18b2:	80 2e       	mov	r8, r16
	mov ST21, T0
    18b4:	94 2e       	mov	r9, r20
	mov ST22, T1
    18b6:	a5 2e       	mov	r10, r21
	mov ST13, T3
    18b8:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    18ba:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    18bc:	50 81       	ld	r21, Z
	mov T3, T1
    18be:	75 2f       	mov	r23, r21
	mov r25, T3 
    18c0:	97 2f       	mov	r25, r23
	mov r28, ST30
    18c2:	cc 2d       	mov	r28, r12
	ld  T0, Y
    18c4:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    18c6:	94 27       	eor	r25, r20

	mov r30, ST01
    18c8:	e1 2d       	mov	r30, r1
	ld  M0, Z
    18ca:	00 81       	ld	r16, Z
	eor T0, M0
    18cc:	40 27       	eor	r20, r16
	eor T3, M0
    18ce:	70 27       	eor	r23, r16
	eor r25, M0 
    18d0:	90 27       	eor	r25, r16
	mov r28, ST01
    18d2:	c1 2d       	mov	r28, r1
	ld  M0, Y
    18d4:	08 81       	ld	r16, Y
	eor T0, M0
    18d6:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    18d8:	50 27       	eor	r21, r16

	mov r30, ST12
    18da:	e6 2d       	mov	r30, r6
	ld  M0, Z
    18dc:	00 81       	ld	r16, Z
	eor T0, M0
    18de:	40 27       	eor	r20, r16
	eor T1, M0
    18e0:	50 27       	eor	r21, r16
	eor r25, M0 
    18e2:	90 27       	eor	r25, r16
	mov r28, ST12
    18e4:	c6 2d       	mov	r28, r6
	ld  M0, Y
    18e6:	08 81       	ld	r16, Y
	eor T1, M0
    18e8:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    18ea:	70 27       	eor	r23, r16

	mov r30, ST23
    18ec:	eb 2d       	mov	r30, r11
	ld  M0, Z
    18ee:	00 81       	ld	r16, Z
	eor T0, M0
    18f0:	40 27       	eor	r20, r16
	eor T1, M0
    18f2:	50 27       	eor	r21, r16
	eor T3, M0 
    18f4:	70 27       	eor	r23, r16
	mov r28, ST23
    18f6:	cb 2d       	mov	r28, r11
	ld  M0, Y
    18f8:	08 81       	ld	r16, Y
	eor T3, M0
    18fa:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    18fc:	90 27       	eor	r25, r16

	mov ST30, T0
    18fe:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1900:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1902:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1904:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1906:	11 2e       	mov	r1, r17
	mov ST02, M2
    1908:	22 2e       	mov	r2, r18
	mov ST12, T2
    190a:	66 2e       	mov	r6, r22
	mov ST23, M3
    190c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    190e:	0d 91       	ld	r16, X+
    1910:	00 26       	eor	r0, r16
    1912:	0d 91       	ld	r16, X+
    1914:	10 26       	eor	r1, r16
    1916:	0d 91       	ld	r16, X+
    1918:	20 26       	eor	r2, r16
    191a:	0d 91       	ld	r16, X+
    191c:	30 26       	eor	r3, r16
    191e:	0d 91       	ld	r16, X+
    1920:	40 26       	eor	r4, r16
    1922:	0d 91       	ld	r16, X+
    1924:	50 26       	eor	r5, r16
    1926:	0d 91       	ld	r16, X+
    1928:	60 26       	eor	r6, r16
    192a:	0d 91       	ld	r16, X+
    192c:	70 26       	eor	r7, r16
    192e:	0d 91       	ld	r16, X+
    1930:	80 26       	eor	r8, r16
    1932:	0d 91       	ld	r16, X+
    1934:	90 26       	eor	r9, r16
    1936:	0d 91       	ld	r16, X+
    1938:	a0 26       	eor	r10, r16
    193a:	0d 91       	ld	r16, X+
    193c:	b0 26       	eor	r11, r16
    193e:	0d 91       	ld	r16, X+
    1940:	c0 26       	eor	r12, r16
    1942:	0d 91       	ld	r16, X+
    1944:	d0 26       	eor	r13, r16
    1946:	0d 91       	ld	r16, X+
    1948:	e0 26       	eor	r14, r16
    194a:	0d 91       	ld	r16, X+
    194c:	f0 26       	eor	r15, r16
	
	//7 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    194e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1950:	10 81       	ld	r17, Z
	mov M2, M1
    1952:	21 2f       	mov	r18, r17
	mov M3, M2 
    1954:	32 2f       	mov	r19, r18
	mov r28, ST00
    1956:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1958:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    195a:	30 27       	eor	r19, r16

	mov r30, ST11
    195c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    195e:	40 81       	ld	r20, Z
	eor M0, T0
    1960:	04 27       	eor	r16, r20
	eor M2, T0
    1962:	24 27       	eor	r18, r20
	eor M3, T0 
    1964:	34 27       	eor	r19, r20
	mov r28, ST11
    1966:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1968:	48 81       	ld	r20, Y
	eor M0, T0
    196a:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    196c:	14 27       	eor	r17, r20

	mov r30, ST22
    196e:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1970:	40 81       	ld	r20, Z
	eor M0, T0
    1972:	04 27       	eor	r16, r20
	eor M1, T0
    1974:	14 27       	eor	r17, r20
	eor M3, T0
    1976:	34 27       	eor	r19, r20
	mov r28, ST22
    1978:	ca 2d       	mov	r28, r10
	ld  T0, Y
    197a:	48 81       	ld	r20, Y
	eor M1, T0
    197c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    197e:	24 27       	eor	r18, r20

	mov r30, ST33
    1980:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1982:	40 81       	ld	r20, Z
	eor M0, T0
    1984:	04 27       	eor	r16, r20
	eor M1, T0
    1986:	14 27       	eor	r17, r20
	eor M2, T0 
    1988:	24 27       	eor	r18, r20
	mov r28, ST33
    198a:	cf 2d       	mov	r28, r15
	ld  T0, Y
    198c:	48 81       	ld	r20, Y
	eor M2, T0
    198e:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1990:	34 27       	eor	r19, r20

	mov ST00, M0
    1992:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1994:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1996:	50 81       	ld	r21, Z
	mov T2, T1
    1998:	65 2f       	mov	r22, r21
	mov T3, T2 
    199a:	76 2f       	mov	r23, r22
	mov r28, ST10
    199c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    199e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    19a0:	74 27       	eor	r23, r20

	mov r30, ST21
    19a2:	e9 2d       	mov	r30, r9
	ld  M0, Z
    19a4:	00 81       	ld	r16, Z
	eor T0, M0
    19a6:	40 27       	eor	r20, r16
	eor T2, M0
    19a8:	60 27       	eor	r22, r16
	eor T3, M0 
    19aa:	70 27       	eor	r23, r16
	mov r28, ST21
    19ac:	c9 2d       	mov	r28, r9
	ld  M0, Y
    19ae:	08 81       	ld	r16, Y
	eor T0, M0
    19b0:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    19b2:	50 27       	eor	r21, r16

	mov r30, ST32
    19b4:	ee 2d       	mov	r30, r14
	ld  M0, Z
    19b6:	00 81       	ld	r16, Z
	eor T0, M0
    19b8:	40 27       	eor	r20, r16
	eor T1, M0
    19ba:	50 27       	eor	r21, r16
	eor T3, M0 
    19bc:	70 27       	eor	r23, r16
	mov r28, ST32
    19be:	ce 2d       	mov	r28, r14
	ld  M0, Y
    19c0:	08 81       	ld	r16, Y
	eor T1, M0
    19c2:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    19c4:	60 27       	eor	r22, r16

	mov r30, ST03
    19c6:	e3 2d       	mov	r30, r3
	ld  M0, Z
    19c8:	00 81       	ld	r16, Z
	eor T0, M0
    19ca:	40 27       	eor	r20, r16
	eor T1, M0
    19cc:	50 27       	eor	r21, r16
	eor T2, M0 
    19ce:	60 27       	eor	r22, r16
	mov r28, ST03
    19d0:	c3 2d       	mov	r28, r3
	ld  M0, Y
    19d2:	08 81       	ld	r16, Y
	eor T2, M0
    19d4:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    19d6:	70 27       	eor	r23, r16

	mov ST10, T0
    19d8:	44 2e       	mov	r4, r20
	mov ST11, T1
    19da:	55 2e       	mov	r5, r21
	mov ST03, M3
    19dc:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    19de:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    19e0:	40 81       	ld	r20, Z
	mov T1, T0
    19e2:	54 2f       	mov	r21, r20
	mov M3, T1 
    19e4:	35 2f       	mov	r19, r21
	mov r28, ST20
    19e6:	c8 2d       	mov	r28, r8
	ld  M0, Y
    19e8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    19ea:	30 27       	eor	r19, r16

	mov r30, ST31
    19ec:	ed 2d       	mov	r30, r13
	ld  r25, Z
    19ee:	90 81       	ld	r25, Z
	eor M0, r25
    19f0:	09 27       	eor	r16, r25
	eor T1, r25
    19f2:	59 27       	eor	r21, r25
	eor M3, r25
    19f4:	39 27       	eor	r19, r25
	mov r28, ST31
    19f6:	cd 2d       	mov	r28, r13
	ld  r25, Y
    19f8:	98 81       	ld	r25, Y
	eor M0, r25
    19fa:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    19fc:	49 27       	eor	r20, r25

	mov r30, ST02
    19fe:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1a00:	90 81       	ld	r25, Z
	eor M0, r25
    1a02:	09 27       	eor	r16, r25
	eor T0, r25
    1a04:	49 27       	eor	r20, r25
	eor M3, r25
    1a06:	39 27       	eor	r19, r25
	mov r28, ST02
    1a08:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1a0a:	98 81       	ld	r25, Y
	eor T0, r25
    1a0c:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1a0e:	59 27       	eor	r21, r25

	mov r30, ST13
    1a10:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1a12:	90 81       	ld	r25, Z
	eor M0, r25
    1a14:	09 27       	eor	r16, r25
	eor T0, r25
    1a16:	49 27       	eor	r20, r25
	eor T1, r25 
    1a18:	59 27       	eor	r21, r25
	mov r28, ST13
    1a1a:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1a1c:	98 81       	ld	r25, Y
	eor T1, r25
    1a1e:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1a20:	39 27       	eor	r19, r25

	mov ST20, M0
    1a22:	80 2e       	mov	r8, r16
	mov ST21, T0
    1a24:	94 2e       	mov	r9, r20
	mov ST22, T1
    1a26:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1a28:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1a2a:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1a2c:	50 81       	ld	r21, Z
	mov T3, T1
    1a2e:	75 2f       	mov	r23, r21
	mov r25, T3 
    1a30:	97 2f       	mov	r25, r23
	mov r28, ST30
    1a32:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1a34:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1a36:	94 27       	eor	r25, r20

	mov r30, ST01
    1a38:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1a3a:	00 81       	ld	r16, Z
	eor T0, M0
    1a3c:	40 27       	eor	r20, r16
	eor T3, M0
    1a3e:	70 27       	eor	r23, r16
	eor r25, M0 
    1a40:	90 27       	eor	r25, r16
	mov r28, ST01
    1a42:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1a44:	08 81       	ld	r16, Y
	eor T0, M0
    1a46:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1a48:	50 27       	eor	r21, r16

	mov r30, ST12
    1a4a:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1a4c:	00 81       	ld	r16, Z
	eor T0, M0
    1a4e:	40 27       	eor	r20, r16
	eor T1, M0
    1a50:	50 27       	eor	r21, r16
	eor r25, M0 
    1a52:	90 27       	eor	r25, r16
	mov r28, ST12
    1a54:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1a56:	08 81       	ld	r16, Y
	eor T1, M0
    1a58:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1a5a:	70 27       	eor	r23, r16

	mov r30, ST23
    1a5c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1a5e:	00 81       	ld	r16, Z
	eor T0, M0
    1a60:	40 27       	eor	r20, r16
	eor T1, M0
    1a62:	50 27       	eor	r21, r16
	eor T3, M0 
    1a64:	70 27       	eor	r23, r16
	mov r28, ST23
    1a66:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1a68:	08 81       	ld	r16, Y
	eor T3, M0
    1a6a:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1a6c:	90 27       	eor	r25, r16

	mov ST30, T0
    1a6e:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1a70:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1a72:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1a74:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1a76:	11 2e       	mov	r1, r17
	mov ST02, M2
    1a78:	22 2e       	mov	r2, r18
	mov ST12, T2
    1a7a:	66 2e       	mov	r6, r22
	mov ST23, M3
    1a7c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1a7e:	0d 91       	ld	r16, X+
    1a80:	00 26       	eor	r0, r16
    1a82:	0d 91       	ld	r16, X+
    1a84:	10 26       	eor	r1, r16
    1a86:	0d 91       	ld	r16, X+
    1a88:	20 26       	eor	r2, r16
    1a8a:	0d 91       	ld	r16, X+
    1a8c:	30 26       	eor	r3, r16
    1a8e:	0d 91       	ld	r16, X+
    1a90:	40 26       	eor	r4, r16
    1a92:	0d 91       	ld	r16, X+
    1a94:	50 26       	eor	r5, r16
    1a96:	0d 91       	ld	r16, X+
    1a98:	60 26       	eor	r6, r16
    1a9a:	0d 91       	ld	r16, X+
    1a9c:	70 26       	eor	r7, r16
    1a9e:	0d 91       	ld	r16, X+
    1aa0:	80 26       	eor	r8, r16
    1aa2:	0d 91       	ld	r16, X+
    1aa4:	90 26       	eor	r9, r16
    1aa6:	0d 91       	ld	r16, X+
    1aa8:	a0 26       	eor	r10, r16
    1aaa:	0d 91       	ld	r16, X+
    1aac:	b0 26       	eor	r11, r16
    1aae:	0d 91       	ld	r16, X+
    1ab0:	c0 26       	eor	r12, r16
    1ab2:	0d 91       	ld	r16, X+
    1ab4:	d0 26       	eor	r13, r16
    1ab6:	0d 91       	ld	r16, X+
    1ab8:	e0 26       	eor	r14, r16
    1aba:	0d 91       	ld	r16, X+
    1abc:	f0 26       	eor	r15, r16
	
	//8 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1abe:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1ac0:	10 81       	ld	r17, Z
	mov M2, M1
    1ac2:	21 2f       	mov	r18, r17
	mov M3, M2 
    1ac4:	32 2f       	mov	r19, r18
	mov r28, ST00
    1ac6:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1ac8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1aca:	30 27       	eor	r19, r16

	mov r30, ST11
    1acc:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1ace:	40 81       	ld	r20, Z
	eor M0, T0
    1ad0:	04 27       	eor	r16, r20
	eor M2, T0
    1ad2:	24 27       	eor	r18, r20
	eor M3, T0 
    1ad4:	34 27       	eor	r19, r20
	mov r28, ST11
    1ad6:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1ad8:	48 81       	ld	r20, Y
	eor M0, T0
    1ada:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1adc:	14 27       	eor	r17, r20

	mov r30, ST22
    1ade:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1ae0:	40 81       	ld	r20, Z
	eor M0, T0
    1ae2:	04 27       	eor	r16, r20
	eor M1, T0
    1ae4:	14 27       	eor	r17, r20
	eor M3, T0
    1ae6:	34 27       	eor	r19, r20
	mov r28, ST22
    1ae8:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1aea:	48 81       	ld	r20, Y
	eor M1, T0
    1aec:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1aee:	24 27       	eor	r18, r20

	mov r30, ST33
    1af0:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1af2:	40 81       	ld	r20, Z
	eor M0, T0
    1af4:	04 27       	eor	r16, r20
	eor M1, T0
    1af6:	14 27       	eor	r17, r20
	eor M2, T0 
    1af8:	24 27       	eor	r18, r20
	mov r28, ST33
    1afa:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1afc:	48 81       	ld	r20, Y
	eor M2, T0
    1afe:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1b00:	34 27       	eor	r19, r20

	mov ST00, M0
    1b02:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1b04:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1b06:	50 81       	ld	r21, Z
	mov T2, T1
    1b08:	65 2f       	mov	r22, r21
	mov T3, T2 
    1b0a:	76 2f       	mov	r23, r22
	mov r28, ST10
    1b0c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1b0e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1b10:	74 27       	eor	r23, r20

	mov r30, ST21
    1b12:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1b14:	00 81       	ld	r16, Z
	eor T0, M0
    1b16:	40 27       	eor	r20, r16
	eor T2, M0
    1b18:	60 27       	eor	r22, r16
	eor T3, M0 
    1b1a:	70 27       	eor	r23, r16
	mov r28, ST21
    1b1c:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1b1e:	08 81       	ld	r16, Y
	eor T0, M0
    1b20:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1b22:	50 27       	eor	r21, r16

	mov r30, ST32
    1b24:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1b26:	00 81       	ld	r16, Z
	eor T0, M0
    1b28:	40 27       	eor	r20, r16
	eor T1, M0
    1b2a:	50 27       	eor	r21, r16
	eor T3, M0 
    1b2c:	70 27       	eor	r23, r16
	mov r28, ST32
    1b2e:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1b30:	08 81       	ld	r16, Y
	eor T1, M0
    1b32:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1b34:	60 27       	eor	r22, r16

	mov r30, ST03
    1b36:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1b38:	00 81       	ld	r16, Z
	eor T0, M0
    1b3a:	40 27       	eor	r20, r16
	eor T1, M0
    1b3c:	50 27       	eor	r21, r16
	eor T2, M0 
    1b3e:	60 27       	eor	r22, r16
	mov r28, ST03
    1b40:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1b42:	08 81       	ld	r16, Y
	eor T2, M0
    1b44:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1b46:	70 27       	eor	r23, r16

	mov ST10, T0
    1b48:	44 2e       	mov	r4, r20
	mov ST11, T1
    1b4a:	55 2e       	mov	r5, r21
	mov ST03, M3
    1b4c:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1b4e:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1b50:	40 81       	ld	r20, Z
	mov T1, T0
    1b52:	54 2f       	mov	r21, r20
	mov M3, T1 
    1b54:	35 2f       	mov	r19, r21
	mov r28, ST20
    1b56:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1b58:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1b5a:	30 27       	eor	r19, r16

	mov r30, ST31
    1b5c:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1b5e:	90 81       	ld	r25, Z
	eor M0, r25
    1b60:	09 27       	eor	r16, r25
	eor T1, r25
    1b62:	59 27       	eor	r21, r25
	eor M3, r25
    1b64:	39 27       	eor	r19, r25
	mov r28, ST31
    1b66:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1b68:	98 81       	ld	r25, Y
	eor M0, r25
    1b6a:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1b6c:	49 27       	eor	r20, r25

	mov r30, ST02
    1b6e:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1b70:	90 81       	ld	r25, Z
	eor M0, r25
    1b72:	09 27       	eor	r16, r25
	eor T0, r25
    1b74:	49 27       	eor	r20, r25
	eor M3, r25
    1b76:	39 27       	eor	r19, r25
	mov r28, ST02
    1b78:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1b7a:	98 81       	ld	r25, Y
	eor T0, r25
    1b7c:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1b7e:	59 27       	eor	r21, r25

	mov r30, ST13
    1b80:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1b82:	90 81       	ld	r25, Z
	eor M0, r25
    1b84:	09 27       	eor	r16, r25
	eor T0, r25
    1b86:	49 27       	eor	r20, r25
	eor T1, r25 
    1b88:	59 27       	eor	r21, r25
	mov r28, ST13
    1b8a:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1b8c:	98 81       	ld	r25, Y
	eor T1, r25
    1b8e:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1b90:	39 27       	eor	r19, r25

	mov ST20, M0
    1b92:	80 2e       	mov	r8, r16
	mov ST21, T0
    1b94:	94 2e       	mov	r9, r20
	mov ST22, T1
    1b96:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1b98:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1b9a:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1b9c:	50 81       	ld	r21, Z
	mov T3, T1
    1b9e:	75 2f       	mov	r23, r21
	mov r25, T3 
    1ba0:	97 2f       	mov	r25, r23
	mov r28, ST30
    1ba2:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1ba4:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1ba6:	94 27       	eor	r25, r20

	mov r30, ST01
    1ba8:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1baa:	00 81       	ld	r16, Z
	eor T0, M0
    1bac:	40 27       	eor	r20, r16
	eor T3, M0
    1bae:	70 27       	eor	r23, r16
	eor r25, M0 
    1bb0:	90 27       	eor	r25, r16
	mov r28, ST01
    1bb2:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1bb4:	08 81       	ld	r16, Y
	eor T0, M0
    1bb6:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1bb8:	50 27       	eor	r21, r16

	mov r30, ST12
    1bba:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1bbc:	00 81       	ld	r16, Z
	eor T0, M0
    1bbe:	40 27       	eor	r20, r16
	eor T1, M0
    1bc0:	50 27       	eor	r21, r16
	eor r25, M0 
    1bc2:	90 27       	eor	r25, r16
	mov r28, ST12
    1bc4:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1bc6:	08 81       	ld	r16, Y
	eor T1, M0
    1bc8:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1bca:	70 27       	eor	r23, r16

	mov r30, ST23
    1bcc:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1bce:	00 81       	ld	r16, Z
	eor T0, M0
    1bd0:	40 27       	eor	r20, r16
	eor T1, M0
    1bd2:	50 27       	eor	r21, r16
	eor T3, M0 
    1bd4:	70 27       	eor	r23, r16
	mov r28, ST23
    1bd6:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1bd8:	08 81       	ld	r16, Y
	eor T3, M0
    1bda:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1bdc:	90 27       	eor	r25, r16

	mov ST30, T0
    1bde:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1be0:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1be2:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1be4:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1be6:	11 2e       	mov	r1, r17
	mov ST02, M2
    1be8:	22 2e       	mov	r2, r18
	mov ST12, T2
    1bea:	66 2e       	mov	r6, r22
	mov ST23, M3
    1bec:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1bee:	0d 91       	ld	r16, X+
    1bf0:	00 26       	eor	r0, r16
    1bf2:	0d 91       	ld	r16, X+
    1bf4:	10 26       	eor	r1, r16
    1bf6:	0d 91       	ld	r16, X+
    1bf8:	20 26       	eor	r2, r16
    1bfa:	0d 91       	ld	r16, X+
    1bfc:	30 26       	eor	r3, r16
    1bfe:	0d 91       	ld	r16, X+
    1c00:	40 26       	eor	r4, r16
    1c02:	0d 91       	ld	r16, X+
    1c04:	50 26       	eor	r5, r16
    1c06:	0d 91       	ld	r16, X+
    1c08:	60 26       	eor	r6, r16
    1c0a:	0d 91       	ld	r16, X+
    1c0c:	70 26       	eor	r7, r16
    1c0e:	0d 91       	ld	r16, X+
    1c10:	80 26       	eor	r8, r16
    1c12:	0d 91       	ld	r16, X+
    1c14:	90 26       	eor	r9, r16
    1c16:	0d 91       	ld	r16, X+
    1c18:	a0 26       	eor	r10, r16
    1c1a:	0d 91       	ld	r16, X+
    1c1c:	b0 26       	eor	r11, r16
    1c1e:	0d 91       	ld	r16, X+
    1c20:	c0 26       	eor	r12, r16
    1c22:	0d 91       	ld	r16, X+
    1c24:	d0 26       	eor	r13, r16
    1c26:	0d 91       	ld	r16, X+
    1c28:	e0 26       	eor	r14, r16
    1c2a:	0d 91       	ld	r16, X+
    1c2c:	f0 26       	eor	r15, r16
	
	//9 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1c2e:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1c30:	10 81       	ld	r17, Z
	mov M2, M1
    1c32:	21 2f       	mov	r18, r17
	mov M3, M2 
    1c34:	32 2f       	mov	r19, r18
	mov r28, ST00
    1c36:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1c38:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1c3a:	30 27       	eor	r19, r16

	mov r30, ST11
    1c3c:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1c3e:	40 81       	ld	r20, Z
	eor M0, T0
    1c40:	04 27       	eor	r16, r20
	eor M2, T0
    1c42:	24 27       	eor	r18, r20
	eor M3, T0 
    1c44:	34 27       	eor	r19, r20
	mov r28, ST11
    1c46:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1c48:	48 81       	ld	r20, Y
	eor M0, T0
    1c4a:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1c4c:	14 27       	eor	r17, r20

	mov r30, ST22
    1c4e:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1c50:	40 81       	ld	r20, Z
	eor M0, T0
    1c52:	04 27       	eor	r16, r20
	eor M1, T0
    1c54:	14 27       	eor	r17, r20
	eor M3, T0
    1c56:	34 27       	eor	r19, r20
	mov r28, ST22
    1c58:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1c5a:	48 81       	ld	r20, Y
	eor M1, T0
    1c5c:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1c5e:	24 27       	eor	r18, r20

	mov r30, ST33
    1c60:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1c62:	40 81       	ld	r20, Z
	eor M0, T0
    1c64:	04 27       	eor	r16, r20
	eor M1, T0
    1c66:	14 27       	eor	r17, r20
	eor M2, T0 
    1c68:	24 27       	eor	r18, r20
	mov r28, ST33
    1c6a:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1c6c:	48 81       	ld	r20, Y
	eor M2, T0
    1c6e:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1c70:	34 27       	eor	r19, r20

	mov ST00, M0
    1c72:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1c74:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1c76:	50 81       	ld	r21, Z
	mov T2, T1
    1c78:	65 2f       	mov	r22, r21
	mov T3, T2 
    1c7a:	76 2f       	mov	r23, r22
	mov r28, ST10
    1c7c:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1c7e:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1c80:	74 27       	eor	r23, r20

	mov r30, ST21
    1c82:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1c84:	00 81       	ld	r16, Z
	eor T0, M0
    1c86:	40 27       	eor	r20, r16
	eor T2, M0
    1c88:	60 27       	eor	r22, r16
	eor T3, M0 
    1c8a:	70 27       	eor	r23, r16
	mov r28, ST21
    1c8c:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1c8e:	08 81       	ld	r16, Y
	eor T0, M0
    1c90:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1c92:	50 27       	eor	r21, r16

	mov r30, ST32
    1c94:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1c96:	00 81       	ld	r16, Z
	eor T0, M0
    1c98:	40 27       	eor	r20, r16
	eor T1, M0
    1c9a:	50 27       	eor	r21, r16
	eor T3, M0 
    1c9c:	70 27       	eor	r23, r16
	mov r28, ST32
    1c9e:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1ca0:	08 81       	ld	r16, Y
	eor T1, M0
    1ca2:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1ca4:	60 27       	eor	r22, r16

	mov r30, ST03
    1ca6:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1ca8:	00 81       	ld	r16, Z
	eor T0, M0
    1caa:	40 27       	eor	r20, r16
	eor T1, M0
    1cac:	50 27       	eor	r21, r16
	eor T2, M0 
    1cae:	60 27       	eor	r22, r16
	mov r28, ST03
    1cb0:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1cb2:	08 81       	ld	r16, Y
	eor T2, M0
    1cb4:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1cb6:	70 27       	eor	r23, r16

	mov ST10, T0
    1cb8:	44 2e       	mov	r4, r20
	mov ST11, T1
    1cba:	55 2e       	mov	r5, r21
	mov ST03, M3
    1cbc:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1cbe:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1cc0:	40 81       	ld	r20, Z
	mov T1, T0
    1cc2:	54 2f       	mov	r21, r20
	mov M3, T1 
    1cc4:	35 2f       	mov	r19, r21
	mov r28, ST20
    1cc6:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1cc8:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1cca:	30 27       	eor	r19, r16

	mov r30, ST31
    1ccc:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1cce:	90 81       	ld	r25, Z
	eor M0, r25
    1cd0:	09 27       	eor	r16, r25
	eor T1, r25
    1cd2:	59 27       	eor	r21, r25
	eor M3, r25
    1cd4:	39 27       	eor	r19, r25
	mov r28, ST31
    1cd6:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1cd8:	98 81       	ld	r25, Y
	eor M0, r25
    1cda:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1cdc:	49 27       	eor	r20, r25

	mov r30, ST02
    1cde:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1ce0:	90 81       	ld	r25, Z
	eor M0, r25
    1ce2:	09 27       	eor	r16, r25
	eor T0, r25
    1ce4:	49 27       	eor	r20, r25
	eor M3, r25
    1ce6:	39 27       	eor	r19, r25
	mov r28, ST02
    1ce8:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1cea:	98 81       	ld	r25, Y
	eor T0, r25
    1cec:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1cee:	59 27       	eor	r21, r25

	mov r30, ST13
    1cf0:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1cf2:	90 81       	ld	r25, Z
	eor M0, r25
    1cf4:	09 27       	eor	r16, r25
	eor T0, r25
    1cf6:	49 27       	eor	r20, r25
	eor T1, r25 
    1cf8:	59 27       	eor	r21, r25
	mov r28, ST13
    1cfa:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1cfc:	98 81       	ld	r25, Y
	eor T1, r25
    1cfe:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1d00:	39 27       	eor	r19, r25

	mov ST20, M0
    1d02:	80 2e       	mov	r8, r16
	mov ST21, T0
    1d04:	94 2e       	mov	r9, r20
	mov ST22, T1
    1d06:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1d08:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1d0a:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1d0c:	50 81       	ld	r21, Z
	mov T3, T1
    1d0e:	75 2f       	mov	r23, r21
	mov r25, T3 
    1d10:	97 2f       	mov	r25, r23
	mov r28, ST30
    1d12:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1d14:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1d16:	94 27       	eor	r25, r20

	mov r30, ST01
    1d18:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1d1a:	00 81       	ld	r16, Z
	eor T0, M0
    1d1c:	40 27       	eor	r20, r16
	eor T3, M0
    1d1e:	70 27       	eor	r23, r16
	eor r25, M0 
    1d20:	90 27       	eor	r25, r16
	mov r28, ST01
    1d22:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1d24:	08 81       	ld	r16, Y
	eor T0, M0
    1d26:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1d28:	50 27       	eor	r21, r16

	mov r30, ST12
    1d2a:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1d2c:	00 81       	ld	r16, Z
	eor T0, M0
    1d2e:	40 27       	eor	r20, r16
	eor T1, M0
    1d30:	50 27       	eor	r21, r16
	eor r25, M0 
    1d32:	90 27       	eor	r25, r16
	mov r28, ST12
    1d34:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1d36:	08 81       	ld	r16, Y
	eor T1, M0
    1d38:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1d3a:	70 27       	eor	r23, r16

	mov r30, ST23
    1d3c:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1d3e:	00 81       	ld	r16, Z
	eor T0, M0
    1d40:	40 27       	eor	r20, r16
	eor T1, M0
    1d42:	50 27       	eor	r21, r16
	eor T3, M0 
    1d44:	70 27       	eor	r23, r16
	mov r28, ST23
    1d46:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1d48:	08 81       	ld	r16, Y
	eor T3, M0
    1d4a:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1d4c:	90 27       	eor	r25, r16

	mov ST30, T0
    1d4e:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1d50:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1d52:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1d54:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1d56:	11 2e       	mov	r1, r17
	mov ST02, M2
    1d58:	22 2e       	mov	r2, r18
	mov ST12, T2
    1d5a:	66 2e       	mov	r6, r22
	mov ST23, M3
    1d5c:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1d5e:	0d 91       	ld	r16, X+
    1d60:	00 26       	eor	r0, r16
    1d62:	0d 91       	ld	r16, X+
    1d64:	10 26       	eor	r1, r16
    1d66:	0d 91       	ld	r16, X+
    1d68:	20 26       	eor	r2, r16
    1d6a:	0d 91       	ld	r16, X+
    1d6c:	30 26       	eor	r3, r16
    1d6e:	0d 91       	ld	r16, X+
    1d70:	40 26       	eor	r4, r16
    1d72:	0d 91       	ld	r16, X+
    1d74:	50 26       	eor	r5, r16
    1d76:	0d 91       	ld	r16, X+
    1d78:	60 26       	eor	r6, r16
    1d7a:	0d 91       	ld	r16, X+
    1d7c:	70 26       	eor	r7, r16
    1d7e:	0d 91       	ld	r16, X+
    1d80:	80 26       	eor	r8, r16
    1d82:	0d 91       	ld	r16, X+
    1d84:	90 26       	eor	r9, r16
    1d86:	0d 91       	ld	r16, X+
    1d88:	a0 26       	eor	r10, r16
    1d8a:	0d 91       	ld	r16, X+
    1d8c:	b0 26       	eor	r11, r16
    1d8e:	0d 91       	ld	r16, X+
    1d90:	c0 26       	eor	r12, r16
    1d92:	0d 91       	ld	r16, X+
    1d94:	d0 26       	eor	r13, r16
    1d96:	0d 91       	ld	r16, X+
    1d98:	e0 26       	eor	r14, r16
    1d9a:	0d 91       	ld	r16, X+
    1d9c:	f0 26       	eor	r15, r16
	


	// 10 Round--------------------------------------------------------------------------------------------
	// Shift Row + Subbyte
	mov r30, ST00
    1d9e:	e0 2d       	mov	r30, r0
	ld ST00, Z
    1da0:	00 80       	ld	r0, Z
	mov r30, ST10
    1da2:	e4 2d       	mov	r30, r4
	ld ST10, Z
    1da4:	40 80       	ld	r4, Z
	mov r30, ST20
    1da6:	e8 2d       	mov	r30, r8
	ld ST20, Z
    1da8:	80 80       	ld	r8, Z
	mov r30, ST30
    1daa:	ec 2d       	mov	r30, r12
	ld ST30, Z
    1dac:	c0 80       	ld	r12, Z

	mov r30, ST01
    1dae:	e1 2d       	mov	r30, r1
	ld T0, Z
    1db0:	40 81       	ld	r20, Z
	mov r30, ST11
    1db2:	e5 2d       	mov	r30, r5
	ld ST01, Z
    1db4:	10 80       	ld	r1, Z
	mov r30, ST21
    1db6:	e9 2d       	mov	r30, r9
	ld ST11, Z
    1db8:	50 80       	ld	r5, Z
	mov r30, ST31
    1dba:	ed 2d       	mov	r30, r13
	ld ST21, Z
    1dbc:	90 80       	ld	r9, Z
	mov ST31, T0
    1dbe:	d4 2e       	mov	r13, r20

	mov r30, ST02
    1dc0:	e2 2d       	mov	r30, r2
	ld T0, Z
    1dc2:	40 81       	ld	r20, Z
	mov r30, ST12
    1dc4:	e6 2d       	mov	r30, r6
	ld T1, Z
    1dc6:	50 81       	ld	r21, Z
	mov r30, ST22
    1dc8:	ea 2d       	mov	r30, r10
	ld ST02, Z
    1dca:	20 80       	ld	r2, Z
	mov r30, ST32
    1dcc:	ee 2d       	mov	r30, r14
	ld ST12, Z
    1dce:	60 80       	ld	r6, Z
	mov ST22, T0
    1dd0:	a4 2e       	mov	r10, r20
	mov ST32, T1
    1dd2:	e5 2e       	mov	r14, r21

	mov r30, ST03
    1dd4:	e3 2d       	mov	r30, r3
	ld T0, Z
    1dd6:	40 81       	ld	r20, Z
	mov r30, ST33
    1dd8:	ef 2d       	mov	r30, r15
	ld  ST03, Z
    1dda:	30 80       	ld	r3, Z
	mov r30, ST23
    1ddc:	eb 2d       	mov	r30, r11
	ld ST33, Z
    1dde:	f0 80       	ld	r15, Z
	mov r30, ST13
    1de0:	e7 2d       	mov	r30, r7
	ld ST23, Z
    1de2:	b0 80       	ld	r11, Z
	mov ST13, T0
    1de4:	74 2e       	mov	r7, r20
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1de6:	0d 91       	ld	r16, X+
    1de8:	00 26       	eor	r0, r16
    1dea:	0d 91       	ld	r16, X+
    1dec:	10 26       	eor	r1, r16
    1dee:	0d 91       	ld	r16, X+
    1df0:	20 26       	eor	r2, r16
    1df2:	0d 91       	ld	r16, X+
    1df4:	30 26       	eor	r3, r16
    1df6:	0d 91       	ld	r16, X+
    1df8:	40 26       	eor	r4, r16
    1dfa:	0d 91       	ld	r16, X+
    1dfc:	50 26       	eor	r5, r16
    1dfe:	0d 91       	ld	r16, X+
    1e00:	60 26       	eor	r6, r16
    1e02:	0d 91       	ld	r16, X+
    1e04:	70 26       	eor	r7, r16
    1e06:	0d 91       	ld	r16, X+
    1e08:	80 26       	eor	r8, r16
    1e0a:	0d 91       	ld	r16, X+
    1e0c:	90 26       	eor	r9, r16
    1e0e:	0d 91       	ld	r16, X+
    1e10:	a0 26       	eor	r10, r16
    1e12:	0d 91       	ld	r16, X+
    1e14:	b0 26       	eor	r11, r16
    1e16:	0d 91       	ld	r16, X+
    1e18:	c0 26       	eor	r12, r16
    1e1a:	0d 91       	ld	r16, X+
    1e1c:	d0 26       	eor	r13, r16
    1e1e:	0d 91       	ld	r16, X+
    1e20:	e0 26       	eor	r14, r16
    1e22:	0d 91       	ld	r16, X+
    1e24:	f0 26       	eor	r15, r16

	//ST
	pop r21
    1e26:	5f 91       	pop	r21
	pop r20
    1e28:	4f 91       	pop	r20
	pop r27
    1e2a:	bf 91       	pop	r27
	pop r26
    1e2c:	af 91       	pop	r26
	pop r31
    1e2e:	ff 91       	pop	r31
	pop r30
    1e30:	ef 91       	pop	r30
	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
    1e32:	01 92       	st	Z+, r0
    1e34:	11 92       	st	Z+, r1
    1e36:	21 92       	st	Z+, r2
    1e38:	31 92       	st	Z+, r3
    1e3a:	41 92       	st	Z+, r4
    1e3c:	51 92       	st	Z+, r5
    1e3e:	61 92       	st	Z+, r6
    1e40:	71 92       	st	Z+, r7
    1e42:	81 92       	st	Z+, r8
    1e44:	91 92       	st	Z+, r9
    1e46:	a1 92       	st	Z+, r10
    1e48:	b1 92       	st	Z+, r11
    1e4a:	c1 92       	st	Z+, r12
    1e4c:	d1 92       	st	Z+, r13
    1e4e:	e1 92       	st	Z+, r14
    1e50:	f1 92       	st	Z+, r15
	pop r29
    1e52:	df 91       	pop	r29
	pop r28
    1e54:	cf 91       	pop	r28

	pop_range 0, 19
    1e56:	3f 91       	pop	r19
    1e58:	2f 91       	pop	r18
    1e5a:	1f 91       	pop	r17
    1e5c:	0f 91       	pop	r16
    1e5e:	ff 90       	pop	r15
    1e60:	ef 90       	pop	r14
    1e62:	df 90       	pop	r13
    1e64:	cf 90       	pop	r12
    1e66:	bf 90       	pop	r11
    1e68:	af 90       	pop	r10
    1e6a:	9f 90       	pop	r9
    1e6c:	8f 90       	pop	r8
    1e6e:	7f 90       	pop	r7
    1e70:	6f 90       	pop	r6
    1e72:	5f 90       	pop	r5
    1e74:	4f 90       	pop	r4
    1e76:	3f 90       	pop	r3
    1e78:	2f 90       	pop	r2
    1e7a:	1f 90       	pop	r1
    1e7c:	0f 90       	pop	r0
	ret
    1e7e:	08 95       	ret

00001e80 <aes256_init>:
﻿#include "avr-asm-macros.S"

.global aes256_init
aes256_init:
	movw r20, r22
    1e80:	ab 01       	movw	r20, r22
	ldi r23, hi8(256)
    1e82:	71 e0       	ldi	r23, 0x01	; 1
	ldi r22, lo8(256)
    1e84:	60 e0       	ldi	r22, 0x00	; 0
	rjmp aes_init
    1e86:	07 c0       	rjmp	.+14     	; 0x1e96 <aes_init>

00001e88 <aes192_init>:
	
.global aes192_init
aes192_init:
	movw r20, r22
    1e88:	ab 01       	movw	r20, r22
	ldi r23, hi8(192)
    1e8a:	70 e0       	ldi	r23, 0x00	; 0
	ldi r22, lo8(192)
    1e8c:	60 ec       	ldi	r22, 0xC0	; 192
	rjmp aes_init
    1e8e:	03 c0       	rjmp	.+6      	; 0x1e96 <aes_init>

00001e90 <aes128_init>:
	
.global aes128_init
aes128_init:
	movw r20, r22
    1e90:	ab 01       	movw	r20, r22
	clr r23
    1e92:	77 27       	eor	r23, r23
	ldi r22, 128
    1e94:	60 e8       	ldi	r22, 0x80	; 128

00001e96 <aes_init>:
 * param keysize_b: r22:r23
 * param ctx:       r20:r21
 */
.global aes_init
aes_init:
	push_range 14, 17
    1e96:	ef 92       	push	r14
    1e98:	ff 92       	push	r15
    1e9a:	0f 93       	push	r16
    1e9c:	1f 93       	push	r17
	push r28
    1e9e:	cf 93       	push	r28
	push r29
    1ea0:	df 93       	push	r29
	movw r30, r20
    1ea2:	fa 01       	movw	r30, r20
	movw r28, r20
    1ea4:	ea 01       	movw	r28, r20
	movw r26, r24
    1ea6:	dc 01       	movw	r26, r24
	lsr r23
    1ea8:	76 95       	lsr	r23
	ror r22
    1eaa:	67 95       	ror	r22
	lsr r22
    1eac:	66 95       	lsr	r22
	lsr r22 /* r22 contains keysize_b/8 */
    1eae:	66 95       	lsr	r22
	mov C1, r22
    1eb0:	26 2f       	mov	r18, r22

1:	/* copy key to ctx */ 
	ld r0, X+
    1eb2:	0d 90       	ld	r0, X+
	st Z+, r0
    1eb4:	01 92       	st	Z+, r0
	dec C1
    1eb6:	2a 95       	dec	r18
	brne 1b
    1eb8:	e1 f7       	brne	.-8      	; 0x1eb2 <aes_init+0x1c>
	
	lsr NK
    1eba:	66 95       	lsr	r22
	lsr NK
    1ebc:	66 95       	lsr	r22
	bst NK,3 /* set T if NK==8 */
    1ebe:	63 fb       	bst	r22, 3
	mov NEXT_NK, NK
    1ec0:	36 2f       	mov	r19, r22
	mov HI, NK
    1ec2:	76 2f       	mov	r23, r22
	subi HI, -7
    1ec4:	79 5f       	subi	r23, 0xF9	; 249
	lsl HI
    1ec6:	77 0f       	add	r23, r23
	lsl HI
    1ec8:	77 0f       	add	r23, r23
	movw r26, r30
    1eca:	df 01       	movw	r26, r30
	sbiw r26, 4
    1ecc:	14 97       	sbiw	r26, 0x04	; 4
	mov C1, NK
    1ece:	26 2f       	mov	r18, r22
	ldi r30, lo8(aes_sbox)
    1ed0:	e0 e0       	ldi	r30, 0x00	; 0
	ldi r31, hi8(aes_sbox)
    1ed2:	f0 e2       	ldi	r31, 0x20	; 32
	movw SBOX_SAVE0, r30
    1ed4:	7f 01       	movw	r14, r30
	ldi XRC, 1
    1ed6:	11 e0       	ldi	r17, 0x01	; 1
1:	
	ld T0, X+
    1ed8:	4d 91       	ld	r20, X+
	ld T1, X+
    1eda:	5d 91       	ld	r21, X+
	ld T2, X+
    1edc:	8d 91       	ld	r24, X+
	ld T3, X+
    1ede:	9d 91       	ld	r25, X+
	cp NEXT_NK, C1
    1ee0:	32 17       	cp	r19, r18
	breq 2f 
    1ee2:	b1 f0       	breq	.+44     	; 0x1f10 <aes_init+0x7a>
	brtc 5f
    1ee4:	5e f5       	brtc	.+86     	; 0x1f3c <aes_init+0xa6>
	mov r16, C1
    1ee6:	02 2f       	mov	r16, r18
	andi r16, 0x07
    1ee8:	07 70       	andi	r16, 0x07	; 7
	cpi r16, 0x04
    1eea:	04 30       	cpi	r16, 0x04	; 4
	brne 5f
    1eec:	39 f5       	brne	.+78     	; 0x1f3c <aes_init+0xa6>
	movw r30, SBOX_SAVE0
    1eee:	f7 01       	movw	r30, r14
	add r30, T0
    1ef0:	e4 0f       	add	r30, r20
	adc r31, r1
    1ef2:	f1 1d       	adc	r31, r1
	lpm T0, Z
    1ef4:	44 91       	lpm	r20, Z
	movw r30, SBOX_SAVE0
    1ef6:	f7 01       	movw	r30, r14
	add r30, T1
    1ef8:	e5 0f       	add	r30, r21
	adc r31, r1
    1efa:	f1 1d       	adc	r31, r1
	lpm T1, Z
    1efc:	54 91       	lpm	r21, Z
	movw r30, SBOX_SAVE0
    1efe:	f7 01       	movw	r30, r14
	add r30, T2
    1f00:	e8 0f       	add	r30, r24
	adc r31, r1
    1f02:	f1 1d       	adc	r31, r1
	lpm T2, Z
    1f04:	84 91       	lpm	r24, Z
	movw r30, SBOX_SAVE0
    1f06:	f7 01       	movw	r30, r14
	add r30, T3
    1f08:	e9 0f       	add	r30, r25
	adc r31, r1
    1f0a:	f1 1d       	adc	r31, r1
	lpm T3, Z
    1f0c:	94 91       	lpm	r25, Z
	rjmp 5f
    1f0e:	16 c0       	rjmp	.+44     	; 0x1f3c <aes_init+0xa6>
2:
	add NEXT_NK, NK
    1f10:	36 0f       	add	r19, r22
	movw r30, SBOX_SAVE0
    1f12:	f7 01       	movw	r30, r14
	add r30, T0
    1f14:	e4 0f       	add	r30, r20
	adc r31, r1
    1f16:	f1 1d       	adc	r31, r1
	lpm r16, Z
    1f18:	04 91       	lpm	r16, Z
	movw r30, SBOX_SAVE0
    1f1a:	f7 01       	movw	r30, r14
	add r30, T1
    1f1c:	e5 0f       	add	r30, r21
	adc r31, r1
    1f1e:	f1 1d       	adc	r31, r1
	lpm T0, Z
    1f20:	44 91       	lpm	r20, Z
	movw r30, SBOX_SAVE0
    1f22:	f7 01       	movw	r30, r14
	add r30, T2
    1f24:	e8 0f       	add	r30, r24
	adc r31, r1
    1f26:	f1 1d       	adc	r31, r1
	lpm T1, Z
    1f28:	54 91       	lpm	r21, Z
	movw r30, SBOX_SAVE0
    1f2a:	f7 01       	movw	r30, r14
	add r30, T3
    1f2c:	e9 0f       	add	r30, r25
	adc r31, r1
    1f2e:	f1 1d       	adc	r31, r1
	lpm T2, Z
    1f30:	84 91       	lpm	r24, Z
	mov T3, r16
    1f32:	90 2f       	mov	r25, r16
	eor T0, XRC
    1f34:	41 27       	eor	r20, r17
	lsl XRC
    1f36:	11 0f       	add	r17, r17
	brcc 3f
    1f38:	08 f4       	brcc	.+2      	; 0x1f3c <aes_init+0xa6>
	ldi XRC, 0x1b
    1f3a:	1b e1       	ldi	r17, 0x1B	; 27
3:
5:	
	movw r30, r26
    1f3c:	fd 01       	movw	r30, r26

	ld r0, Y+
    1f3e:	09 90       	ld	r0, Y+
	eor r0, T0
    1f40:	04 26       	eor	r0, r20
	st Z+, r0 
    1f42:	01 92       	st	Z+, r0
	ld r0, Y+
    1f44:	09 90       	ld	r0, Y+
	eor r0 ,T1
    1f46:	05 26       	eor	r0, r21
	st Z+, r0
    1f48:	01 92       	st	Z+, r0
	ld r0, Y+
    1f4a:	09 90       	ld	r0, Y+
	eor r0, T2
    1f4c:	08 26       	eor	r0, r24
	st Z+, r0
    1f4e:	01 92       	st	Z+, r0
	ld r0, Y+
    1f50:	09 90       	ld	r0, Y+
	eor r0, T3
    1f52:	09 26       	eor	r0, r25
	st Z+, r0
    1f54:	01 92       	st	Z+, r0
	st Z+, T1
	st Z+, T2
	st Z+, T3
*/		
	
	inc C1
    1f56:	23 95       	inc	r18
	cp C1, HI
    1f58:	27 17       	cp	r18, r23
	breq 6f
    1f5a:	09 f0       	breq	.+2      	; 0x1f5e <aes_init+0xc8>
	rjmp 1b
    1f5c:	bd cf       	rjmp	.-134    	; 0x1ed8 <aes_init+0x42>
6:	
	
	clt
    1f5e:	e8 94       	clt
	pop r29
    1f60:	df 91       	pop	r29
	pop r28
    1f62:	cf 91       	pop	r28
	pop_range 14, 17
    1f64:	1f 91       	pop	r17
    1f66:	0f 91       	pop	r16
    1f68:	ff 90       	pop	r15
    1f6a:	ef 90       	pop	r14
    1f6c:	08 95       	ret
	...

00002000 <aes_sbox>:
    2000:	63 7c       	andi	r22, 0xC3	; 195
    2002:	77 7b       	andi	r23, 0xB7	; 183
    2004:	f2 6b       	ori	r31, 0xB2	; 178
    2006:	6f c5       	rjmp	.+2782   	; 0x2ae6 <generate_Random+0x18c>
    2008:	30 01       	movw	r6, r0
    200a:	67 2b       	or	r22, r23
    200c:	fe d7       	rcall	.+4092   	; 0x300a <generate_Random+0x6b0>
    200e:	ab 76       	andi	r26, 0x6B	; 107
    2010:	ca 82       	std	Y+2, r12	; 0x02
    2012:	c9 7d       	andi	r28, 0xD9	; 217
    2014:	fa 59       	subi	r31, 0x9A	; 154
    2016:	47 f0       	brie	.+16     	; 0x2028 <aes_sbox+0x28>
    2018:	ad d4       	rcall	.+2394   	; 0x2974 <generate_Random+0x1a>
    201a:	a2 af       	std	Z+58, r26	; 0x3a
    201c:	9c a4       	ldd	r9, Y+44	; 0x2c
    201e:	72 c0       	rjmp	.+228    	; 0x2104 <derived_function+0x4>
    2020:	b7 fd       	sbrc	r27, 7
    2022:	93 26       	eor	r9, r19
    2024:	36 3f       	cpi	r19, 0xF6	; 246
    2026:	f7 cc       	rjmp	.-1554   	; 0x1a16 <__stack+0x1117>
    2028:	34 a5       	ldd	r19, Z+44	; 0x2c
    202a:	e5 f1       	brhs	.+120    	; 0x20a4 <aes_sbox+0xa4>
    202c:	71 d8       	rcall	.-3870   	; 0x1110 <__stack+0x811>
    202e:	31 15       	cp	r19, r1
    2030:	04 c7       	rjmp	.+3592   	; 0x2e3a <generate_Random+0x4e0>
    2032:	23 c3       	rjmp	.+1606   	; 0x267a <update+0x56>
    2034:	18 96       	adiw	r26, 0x08	; 8
    2036:	05 9a       	sbi	0x00, 5	; 0
    2038:	07 12       	cpse	r0, r23
    203a:	80 e2       	ldi	r24, 0x20	; 32
    203c:	eb 27       	eor	r30, r27
    203e:	b2 75       	andi	r27, 0x52	; 82
    2040:	09 83       	std	Y+1, r16	; 0x01
    2042:	2c 1a       	sub	r2, r28
    2044:	1b 6e       	ori	r17, 0xEB	; 235
    2046:	5a a0       	ldd	r5, Y+34	; 0x22
    2048:	52 3b       	cpi	r21, 0xB2	; 178
    204a:	d6 b3       	in	r29, 0x16	; 22
    204c:	29 e3       	ldi	r18, 0x39	; 57
    204e:	2f 84       	ldd	r2, Y+15	; 0x0f
    2050:	53 d1       	rcall	.+678    	; 0x22f8 <derived_function+0x1f8>
    2052:	00 ed       	ldi	r16, 0xD0	; 208
    2054:	20 fc       	sbrc	r2, 0
    2056:	b1 5b       	subi	r27, 0xB1	; 177
    2058:	6a cb       	rjmp	.-2348   	; 0x172e <__stack+0xe2f>
    205a:	be 39       	cpi	r27, 0x9E	; 158
    205c:	4a 4c       	sbci	r20, 0xCA	; 202
    205e:	58 cf       	rjmp	.-336    	; 0x1f10 <aes_init+0x7a>
    2060:	d0 ef       	ldi	r29, 0xF0	; 240
    2062:	aa fb       	.word	0xfbaa	; ????
    2064:	43 4d       	sbci	r20, 0xD3	; 211
    2066:	33 85       	ldd	r19, Z+11	; 0x0b
    2068:	45 f9       	bld	r20, 5
    206a:	02 7f       	andi	r16, 0xF2	; 242
    206c:	50 3c       	cpi	r21, 0xC0	; 192
    206e:	9f a8       	ldd	r9, Y+55	; 0x37
    2070:	51 a3       	std	Z+33, r21	; 0x21
    2072:	40 8f       	std	Z+24, r20	; 0x18
    2074:	92 9d       	mul	r25, r2
    2076:	38 f5       	brcc	.+78     	; 0x20c6 <aes_sbox+0xc6>
    2078:	bc b6       	in	r11, 0x3c	; 60
    207a:	da 21       	and	r29, r10
    207c:	10 ff       	sbrs	r17, 0
    207e:	f3 d2       	rcall	.+1510   	; 0x2666 <update+0x42>
    2080:	cd 0c       	add	r12, r13
    2082:	13 ec       	ldi	r17, 0xC3	; 195
    2084:	5f 97       	sbiw	r26, 0x1f	; 31
    2086:	44 17       	cp	r20, r20
    2088:	c4 a7       	std	Z+44, r28	; 0x2c
    208a:	7e 3d       	cpi	r23, 0xDE	; 222
    208c:	64 5d       	subi	r22, 0xD4	; 212
    208e:	19 73       	andi	r17, 0x39	; 57
    2090:	60 81       	ld	r22, Z
    2092:	4f dc       	rcall	.-1890   	; 0x1932 <__stack+0x1033>
    2094:	22 2a       	or	r2, r18
    2096:	90 88       	ldd	r9, Z+16	; 0x10
    2098:	46 ee       	ldi	r20, 0xE6	; 230
    209a:	b8 14       	cp	r11, r8
    209c:	de 5e       	subi	r29, 0xEE	; 238
    209e:	0b db       	rcall	.-2538   	; 0x16b6 <__stack+0xdb7>
    20a0:	e0 32       	cpi	r30, 0x20	; 32
    20a2:	3a 0a       	sbc	r3, r26
    20a4:	49 06       	cpc	r4, r25
    20a6:	24 5c       	subi	r18, 0xC4	; 196
    20a8:	c2 d3       	rcall	.+1924   	; 0x282e <update+0x20a>
    20aa:	ac 62       	ori	r26, 0x2C	; 44
    20ac:	91 95       	neg	r25
    20ae:	e4 79       	andi	r30, 0x94	; 148
    20b0:	e7 c8       	rjmp	.-3634   	; 0x1280 <__stack+0x981>
    20b2:	37 6d       	ori	r19, 0xD7	; 215
    20b4:	8d d5       	rcall	.+2842   	; 0x2bd0 <generate_Random+0x276>
    20b6:	4e a9       	ldd	r20, Y+54	; 0x36
    20b8:	6c 56       	subi	r22, 0x6C	; 108
    20ba:	f4 ea       	ldi	r31, 0xA4	; 164
    20bc:	65 7a       	andi	r22, 0xA5	; 165
    20be:	ae 08       	sbc	r10, r14
    20c0:	ba 78       	andi	r27, 0x8A	; 138
    20c2:	25 2e       	mov	r2, r21
    20c4:	1c a6       	std	Y+44, r1	; 0x2c
    20c6:	b4 c6       	rjmp	.+3432   	; 0x2e30 <generate_Random+0x4d6>
    20c8:	e8 dd       	rcall	.-1072   	; 0x1c9a <__stack+0x139b>
    20ca:	74 1f       	adc	r23, r20
    20cc:	4b bd       	out	0x2b, r20	; 43
    20ce:	8b 8a       	std	Y+19, r8	; 0x13
    20d0:	70 3e       	cpi	r23, 0xE0	; 224
    20d2:	b5 66       	ori	r27, 0x65	; 101
    20d4:	48 03       	fmul	r20, r16
    20d6:	f6 0e       	add	r15, r22
    20d8:	61 35       	cpi	r22, 0x51	; 81
    20da:	57 b9       	out	0x07, r21	; 7
    20dc:	86 c1       	rjmp	.+780    	; 0x23ea <derived_function+0x2ea>
    20de:	1d 9e       	mul	r1, r29
    20e0:	e1 f8       	bld	r14, 1
    20e2:	98 11       	cpse	r25, r8
    20e4:	69 d9       	rcall	.-3374   	; 0x13b8 <__stack+0xab9>
    20e6:	8e 94 9b 1e 	call	0x203d36	; 0x203d36 <__TEXT_REGION_LENGTH__+0x1e3d36>
    20ea:	87 e9       	ldi	r24, 0x97	; 151
    20ec:	ce 55       	subi	r28, 0x5E	; 94
    20ee:	28 df       	rcall	.-432    	; 0x1f40 <aes_init+0xaa>
    20f0:	8c a1       	ldd	r24, Y+36	; 0x24
    20f2:	89 0d       	add	r24, r9
    20f4:	bf e6       	ldi	r27, 0x6F	; 111
    20f6:	42 68       	ori	r20, 0x82	; 130
    20f8:	41 99       	sbic	0x08, 1	; 8
    20fa:	2d 0f       	add	r18, r29
    20fc:	b0 54       	subi	r27, 0x40	; 64
    20fe:	bb 16       	cp	r11, r27

00002100 <derived_function>:
	{
		src[cnt_i] = 0x00;
	}
}
void derived_function(u8 *input_data, u8 *seed, u8 *input_len)
{
    2100:	2f 92       	push	r2
    2102:	3f 92       	push	r3
    2104:	4f 92       	push	r4
    2106:	5f 92       	push	r5
    2108:	6f 92       	push	r6
    210a:	7f 92       	push	r7
    210c:	8f 92       	push	r8
    210e:	9f 92       	push	r9
    2110:	af 92       	push	r10
    2112:	bf 92       	push	r11
    2114:	cf 92       	push	r12
    2116:	df 92       	push	r13
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	cf 93       	push	r28
    2122:	df 93       	push	r29
    2124:	cd b7       	in	r28, 0x3d	; 61
    2126:	de b7       	in	r29, 0x3e	; 62
    2128:	c6 56       	subi	r28, 0x66	; 102
    212a:	d1 40       	sbci	r29, 0x01	; 1
    212c:	0f b6       	in	r0, 0x3f	; 63
    212e:	f8 94       	cli
    2130:	de bf       	out	0x3e, r29	; 62
    2132:	0f be       	out	0x3f, r0	; 63
    2134:	cd bf       	out	0x3d, r28	; 61
    2136:	8c 01       	movw	r16, r24
    2138:	2b 01       	movw	r4, r22
    213a:	7a 01       	movw	r14, r20
	volatile char cnt_i = 0;
    213c:	cb 59       	subi	r28, 0x9B	; 155
    213e:	de 4f       	sbci	r29, 0xFE	; 254
    2140:	18 82       	st	Y, r1
    2142:	c5 56       	subi	r28, 0x65	; 101
    2144:	d1 40       	sbci	r29, 0x01	; 1
	volatile char cnt_j = 0;
    2146:	cc 59       	subi	r28, 0x9C	; 156
    2148:	de 4f       	sbci	r29, 0xFE	; 254
    214a:	18 82       	st	Y, r1
    214c:	c4 56       	subi	r28, 0x64	; 100
    214e:	d1 40       	sbci	r29, 0x01	; 1
	volatile char cnt_k = 0;
    2150:	cd 59       	subi	r28, 0x9D	; 157
    2152:	de 4f       	sbci	r29, 0xFE	; 254
    2154:	18 82       	st	Y, r1
    2156:	c3 56       	subi	r28, 0x63	; 99
    2158:	d1 40       	sbci	r29, 0x01	; 1

	volatile u8 len = 25 + *input_len;
    215a:	da 01       	movw	r26, r20
    215c:	8c 91       	ld	r24, X
    215e:	87 5e       	subi	r24, 0xE7	; 231
    2160:	ce 59       	subi	r28, 0x9E	; 158
    2162:	de 4f       	sbci	r29, 0xFE	; 254
    2164:	88 83       	st	Y, r24
    2166:	c2 56       	subi	r28, 0x62	; 98
    2168:	d1 40       	sbci	r29, 0x01	; 1
	volatile u8 temp = len % BLOCK_SIZE;
    216a:	ce 59       	subi	r28, 0x9E	; 158
    216c:	de 4f       	sbci	r29, 0xFE	; 254
    216e:	88 81       	ld	r24, Y
    2170:	c2 56       	subi	r28, 0x62	; 98
    2172:	d1 40       	sbci	r29, 0x01	; 1
    2174:	8f 70       	andi	r24, 0x0F	; 15
    2176:	cf 59       	subi	r28, 0x9F	; 159
    2178:	de 4f       	sbci	r29, 0xFE	; 254
    217a:	88 83       	st	Y, r24
    217c:	c1 56       	subi	r28, 0x61	; 97
    217e:	d1 40       	sbci	r29, 0x01	; 1
	u8 CBC_KEY[16] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
    2180:	80 e1       	ldi	r24, 0x10	; 16
    2182:	e6 e0       	ldi	r30, 0x06	; 6
    2184:	f3 e0       	ldi	r31, 0x03	; 3
    2186:	de 01       	movw	r26, r28
    2188:	af 5a       	subi	r26, 0xAF	; 175
    218a:	be 4f       	sbci	r27, 0xFE	; 254
    218c:	01 90       	ld	r0, Z+
    218e:	0d 92       	st	X+, r0
    2190:	8a 95       	dec	r24
    2192:	e1 f7       	brne	.-8      	; 0x218c <derived_function+0x8c>
	u8 chain_value[16] = {0x00};
    2194:	5e 01       	movw	r10, r28
    2196:	bf eb       	ldi	r27, 0xBF	; 191
    2198:	ab 1a       	sub	r10, r27
    219a:	be ef       	ldi	r27, 0xFE	; 254
    219c:	bb 0a       	sbc	r11, r27
    219e:	80 e1       	ldi	r24, 0x10	; 16
    21a0:	f5 01       	movw	r30, r10
    21a2:	11 92       	st	Z+, r1
    21a4:	8a 95       	dec	r24
    21a6:	e9 f7       	brne	.-6      	; 0x21a2 <derived_function+0xa2>
	u8 seed_temp[SEED_LEN] = {0x00};
	u8 KEYandV[LEN_SEED][BLOCK_SIZE] = {0x00};
    21a8:	1e 01       	movw	r2, r28
    21aa:	f1 ef       	ldi	r31, 0xF1	; 241
    21ac:	2f 0e       	add	r2, r31
    21ae:	31 1c       	adc	r3, r1
    21b0:	80 e3       	ldi	r24, 0x30	; 48
    21b2:	d1 01       	movw	r26, r2
    21b4:	1d 92       	st	X+, r1
    21b6:	8a 95       	dec	r24
    21b8:	e9 f7       	brne	.-6      	; 0x21b4 <derived_function+0xb4>
	aes192_ctx_t aes_test;
	aes192_init(CBC_KEY, &aes_test);

#else //KEY_BIT ==256
	aes256_ctx_t aes_test;
	aes256_init(CBC_KEY, &aes_test);
    21ba:	be 01       	movw	r22, r28
    21bc:	6f 5f       	subi	r22, 0xFF	; 255
    21be:	7f 4f       	sbci	r23, 0xFF	; 255
    21c0:	ce 01       	movw	r24, r28
    21c2:	8f 5a       	subi	r24, 0xAF	; 175
    21c4:	9e 4f       	sbci	r25, 0xFE	; 254
    21c6:	5c de       	rcall	.-840    	; 0x1e80 <aes256_init>
#endif

	if (temp != 0)
    21c8:	cf 59       	subi	r28, 0x9F	; 159
    21ca:	de 4f       	sbci	r29, 0xFE	; 254
    21cc:	88 81       	ld	r24, Y
    21ce:	c1 56       	subi	r28, 0x61	; 97
    21d0:	d1 40       	sbci	r29, 0x01	; 1
    21d2:	88 23       	and	r24, r24
    21d4:	89 f0       	breq	.+34     	; 0x21f8 <derived_function+0xf8>
		len += BLOCK_SIZE - temp;
    21d6:	cf 59       	subi	r28, 0x9F	; 159
    21d8:	de 4f       	sbci	r29, 0xFE	; 254
    21da:	98 81       	ld	r25, Y
    21dc:	c1 56       	subi	r28, 0x61	; 97
    21de:	d1 40       	sbci	r29, 0x01	; 1
    21e0:	ce 59       	subi	r28, 0x9E	; 158
    21e2:	de 4f       	sbci	r29, 0xFE	; 254
    21e4:	88 81       	ld	r24, Y
    21e6:	c2 56       	subi	r28, 0x62	; 98
    21e8:	d1 40       	sbci	r29, 0x01	; 1
    21ea:	89 1b       	sub	r24, r25
    21ec:	80 5f       	subi	r24, 0xF0	; 240
    21ee:	ce 59       	subi	r28, 0x9E	; 158
    21f0:	de 4f       	sbci	r29, 0xFE	; 254
    21f2:	88 83       	st	Y, r24
    21f4:	c2 56       	subi	r28, 0x62	; 98
    21f6:	d1 40       	sbci	r29, 0x01	; 1

	u8 *in = (u8 *)calloc(len, sizeof(u8));
    21f8:	ce 59       	subi	r28, 0x9E	; 158
    21fa:	de 4f       	sbci	r29, 0xFE	; 254
    21fc:	88 81       	ld	r24, Y
    21fe:	c2 56       	subi	r28, 0x62	; 98
    2200:	d1 40       	sbci	r29, 0x01	; 1
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	70 e0       	ldi	r23, 0x00	; 0
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	0e 94 3b 1a 	call	0x3476	; 0x3476 <calloc>
    220c:	3c 01       	movw	r6, r24
	in[19] = *input_len;
    220e:	f7 01       	movw	r30, r14
    2210:	20 81       	ld	r18, Z
    2212:	dc 01       	movw	r26, r24
    2214:	53 96       	adiw	r26, 0x13	; 19
    2216:	2c 93       	st	X, r18
    2218:	53 97       	sbiw	r26, 0x13	; 19
	in[23] = N_DF;
    221a:	80 e3       	ldi	r24, 0x30	; 48
    221c:	57 96       	adiw	r26, 0x17	; 23
    221e:	8c 93       	st	X, r24
	for (cnt_i = 24; cnt_i < 24 + *input_len; cnt_i++)
    2220:	88 e1       	ldi	r24, 0x18	; 24
    2222:	cb 59       	subi	r28, 0x9B	; 155
    2224:	de 4f       	sbci	r29, 0xFE	; 254
    2226:	88 83       	st	Y, r24
    2228:	c5 56       	subi	r28, 0x65	; 101
    222a:	d1 40       	sbci	r29, 0x01	; 1
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	29 5e       	subi	r18, 0xE9	; 233
    2230:	3f 4f       	sbci	r19, 0xFF	; 255
    2232:	cb 59       	subi	r28, 0x9B	; 155
    2234:	de 4f       	sbci	r29, 0xFE	; 254
    2236:	88 81       	ld	r24, Y
    2238:	c5 56       	subi	r28, 0x65	; 101
    223a:	d1 40       	sbci	r29, 0x01	; 1
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	28 17       	cp	r18, r24
    2240:	39 07       	cpc	r19, r25
    2242:	54 f1       	brlt	.+84     	; 0x2298 <derived_function+0x198>
	{
		if(input_data == NULL)
    2244:	01 15       	cp	r16, r1
    2246:	11 05       	cpc	r17, r1
    2248:	99 f0       	breq	.+38     	; 0x2270 <derived_function+0x170>
			continue;
		in[cnt_i] = input_data[cnt_i - 24];
    224a:	cb 59       	subi	r28, 0x9B	; 155
    224c:	de 4f       	sbci	r29, 0xFE	; 254
    224e:	98 81       	ld	r25, Y
    2250:	c5 56       	subi	r28, 0x65	; 101
    2252:	d1 40       	sbci	r29, 0x01	; 1
    2254:	cb 59       	subi	r28, 0x9B	; 155
    2256:	de 4f       	sbci	r29, 0xFE	; 254
    2258:	88 81       	ld	r24, Y
    225a:	c5 56       	subi	r28, 0x65	; 101
    225c:	d1 40       	sbci	r29, 0x01	; 1
    225e:	d3 01       	movw	r26, r6
    2260:	a9 0f       	add	r26, r25
    2262:	b1 1d       	adc	r27, r1
    2264:	f8 01       	movw	r30, r16
    2266:	e8 0f       	add	r30, r24
    2268:	f1 1d       	adc	r31, r1
    226a:	78 97       	sbiw	r30, 0x18	; 24
    226c:	80 81       	ld	r24, Z
    226e:	8c 93       	st	X, r24
		len += BLOCK_SIZE - temp;

	u8 *in = (u8 *)calloc(len, sizeof(u8));
	in[19] = *input_len;
	in[23] = N_DF;
	for (cnt_i = 24; cnt_i < 24 + *input_len; cnt_i++)
    2270:	cb 59       	subi	r28, 0x9B	; 155
    2272:	de 4f       	sbci	r29, 0xFE	; 254
    2274:	88 81       	ld	r24, Y
    2276:	c5 56       	subi	r28, 0x65	; 101
    2278:	d1 40       	sbci	r29, 0x01	; 1
    227a:	8f 5f       	subi	r24, 0xFF	; 255
    227c:	cb 59       	subi	r28, 0x9B	; 155
    227e:	de 4f       	sbci	r29, 0xFE	; 254
    2280:	88 83       	st	Y, r24
    2282:	c5 56       	subi	r28, 0x65	; 101
    2284:	d1 40       	sbci	r29, 0x01	; 1
    2286:	cb 59       	subi	r28, 0x9B	; 155
    2288:	de 4f       	sbci	r29, 0xFE	; 254
    228a:	88 81       	ld	r24, Y
    228c:	c5 56       	subi	r28, 0x65	; 101
    228e:	d1 40       	sbci	r29, 0x01	; 1
    2290:	90 e0       	ldi	r25, 0x00	; 0
    2292:	28 17       	cp	r18, r24
    2294:	39 07       	cpc	r19, r25
    2296:	b4 f6       	brge	.-84     	; 0x2244 <derived_function+0x144>
	{
		if(input_data == NULL)
			continue;
		in[cnt_i] = input_data[cnt_i - 24];
	}
	in[cnt_i] = 0x80;
    2298:	cb 59       	subi	r28, 0x9B	; 155
    229a:	de 4f       	sbci	r29, 0xFE	; 254
    229c:	88 81       	ld	r24, Y
    229e:	c5 56       	subi	r28, 0x65	; 101
    22a0:	d1 40       	sbci	r29, 0x01	; 1
    22a2:	f3 01       	movw	r30, r6
    22a4:	e8 0f       	add	r30, r24
    22a6:	f1 1d       	adc	r31, r1
    22a8:	80 e8       	ldi	r24, 0x80	; 128
    22aa:	80 83       	st	Z, r24

	u8 state[16] = {0x00};
    22ac:	6e 01       	movw	r12, r28
    22ae:	bf ec       	ldi	r27, 0xCF	; 207
    22b0:	cb 1a       	sub	r12, r27
    22b2:	be ef       	ldi	r27, 0xFE	; 254
    22b4:	db 0a       	sbc	r13, r27
    22b6:	80 e1       	ldi	r24, 0x10	; 16
    22b8:	f6 01       	movw	r30, r12
    22ba:	11 92       	st	Z+, r1
    22bc:	8a 95       	dec	r24
    22be:	e9 f7       	brne	.-6      	; 0x22ba <derived_function+0x1ba>
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
    22c0:	cc 59       	subi	r28, 0x9C	; 156
    22c2:	de 4f       	sbci	r29, 0xFE	; 254
    22c4:	18 82       	st	Y, r1
    22c6:	c4 56       	subi	r28, 0x64	; 100
    22c8:	d1 40       	sbci	r29, 0x01	; 1
    22ca:	cc 59       	subi	r28, 0x9C	; 156
    22cc:	de 4f       	sbci	r29, 0xFE	; 254
    22ce:	88 81       	ld	r24, Y
    22d0:	c4 56       	subi	r28, 0x64	; 100
    22d2:	d1 40       	sbci	r29, 0x01	; 1
    22d4:	83 30       	cpi	r24, 0x03	; 3
    22d6:	08 f0       	brcs	.+2      	; 0x22da <derived_function+0x1da>
    22d8:	a9 c0       	rjmp	.+338    	; 0x242c <derived_function+0x32c>
    22da:	f3 01       	movw	r30, r6
    22dc:	83 81       	ldd	r24, Z+3	; 0x03
    22de:	8f 5f       	subi	r24, 0xFF	; 255
    22e0:	ca 59       	subi	r28, 0x9A	; 154
    22e2:	de 4f       	sbci	r29, 0xFE	; 254
    22e4:	88 83       	st	Y, r24
    22e6:	c6 56       	subi	r28, 0x66	; 102
    22e8:	d1 40       	sbci	r29, 0x01	; 1
    22ea:	90 e0       	ldi	r25, 0x00	; 0
    22ec:	76 01       	movw	r14, r12
    22ee:	f0 e1       	ldi	r31, 0x10	; 16
    22f0:	ef 0e       	add	r14, r31
    22f2:	f1 1c       	adc	r15, r1
    22f4:	45 01       	movw	r8, r10
    22f6:	20 e1       	ldi	r18, 0x10	; 16
    22f8:	82 0e       	add	r8, r18
    22fa:	91 1c       	adc	r9, r1
	{
		for (cnt_i = 0; cnt_i < len / 16; cnt_i++)
    22fc:	cb 59       	subi	r28, 0x9B	; 155
    22fe:	de 4f       	sbci	r29, 0xFE	; 254
    2300:	18 82       	st	Y, r1
    2302:	c5 56       	subi	r28, 0x65	; 101
    2304:	d1 40       	sbci	r29, 0x01	; 1
    2306:	ce 59       	subi	r28, 0x9E	; 158
    2308:	de 4f       	sbci	r29, 0xFE	; 254
    230a:	88 81       	ld	r24, Y
    230c:	c2 56       	subi	r28, 0x62	; 98
    230e:	d1 40       	sbci	r29, 0x01	; 1
    2310:	cb 59       	subi	r28, 0x9B	; 155
    2312:	de 4f       	sbci	r29, 0xFE	; 254
    2314:	28 81       	ld	r18, Y
    2316:	c5 56       	subi	r28, 0x65	; 101
    2318:	d1 40       	sbci	r29, 0x01	; 1
    231a:	82 95       	swap	r24
    231c:	8f 70       	andi	r24, 0x0F	; 15
    231e:	28 17       	cp	r18, r24
    2320:	08 f0       	brcs	.+2      	; 0x2324 <derived_function+0x224>
    2322:	49 c0       	rjmp	.+146    	; 0x23b6 <derived_function+0x2b6>
		{
			set_state(state, in, 16 * cnt_i);
    2324:	cb 59       	subi	r28, 0x9B	; 155
    2326:	de 4f       	sbci	r29, 0xFE	; 254
    2328:	88 81       	ld	r24, Y
    232a:	c5 56       	subi	r28, 0x65	; 101
    232c:	d1 40       	sbci	r29, 0x01	; 1
    232e:	d3 01       	movw	r26, r6
    2330:	30 e1       	ldi	r19, 0x10	; 16
    2332:	83 9f       	mul	r24, r19
    2334:	a0 0d       	add	r26, r0
    2336:	b1 1d       	adc	r27, r1
    2338:	11 24       	eor	r1, r1
    233a:	86 01       	movw	r16, r12
    233c:	f6 01       	movw	r30, r12
}
void set_state(u8 *drc, u8 *src, int start)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[start + cnt_i];
    233e:	8d 91       	ld	r24, X+
    2340:	81 93       	st	Z+, r24
		drc[cnt_i] ^= src[cnt_i];
	}
}
void set_state(u8 *drc, u8 *src, int start)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2342:	ee 15       	cp	r30, r14
    2344:	ff 05       	cpc	r31, r15
    2346:	d9 f7       	brne	.-10     	; 0x233e <derived_function+0x23e>
    2348:	d5 01       	movw	r26, r10
    234a:	11 96       	adiw	r26, 0x01	; 1
    234c:	f6 01       	movw	r30, r12
    234e:	01 c0       	rjmp	.+2      	; 0x2352 <derived_function+0x252>
    2350:	9d 91       	ld	r25, X+

void XoR(u8 *drc, u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < len; cnt_i++)
	{
		drc[cnt_i] ^= src[cnt_i];
    2352:	80 81       	ld	r24, Z
    2354:	89 27       	eor	r24, r25
    2356:	81 93       	st	Z+, r24
*/
#include "ctr_drbg.h"

void XoR(u8 *drc, u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < len; cnt_i++)
    2358:	ee 15       	cp	r30, r14
    235a:	ff 05       	cpc	r31, r15
    235c:	c9 f7       	brne	.-14     	; 0x2350 <derived_function+0x250>
#if KEY_BIT == 128
			aes128_enc_CBC_asm(state, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(state, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(state, &aes_test);
    235e:	be 01       	movw	r22, r28
    2360:	6f 5f       	subi	r22, 0xFF	; 255
    2362:	7f 4f       	sbci	r23, 0xFF	; 255
    2364:	c6 01       	movw	r24, r12
    2366:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
    236a:	f5 01       	movw	r30, r10
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    236c:	d8 01       	movw	r26, r16
    236e:	8d 91       	ld	r24, X+
    2370:	8d 01       	movw	r16, r26
    2372:	81 93       	st	Z+, r24
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2374:	ae 15       	cp	r26, r14
    2376:	bf 05       	cpc	r27, r15
    2378:	c9 f7       	brne	.-14     	; 0x236c <derived_function+0x26c>
	in[cnt_i] = 0x80;

	u8 state[16] = {0x00};
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
	{
		for (cnt_i = 0; cnt_i < len / 16; cnt_i++)
    237a:	cb 59       	subi	r28, 0x9B	; 155
    237c:	de 4f       	sbci	r29, 0xFE	; 254
    237e:	88 81       	ld	r24, Y
    2380:	c5 56       	subi	r28, 0x65	; 101
    2382:	d1 40       	sbci	r29, 0x01	; 1
    2384:	8f 5f       	subi	r24, 0xFF	; 255
    2386:	cb 59       	subi	r28, 0x9B	; 155
    2388:	de 4f       	sbci	r29, 0xFE	; 254
    238a:	88 83       	st	Y, r24
    238c:	c5 56       	subi	r28, 0x65	; 101
    238e:	d1 40       	sbci	r29, 0x01	; 1
    2390:	ce 59       	subi	r28, 0x9E	; 158
    2392:	de 4f       	sbci	r29, 0xFE	; 254
    2394:	88 81       	ld	r24, Y
    2396:	c2 56       	subi	r28, 0x62	; 98
    2398:	d1 40       	sbci	r29, 0x01	; 1
    239a:	cb 59       	subi	r28, 0x9B	; 155
    239c:	de 4f       	sbci	r29, 0xFE	; 254
    239e:	98 81       	ld	r25, Y
    23a0:	c5 56       	subi	r28, 0x65	; 101
    23a2:	d1 40       	sbci	r29, 0x01	; 1
    23a4:	82 95       	swap	r24
    23a6:	8f 70       	andi	r24, 0x0F	; 15
    23a8:	98 17       	cp	r25, r24
    23aa:	18 f4       	brcc	.+6      	; 0x23b2 <derived_function+0x2b2>
    23ac:	f5 01       	movw	r30, r10
    23ae:	90 81       	ld	r25, Z
    23b0:	b9 cf       	rjmp	.-142    	; 0x2324 <derived_function+0x224>
    23b2:	d5 01       	movw	r26, r10
    23b4:	9c 91       	ld	r25, X
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(state, &aes_test);
#endif
			copy(chain_value, state);
		}
		copy_state(KEYandV, chain_value, cnt_j);
    23b6:	cc 59       	subi	r28, 0x9C	; 156
    23b8:	de 4f       	sbci	r29, 0xFE	; 254
    23ba:	88 81       	ld	r24, Y
    23bc:	c4 56       	subi	r28, 0x64	; 100
    23be:	d1 40       	sbci	r29, 0x01	; 1
    23c0:	d1 01       	movw	r26, r2
    23c2:	e0 e1       	ldi	r30, 0x10	; 16
    23c4:	8e 9f       	mul	r24, r30
    23c6:	a0 0d       	add	r26, r0
    23c8:	b1 1d       	adc	r27, r1
    23ca:	11 24       	eor	r1, r1
    23cc:	f5 01       	movw	r30, r10
    23ce:	31 96       	adiw	r30, 0x01	; 1
    23d0:	01 c0       	rjmp	.+2      	; 0x23d4 <derived_function+0x2d4>
    23d2:	91 91       	ld	r25, Z+
}
void copy_state(u8 drc[LEN_SEED][BLOCK_SIZE], u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[len][cnt_i] = src[cnt_i];
    23d4:	9d 93       	st	X+, r25
		drc[cnt_i] = src[start + cnt_i];
	}
}
void copy_state(u8 drc[LEN_SEED][BLOCK_SIZE], u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    23d6:	8e 16       	cp	r8, r30
    23d8:	9f 06       	cpc	r9, r31
    23da:	d9 f7       	brne	.-10     	; 0x23d2 <derived_function+0x2d2>
    23dc:	f5 01       	movw	r30, r10
}
void clear(u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < len; cnt_i++)
	{
		src[cnt_i] = 0x00;
    23de:	11 92       	st	Z+, r1
		drc[cnt_i] = src[cnt_i];
	}
}
void clear(u8 *src, int len)
{
	for (int cnt_i = 0; cnt_i < len; cnt_i++)
    23e0:	8e 16       	cp	r8, r30
    23e2:	9f 06       	cpc	r9, r31
    23e4:	e1 f7       	brne	.-8      	; 0x23de <derived_function+0x2de>
#endif
			copy(chain_value, state);
		}
		copy_state(KEYandV, chain_value, cnt_j);
		clear(chain_value, BLOCK_SIZE);
		in[3]++;
    23e6:	ca 59       	subi	r28, 0x9A	; 154
    23e8:	de 4f       	sbci	r29, 0xFE	; 254
    23ea:	e8 81       	ld	r30, Y
    23ec:	c6 56       	subi	r28, 0x66	; 102
    23ee:	d1 40       	sbci	r29, 0x01	; 1
    23f0:	d3 01       	movw	r26, r6
    23f2:	13 96       	adiw	r26, 0x03	; 3
    23f4:	ec 93       	st	X, r30
		in[cnt_i] = input_data[cnt_i - 24];
	}
	in[cnt_i] = 0x80;

	u8 state[16] = {0x00};
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
    23f6:	cc 59       	subi	r28, 0x9C	; 156
    23f8:	de 4f       	sbci	r29, 0xFE	; 254
    23fa:	88 81       	ld	r24, Y
    23fc:	c4 56       	subi	r28, 0x64	; 100
    23fe:	d1 40       	sbci	r29, 0x01	; 1
    2400:	8f 5f       	subi	r24, 0xFF	; 255
    2402:	cc 59       	subi	r28, 0x9C	; 156
    2404:	de 4f       	sbci	r29, 0xFE	; 254
    2406:	88 83       	st	Y, r24
    2408:	c4 56       	subi	r28, 0x64	; 100
    240a:	d1 40       	sbci	r29, 0x01	; 1
    240c:	cc 59       	subi	r28, 0x9C	; 156
    240e:	de 4f       	sbci	r29, 0xFE	; 254
    2410:	88 81       	ld	r24, Y
    2412:	c4 56       	subi	r28, 0x64	; 100
    2414:	d1 40       	sbci	r29, 0x01	; 1
    2416:	ef 5f       	subi	r30, 0xFF	; 255
    2418:	ca 59       	subi	r28, 0x9A	; 154
    241a:	de 4f       	sbci	r29, 0xFE	; 254
    241c:	e8 83       	st	Y, r30
    241e:	c6 56       	subi	r28, 0x66	; 102
    2420:	d1 40       	sbci	r29, 0x01	; 1
    2422:	83 30       	cpi	r24, 0x03	; 3
    2424:	18 f4       	brcc	.+6      	; 0x242c <derived_function+0x32c>
    2426:	d5 01       	movw	r26, r10
    2428:	9c 91       	ld	r25, X
    242a:	68 cf       	rjmp	.-304    	; 0x22fc <derived_function+0x1fc>
		}
		copy_state(KEYandV, chain_value, cnt_j);
		clear(chain_value, BLOCK_SIZE);
		in[3]++;
	}
	free(in);
    242c:	c3 01       	movw	r24, r6
    242e:	0e 94 ed 1a 	call	0x35da	; 0x35da <free>

	//! step2
	u8 key[16] = {0x00};
    2432:	ce 01       	movw	r24, r28
    2434:	8f 5d       	subi	r24, 0xDF	; 223
    2436:	9e 4f       	sbci	r25, 0xFE	; 254
    2438:	20 e1       	ldi	r18, 0x10	; 16
    243a:	dc 01       	movw	r26, r24
    243c:	1d 92       	st	X+, r1
    243e:	2a 95       	dec	r18
    2440:	e9 f7       	brne	.-6      	; 0x243c <derived_function+0x33c>
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2442:	cb 59       	subi	r28, 0x9B	; 155
    2444:	de 4f       	sbci	r29, 0xFE	; 254
    2446:	18 82       	st	Y, r1
    2448:	c5 56       	subi	r28, 0x65	; 101
    244a:	d1 40       	sbci	r29, 0x01	; 1
    244c:	cb 59       	subi	r28, 0x9B	; 155
    244e:	de 4f       	sbci	r29, 0xFE	; 254
    2450:	28 81       	ld	r18, Y
    2452:	c5 56       	subi	r28, 0x65	; 101
    2454:	d1 40       	sbci	r29, 0x01	; 1
    2456:	20 32       	cpi	r18, 0x20	; 32
    2458:	30 f5       	brcc	.+76     	; 0x24a6 <derived_function+0x3a6>
	{
		key[cnt_i] = *(KEYandV + cnt_i);
    245a:	cb 59       	subi	r28, 0x9B	; 155
    245c:	de 4f       	sbci	r29, 0xFE	; 254
    245e:	38 81       	ld	r19, Y
    2460:	c5 56       	subi	r28, 0x65	; 101
    2462:	d1 40       	sbci	r29, 0x01	; 1
    2464:	cb 59       	subi	r28, 0x9B	; 155
    2466:	de 4f       	sbci	r29, 0xFE	; 254
    2468:	28 81       	ld	r18, Y
    246a:	c5 56       	subi	r28, 0x65	; 101
    246c:	d1 40       	sbci	r29, 0x01	; 1
    246e:	fc 01       	movw	r30, r24
    2470:	e3 0f       	add	r30, r19
    2472:	f1 1d       	adc	r31, r1
    2474:	a1 01       	movw	r20, r2
    2476:	60 e1       	ldi	r22, 0x10	; 16
    2478:	26 9f       	mul	r18, r22
    247a:	40 0d       	add	r20, r0
    247c:	51 1d       	adc	r21, r1
    247e:	11 24       	eor	r1, r1
    2480:	40 83       	st	Z, r20
	}
	free(in);

	//! step2
	u8 key[16] = {0x00};
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2482:	cb 59       	subi	r28, 0x9B	; 155
    2484:	de 4f       	sbci	r29, 0xFE	; 254
    2486:	28 81       	ld	r18, Y
    2488:	c5 56       	subi	r28, 0x65	; 101
    248a:	d1 40       	sbci	r29, 0x01	; 1
    248c:	2f 5f       	subi	r18, 0xFF	; 255
    248e:	cb 59       	subi	r28, 0x9B	; 155
    2490:	de 4f       	sbci	r29, 0xFE	; 254
    2492:	28 83       	st	Y, r18
    2494:	c5 56       	subi	r28, 0x65	; 101
    2496:	d1 40       	sbci	r29, 0x01	; 1
    2498:	cb 59       	subi	r28, 0x9B	; 155
    249a:	de 4f       	sbci	r29, 0xFE	; 254
    249c:	28 81       	ld	r18, Y
    249e:	c5 56       	subi	r28, 0x65	; 101
    24a0:	d1 40       	sbci	r29, 0x01	; 1
    24a2:	20 32       	cpi	r18, 0x20	; 32
    24a4:	d0 f2       	brcs	.-76     	; 0x245a <derived_function+0x35a>
	{
		key[cnt_i] = *(KEYandV + cnt_i);
	}
	for (cnt_j = cnt_i; cnt_j < BLOCK_SIZE; cnt_j++)
    24a6:	cb 59       	subi	r28, 0x9B	; 155
    24a8:	de 4f       	sbci	r29, 0xFE	; 254
    24aa:	28 81       	ld	r18, Y
    24ac:	c5 56       	subi	r28, 0x65	; 101
    24ae:	d1 40       	sbci	r29, 0x01	; 1
    24b0:	cc 59       	subi	r28, 0x9C	; 156
    24b2:	de 4f       	sbci	r29, 0xFE	; 254
    24b4:	28 83       	st	Y, r18
    24b6:	c4 56       	subi	r28, 0x64	; 100
    24b8:	d1 40       	sbci	r29, 0x01	; 1
    24ba:	cc 59       	subi	r28, 0x9C	; 156
    24bc:	de 4f       	sbci	r29, 0xFE	; 254
    24be:	28 81       	ld	r18, Y
    24c0:	c4 56       	subi	r28, 0x64	; 100
    24c2:	d1 40       	sbci	r29, 0x01	; 1
    24c4:	20 31       	cpi	r18, 0x10	; 16
    24c6:	80 f5       	brcc	.+96     	; 0x2528 <derived_function+0x428>
	{
		state[cnt_j] = *(KEYandV + cnt_i + cnt_j);
    24c8:	cc 59       	subi	r28, 0x9C	; 156
    24ca:	de 4f       	sbci	r29, 0xFE	; 254
    24cc:	38 81       	ld	r19, Y
    24ce:	c4 56       	subi	r28, 0x64	; 100
    24d0:	d1 40       	sbci	r29, 0x01	; 1
    24d2:	cb 59       	subi	r28, 0x9B	; 155
    24d4:	de 4f       	sbci	r29, 0xFE	; 254
    24d6:	48 81       	ld	r20, Y
    24d8:	c5 56       	subi	r28, 0x65	; 101
    24da:	d1 40       	sbci	r29, 0x01	; 1
    24dc:	cc 59       	subi	r28, 0x9C	; 156
    24de:	de 4f       	sbci	r29, 0xFE	; 254
    24e0:	28 81       	ld	r18, Y
    24e2:	c4 56       	subi	r28, 0x64	; 100
    24e4:	d1 40       	sbci	r29, 0x01	; 1
    24e6:	f6 01       	movw	r30, r12
    24e8:	e3 0f       	add	r30, r19
    24ea:	f1 1d       	adc	r31, r1
    24ec:	30 e0       	ldi	r19, 0x00	; 0
    24ee:	24 0f       	add	r18, r20
    24f0:	31 1d       	adc	r19, r1
    24f2:	22 95       	swap	r18
    24f4:	32 95       	swap	r19
    24f6:	30 7f       	andi	r19, 0xF0	; 240
    24f8:	32 27       	eor	r19, r18
    24fa:	20 7f       	andi	r18, 0xF0	; 240
    24fc:	32 27       	eor	r19, r18
    24fe:	22 0d       	add	r18, r2
    2500:	33 1d       	adc	r19, r3
    2502:	20 83       	st	Z, r18
	u8 key[16] = {0x00};
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
	{
		key[cnt_i] = *(KEYandV + cnt_i);
	}
	for (cnt_j = cnt_i; cnt_j < BLOCK_SIZE; cnt_j++)
    2504:	cc 59       	subi	r28, 0x9C	; 156
    2506:	de 4f       	sbci	r29, 0xFE	; 254
    2508:	28 81       	ld	r18, Y
    250a:	c4 56       	subi	r28, 0x64	; 100
    250c:	d1 40       	sbci	r29, 0x01	; 1
    250e:	2f 5f       	subi	r18, 0xFF	; 255
    2510:	cc 59       	subi	r28, 0x9C	; 156
    2512:	de 4f       	sbci	r29, 0xFE	; 254
    2514:	28 83       	st	Y, r18
    2516:	c4 56       	subi	r28, 0x64	; 100
    2518:	d1 40       	sbci	r29, 0x01	; 1
    251a:	cc 59       	subi	r28, 0x9C	; 156
    251c:	de 4f       	sbci	r29, 0xFE	; 254
    251e:	28 81       	ld	r18, Y
    2520:	c4 56       	subi	r28, 0x64	; 100
    2522:	d1 40       	sbci	r29, 0x01	; 1
    2524:	20 31       	cpi	r18, 0x10	; 16
    2526:	80 f2       	brcs	.-96     	; 0x24c8 <derived_function+0x3c8>
#if KEY_BIT == 128
	aes128_init(key, &aes_test);
#elif KEY_BIT == 192
	aes192_init(key, &aes_test);
#else //KEY_BIT ==256
	aes256_init(key, &aes_test);
    2528:	be 01       	movw	r22, r28
    252a:	6f 5f       	subi	r22, 0xFF	; 255
    252c:	7f 4f       	sbci	r23, 0xFF	; 255
    252e:	a8 dc       	rcall	.-1712   	; 0x1e80 <aes256_init>
#endif
	for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2530:	cb 59       	subi	r28, 0x9B	; 155
    2532:	de 4f       	sbci	r29, 0xFE	; 254
    2534:	18 82       	st	Y, r1
    2536:	c5 56       	subi	r28, 0x65	; 101
    2538:	d1 40       	sbci	r29, 0x01	; 1
    253a:	cb 59       	subi	r28, 0x9B	; 155
    253c:	de 4f       	sbci	r29, 0xFE	; 254
    253e:	88 81       	ld	r24, Y
    2540:	c5 56       	subi	r28, 0x65	; 101
    2542:	d1 40       	sbci	r29, 0x01	; 1
    2544:	83 30       	cpi	r24, 0x03	; 3
    2546:	08 f0       	brcs	.+2      	; 0x254a <derived_function+0x44a>
    2548:	53 c0       	rjmp	.+166    	; 0x25f0 <derived_function+0x4f0>
#if KEY_BIT == 128
		aes128_enc_CBC_asm(state, &aes_test);
#elif KEY_BIT == 192
		aes192_enc_CBC_asm(state, &aes_test);
#else //KEY_BIT ==256
		aes256_enc_CBC_asm(state, &aes_test);
    254a:	be 01       	movw	r22, r28
    254c:	6f 5f       	subi	r22, 0xFF	; 255
    254e:	7f 4f       	sbci	r23, 0xFF	; 255
    2550:	c6 01       	movw	r24, r12
    2552:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
		for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2556:	cc 59       	subi	r28, 0x9C	; 156
    2558:	de 4f       	sbci	r29, 0xFE	; 254
    255a:	18 82       	st	Y, r1
    255c:	c4 56       	subi	r28, 0x64	; 100
    255e:	d1 40       	sbci	r29, 0x01	; 1
    2560:	cc 59       	subi	r28, 0x9C	; 156
    2562:	de 4f       	sbci	r29, 0xFE	; 254
    2564:	88 81       	ld	r24, Y
    2566:	c4 56       	subi	r28, 0x64	; 100
    2568:	d1 40       	sbci	r29, 0x01	; 1
    256a:	80 31       	cpi	r24, 0x10	; 16
    256c:	70 f5       	brcc	.+92     	; 0x25ca <derived_function+0x4ca>
		{
			seed[cnt_i * 16 + cnt_j] = state[cnt_j];
    256e:	cb 59       	subi	r28, 0x9B	; 155
    2570:	de 4f       	sbci	r29, 0xFE	; 254
    2572:	28 81       	ld	r18, Y
    2574:	c5 56       	subi	r28, 0x65	; 101
    2576:	d1 40       	sbci	r29, 0x01	; 1
    2578:	cc 59       	subi	r28, 0x9C	; 156
    257a:	de 4f       	sbci	r29, 0xFE	; 254
    257c:	98 81       	ld	r25, Y
    257e:	c4 56       	subi	r28, 0x64	; 100
    2580:	d1 40       	sbci	r29, 0x01	; 1
    2582:	cc 59       	subi	r28, 0x9C	; 156
    2584:	de 4f       	sbci	r29, 0xFE	; 254
    2586:	88 81       	ld	r24, Y
    2588:	c4 56       	subi	r28, 0x64	; 100
    258a:	d1 40       	sbci	r29, 0x01	; 1
    258c:	f2 01       	movw	r30, r4
    258e:	a0 e1       	ldi	r26, 0x10	; 16
    2590:	2a 9f       	mul	r18, r26
    2592:	e0 0d       	add	r30, r0
    2594:	f1 1d       	adc	r31, r1
    2596:	11 24       	eor	r1, r1
    2598:	e9 0f       	add	r30, r25
    259a:	f1 1d       	adc	r31, r1
    259c:	d6 01       	movw	r26, r12
    259e:	a8 0f       	add	r26, r24
    25a0:	b1 1d       	adc	r27, r1
    25a2:	8c 91       	ld	r24, X
    25a4:	80 83       	st	Z, r24
#elif KEY_BIT == 192
		aes192_enc_CBC_asm(state, &aes_test);
#else //KEY_BIT ==256
		aes256_enc_CBC_asm(state, &aes_test);
#endif
		for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    25a6:	cc 59       	subi	r28, 0x9C	; 156
    25a8:	de 4f       	sbci	r29, 0xFE	; 254
    25aa:	88 81       	ld	r24, Y
    25ac:	c4 56       	subi	r28, 0x64	; 100
    25ae:	d1 40       	sbci	r29, 0x01	; 1
    25b0:	8f 5f       	subi	r24, 0xFF	; 255
    25b2:	cc 59       	subi	r28, 0x9C	; 156
    25b4:	de 4f       	sbci	r29, 0xFE	; 254
    25b6:	88 83       	st	Y, r24
    25b8:	c4 56       	subi	r28, 0x64	; 100
    25ba:	d1 40       	sbci	r29, 0x01	; 1
    25bc:	cc 59       	subi	r28, 0x9C	; 156
    25be:	de 4f       	sbci	r29, 0xFE	; 254
    25c0:	88 81       	ld	r24, Y
    25c2:	c4 56       	subi	r28, 0x64	; 100
    25c4:	d1 40       	sbci	r29, 0x01	; 1
    25c6:	80 31       	cpi	r24, 0x10	; 16
    25c8:	90 f2       	brcs	.-92     	; 0x256e <derived_function+0x46e>
#elif KEY_BIT == 192
	aes192_init(key, &aes_test);
#else //KEY_BIT ==256
	aes256_init(key, &aes_test);
#endif
	for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    25ca:	cb 59       	subi	r28, 0x9B	; 155
    25cc:	de 4f       	sbci	r29, 0xFE	; 254
    25ce:	88 81       	ld	r24, Y
    25d0:	c5 56       	subi	r28, 0x65	; 101
    25d2:	d1 40       	sbci	r29, 0x01	; 1
    25d4:	8f 5f       	subi	r24, 0xFF	; 255
    25d6:	cb 59       	subi	r28, 0x9B	; 155
    25d8:	de 4f       	sbci	r29, 0xFE	; 254
    25da:	88 83       	st	Y, r24
    25dc:	c5 56       	subi	r28, 0x65	; 101
    25de:	d1 40       	sbci	r29, 0x01	; 1
    25e0:	cb 59       	subi	r28, 0x9B	; 155
    25e2:	de 4f       	sbci	r29, 0xFE	; 254
    25e4:	88 81       	ld	r24, Y
    25e6:	c5 56       	subi	r28, 0x65	; 101
    25e8:	d1 40       	sbci	r29, 0x01	; 1
    25ea:	83 30       	cpi	r24, 0x03	; 3
    25ec:	08 f4       	brcc	.+2      	; 0x25f0 <derived_function+0x4f0>
    25ee:	ad cf       	rjmp	.-166    	; 0x254a <derived_function+0x44a>
			if ((KEY_BIT == 192) && (cnt_i == 2) && (cnt_j == 7))
				break;
		}
	}
	
}
    25f0:	ca 59       	subi	r28, 0x9A	; 154
    25f2:	de 4f       	sbci	r29, 0xFE	; 254
    25f4:	0f b6       	in	r0, 0x3f	; 63
    25f6:	f8 94       	cli
    25f8:	de bf       	out	0x3e, r29	; 62
    25fa:	0f be       	out	0x3f, r0	; 63
    25fc:	cd bf       	out	0x3d, r28	; 61
    25fe:	df 91       	pop	r29
    2600:	cf 91       	pop	r28
    2602:	1f 91       	pop	r17
    2604:	0f 91       	pop	r16
    2606:	ff 90       	pop	r15
    2608:	ef 90       	pop	r14
    260a:	df 90       	pop	r13
    260c:	cf 90       	pop	r12
    260e:	bf 90       	pop	r11
    2610:	af 90       	pop	r10
    2612:	9f 90       	pop	r9
    2614:	8f 90       	pop	r8
    2616:	7f 90       	pop	r7
    2618:	6f 90       	pop	r6
    261a:	5f 90       	pop	r5
    261c:	4f 90       	pop	r4
    261e:	3f 90       	pop	r3
    2620:	2f 90       	pop	r2
    2622:	08 95       	ret

00002624 <update>:

void update(st_state *state, u8 *seed)
{
    2624:	af 92       	push	r10
    2626:	bf 92       	push	r11
    2628:	cf 92       	push	r12
    262a:	df 92       	push	r13
    262c:	ef 92       	push	r14
    262e:	ff 92       	push	r15
    2630:	0f 93       	push	r16
    2632:	1f 93       	push	r17
    2634:	cf 93       	push	r28
    2636:	df 93       	push	r29
    2638:	cd b7       	in	r28, 0x3d	; 61
    263a:	de b7       	in	r29, 0x3e	; 62
    263c:	ce 52       	subi	r28, 0x2E	; 46
    263e:	d1 40       	sbci	r29, 0x01	; 1
    2640:	0f b6       	in	r0, 0x3f	; 63
    2642:	f8 94       	cli
    2644:	de bf       	out	0x3e, r29	; 62
    2646:	0f be       	out	0x3f, r0	; 63
    2648:	cd bf       	out	0x3d, r28	; 61
    264a:	7c 01       	movw	r14, r24
    264c:	6b 01       	movw	r12, r22
	volatile char cnt_i, cnt_j, cnt_k = 0;
    264e:	c3 5d       	subi	r28, 0xD3	; 211
    2650:	de 4f       	sbci	r29, 0xFE	; 254
    2652:	18 82       	st	Y, r1
    2654:	cd 52       	subi	r28, 0x2D	; 45
    2656:	d1 40       	sbci	r29, 0x01	; 1
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
    2658:	8e 01       	movw	r16, r28
    265a:	0f 50       	subi	r16, 0x0F	; 15
    265c:	1f 4f       	sbci	r17, 0xFF	; 255
    265e:	80 e3       	ldi	r24, 0x30	; 48
    2660:	f8 01       	movw	r30, r16
    2662:	11 92       	st	Z+, r1
    2664:	8a 95       	dec	r24
    2666:	e9 f7       	brne	.-6      	; 0x2662 <update+0x3e>
	u8 temp2[12] = {0x00};
    2668:	5e 01       	movw	r10, r28
    266a:	ff ed       	ldi	r31, 0xDF	; 223
    266c:	af 1a       	sub	r10, r31
    266e:	fe ef       	ldi	r31, 0xFE	; 254
    2670:	bf 0a       	sbc	r11, r31
    2672:	8c e0       	ldi	r24, 0x0C	; 12
    2674:	f5 01       	movw	r30, r10
    2676:	11 92       	st	Z+, r1
    2678:	8a 95       	dec	r24
    267a:	e9 f7       	brne	.-6      	; 0x2676 <update+0x52>

	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    267c:	c2 5d       	subi	r28, 0xD2	; 210
    267e:	de 4f       	sbci	r29, 0xFE	; 254
    2680:	18 82       	st	Y, r1
    2682:	ce 52       	subi	r28, 0x2E	; 46
    2684:	d1 40       	sbci	r29, 0x01	; 1
    2686:	c2 5d       	subi	r28, 0xD2	; 210
    2688:	de 4f       	sbci	r29, 0xFE	; 254
    268a:	88 81       	ld	r24, Y
    268c:	ce 52       	subi	r28, 0x2E	; 46
    268e:	d1 40       	sbci	r29, 0x01	; 1
    2690:	80 32       	cpi	r24, 0x20	; 32
    2692:	e0 f4       	brcc	.+56     	; 0x26cc <update+0xa8>
	{
		key[cnt_i] = state->key[cnt_i];
    2694:	c2 5d       	subi	r28, 0xD2	; 210
    2696:	de 4f       	sbci	r29, 0xFE	; 254
    2698:	88 81       	ld	r24, Y
    269a:	ce 52       	subi	r28, 0x2E	; 46
    269c:	d1 40       	sbci	r29, 0x01	; 1
    269e:	c2 5d       	subi	r28, 0xD2	; 210
    26a0:	de 4f       	sbci	r29, 0xFE	; 254
    26a2:	88 81       	ld	r24, Y
    26a4:	ce 52       	subi	r28, 0x2E	; 46
    26a6:	d1 40       	sbci	r29, 0x01	; 1
	volatile char cnt_i, cnt_j, cnt_k = 0;
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
	u8 temp2[12] = {0x00};

	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    26a8:	c2 5d       	subi	r28, 0xD2	; 210
    26aa:	de 4f       	sbci	r29, 0xFE	; 254
    26ac:	88 81       	ld	r24, Y
    26ae:	ce 52       	subi	r28, 0x2E	; 46
    26b0:	d1 40       	sbci	r29, 0x01	; 1
    26b2:	8f 5f       	subi	r24, 0xFF	; 255
    26b4:	c2 5d       	subi	r28, 0xD2	; 210
    26b6:	de 4f       	sbci	r29, 0xFE	; 254
    26b8:	88 83       	st	Y, r24
    26ba:	ce 52       	subi	r28, 0x2E	; 46
    26bc:	d1 40       	sbci	r29, 0x01	; 1
    26be:	c2 5d       	subi	r28, 0xD2	; 210
    26c0:	de 4f       	sbci	r29, 0xFE	; 254
    26c2:	88 81       	ld	r24, Y
    26c4:	ce 52       	subi	r28, 0x2E	; 46
    26c6:	d1 40       	sbci	r29, 0x01	; 1
    26c8:	80 32       	cpi	r24, 0x20	; 32
    26ca:	20 f3       	brcs	.-56     	; 0x2694 <update+0x70>
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
    26cc:	d7 01       	movw	r26, r14
    26ce:	90 96       	adiw	r26, 0x20	; 32
    26d0:	f8 01       	movw	r30, r16
    26d2:	98 01       	movw	r18, r16
    26d4:	20 5f       	subi	r18, 0xF0	; 240
    26d6:	3f 4f       	sbci	r19, 0xFF	; 255
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    26d8:	8d 91       	ld	r24, X+
    26da:	81 93       	st	Z+, r24
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    26dc:	e2 17       	cp	r30, r18
    26de:	f3 07       	cpc	r31, r19
    26e0:	d9 f7       	brne	.-10     	; 0x26d8 <update+0xb4>
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    26e2:	c2 5d       	subi	r28, 0xD2	; 210
    26e4:	de 4f       	sbci	r29, 0xFE	; 254
    26e6:	18 82       	st	Y, r1
    26e8:	ce 52       	subi	r28, 0x2E	; 46
    26ea:	d1 40       	sbci	r29, 0x01	; 1
    26ec:	c2 5d       	subi	r28, 0xD2	; 210
    26ee:	de 4f       	sbci	r29, 0xFE	; 254
    26f0:	88 81       	ld	r24, Y
    26f2:	ce 52       	subi	r28, 0x2E	; 46
    26f4:	d1 40       	sbci	r29, 0x01	; 1
    26f6:	80 31       	cpi	r24, 0x10	; 16
    26f8:	28 f5       	brcc	.+74     	; 0x2744 <update+0x120>
	{
		temp[cnt_i] = state->V[cnt_i];
    26fa:	c2 5d       	subi	r28, 0xD2	; 210
    26fc:	de 4f       	sbci	r29, 0xFE	; 254
    26fe:	98 81       	ld	r25, Y
    2700:	ce 52       	subi	r28, 0x2E	; 46
    2702:	d1 40       	sbci	r29, 0x01	; 1
    2704:	c2 5d       	subi	r28, 0xD2	; 210
    2706:	de 4f       	sbci	r29, 0xFE	; 254
    2708:	88 81       	ld	r24, Y
    270a:	ce 52       	subi	r28, 0x2E	; 46
    270c:	d1 40       	sbci	r29, 0x01	; 1
    270e:	f8 01       	movw	r30, r16
    2710:	e9 0f       	add	r30, r25
    2712:	f1 1d       	adc	r31, r1
    2714:	d7 01       	movw	r26, r14
    2716:	a8 0f       	add	r26, r24
    2718:	b1 1d       	adc	r27, r1
    271a:	90 96       	adiw	r26, 0x20	; 32
    271c:	8c 91       	ld	r24, X
    271e:	80 83       	st	Z, r24
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2720:	c2 5d       	subi	r28, 0xD2	; 210
    2722:	de 4f       	sbci	r29, 0xFE	; 254
    2724:	88 81       	ld	r24, Y
    2726:	ce 52       	subi	r28, 0x2E	; 46
    2728:	d1 40       	sbci	r29, 0x01	; 1
    272a:	8f 5f       	subi	r24, 0xFF	; 255
    272c:	c2 5d       	subi	r28, 0xD2	; 210
    272e:	de 4f       	sbci	r29, 0xFE	; 254
    2730:	88 83       	st	Y, r24
    2732:	ce 52       	subi	r28, 0x2E	; 46
    2734:	d1 40       	sbci	r29, 0x01	; 1
    2736:	c2 5d       	subi	r28, 0xD2	; 210
    2738:	de 4f       	sbci	r29, 0xFE	; 254
    273a:	88 81       	ld	r24, Y
    273c:	ce 52       	subi	r28, 0x2E	; 46
    273e:	d1 40       	sbci	r29, 0x01	; 1
    2740:	80 31       	cpi	r24, 0x10	; 16
    2742:	d8 f2       	brcs	.-74     	; 0x26fa <update+0xd6>
	aes192_init(state->key, &aes_test);
	aes128_enc_CTR_asm(temp, &aes_test, temp2);

#else //key_bit ==256
	aes256_ctx_t aes_test;
	aes256_init(state->key, &aes_test);
    2744:	be 01       	movw	r22, r28
    2746:	6f 5f       	subi	r22, 0xFF	; 255
    2748:	7f 4f       	sbci	r23, 0xFF	; 255
    274a:	c7 01       	movw	r24, r14
    274c:	99 db       	rcall	.-2254   	; 0x1e80 <aes256_init>
	aes128_enc_CTR_asm(temp, &aes_test, temp2);
    274e:	a5 01       	movw	r20, r10
    2750:	be 01       	movw	r22, r28
    2752:	6f 5f       	subi	r22, 0xFF	; 255
    2754:	7f 4f       	sbci	r23, 0xFF	; 255
    2756:	c8 01       	movw	r24, r16
    2758:	0e 94 73 01 	call	0x2e6	; 0x2e6 <aes128_enc_CTR_asm>

#endif

	for (cnt_i = 0; cnt_i < SEED_LEN - BLOCK_SIZE; cnt_i++)
    275c:	c2 5d       	subi	r28, 0xD2	; 210
    275e:	de 4f       	sbci	r29, 0xFE	; 254
    2760:	18 82       	st	Y, r1
    2762:	ce 52       	subi	r28, 0x2E	; 46
    2764:	d1 40       	sbci	r29, 0x01	; 1
    2766:	c2 5d       	subi	r28, 0xD2	; 210
    2768:	de 4f       	sbci	r29, 0xFE	; 254
    276a:	88 81       	ld	r24, Y
    276c:	ce 52       	subi	r28, 0x2E	; 46
    276e:	d1 40       	sbci	r29, 0x01	; 1
    2770:	80 32       	cpi	r24, 0x20	; 32
    2772:	80 f5       	brcc	.+96     	; 0x27d4 <update+0x1b0>
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    2774:	c2 5d       	subi	r28, 0xD2	; 210
    2776:	de 4f       	sbci	r29, 0xFE	; 254
    2778:	98 81       	ld	r25, Y
    277a:	ce 52       	subi	r28, 0x2E	; 46
    277c:	d1 40       	sbci	r29, 0x01	; 1
    277e:	c2 5d       	subi	r28, 0xD2	; 210
    2780:	de 4f       	sbci	r29, 0xFE	; 254
    2782:	28 81       	ld	r18, Y
    2784:	ce 52       	subi	r28, 0x2E	; 46
    2786:	d1 40       	sbci	r29, 0x01	; 1
    2788:	c2 5d       	subi	r28, 0xD2	; 210
    278a:	de 4f       	sbci	r29, 0xFE	; 254
    278c:	88 81       	ld	r24, Y
    278e:	ce 52       	subi	r28, 0x2E	; 46
    2790:	d1 40       	sbci	r29, 0x01	; 1
    2792:	b7 01       	movw	r22, r14
    2794:	69 0f       	add	r22, r25
    2796:	71 1d       	adc	r23, r1
    2798:	a6 01       	movw	r20, r12
    279a:	48 0f       	add	r20, r24
    279c:	51 1d       	adc	r21, r1
    279e:	d8 01       	movw	r26, r16
    27a0:	a2 0f       	add	r26, r18
    27a2:	b1 1d       	adc	r27, r1
    27a4:	fa 01       	movw	r30, r20
    27a6:	90 81       	ld	r25, Z
    27a8:	8c 91       	ld	r24, X
    27aa:	89 27       	eor	r24, r25
    27ac:	fb 01       	movw	r30, r22
    27ae:	80 83       	st	Z, r24
	aes256_init(state->key, &aes_test);
	aes128_enc_CTR_asm(temp, &aes_test, temp2);

#endif

	for (cnt_i = 0; cnt_i < SEED_LEN - BLOCK_SIZE; cnt_i++)
    27b0:	c2 5d       	subi	r28, 0xD2	; 210
    27b2:	de 4f       	sbci	r29, 0xFE	; 254
    27b4:	88 81       	ld	r24, Y
    27b6:	ce 52       	subi	r28, 0x2E	; 46
    27b8:	d1 40       	sbci	r29, 0x01	; 1
    27ba:	8f 5f       	subi	r24, 0xFF	; 255
    27bc:	c2 5d       	subi	r28, 0xD2	; 210
    27be:	de 4f       	sbci	r29, 0xFE	; 254
    27c0:	88 83       	st	Y, r24
    27c2:	ce 52       	subi	r28, 0x2E	; 46
    27c4:	d1 40       	sbci	r29, 0x01	; 1
    27c6:	c2 5d       	subi	r28, 0xD2	; 210
    27c8:	de 4f       	sbci	r29, 0xFE	; 254
    27ca:	88 81       	ld	r24, Y
    27cc:	ce 52       	subi	r28, 0x2E	; 46
    27ce:	d1 40       	sbci	r29, 0x01	; 1
    27d0:	80 32       	cpi	r24, 0x20	; 32
    27d2:	80 f2       	brcs	.-96     	; 0x2774 <update+0x150>
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
	}
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    27d4:	c2 5d       	subi	r28, 0xD2	; 210
    27d6:	de 4f       	sbci	r29, 0xFE	; 254
    27d8:	18 82       	st	Y, r1
    27da:	ce 52       	subi	r28, 0x2E	; 46
    27dc:	d1 40       	sbci	r29, 0x01	; 1
    27de:	c2 5d       	subi	r28, 0xD2	; 210
    27e0:	de 4f       	sbci	r29, 0xFE	; 254
    27e2:	88 81       	ld	r24, Y
    27e4:	ce 52       	subi	r28, 0x2E	; 46
    27e6:	d1 40       	sbci	r29, 0x01	; 1
    27e8:	80 31       	cpi	r24, 0x10	; 16
    27ea:	88 f5       	brcc	.+98     	; 0x284e <update+0x22a>
	{
		state->V[cnt_i] = temp[SEED_LEN - BLOCK_SIZE + cnt_i] ^ seed[SEED_LEN - BLOCK_SIZE + cnt_i];
    27ec:	c2 5d       	subi	r28, 0xD2	; 210
    27ee:	de 4f       	sbci	r29, 0xFE	; 254
    27f0:	98 81       	ld	r25, Y
    27f2:	ce 52       	subi	r28, 0x2E	; 46
    27f4:	d1 40       	sbci	r29, 0x01	; 1
    27f6:	c2 5d       	subi	r28, 0xD2	; 210
    27f8:	de 4f       	sbci	r29, 0xFE	; 254
    27fa:	28 81       	ld	r18, Y
    27fc:	ce 52       	subi	r28, 0x2E	; 46
    27fe:	d1 40       	sbci	r29, 0x01	; 1
    2800:	c2 5d       	subi	r28, 0xD2	; 210
    2802:	de 4f       	sbci	r29, 0xFE	; 254
    2804:	88 81       	ld	r24, Y
    2806:	ce 52       	subi	r28, 0x2E	; 46
    2808:	d1 40       	sbci	r29, 0x01	; 1
    280a:	b7 01       	movw	r22, r14
    280c:	69 0f       	add	r22, r25
    280e:	71 1d       	adc	r23, r1
    2810:	a6 01       	movw	r20, r12
    2812:	48 0f       	add	r20, r24
    2814:	51 1d       	adc	r21, r1
    2816:	d8 01       	movw	r26, r16
    2818:	a2 0f       	add	r26, r18
    281a:	b1 1d       	adc	r27, r1
    281c:	fa 01       	movw	r30, r20
    281e:	90 a1       	ldd	r25, Z+32	; 0x20
    2820:	90 96       	adiw	r26, 0x20	; 32
    2822:	8c 91       	ld	r24, X
    2824:	89 27       	eor	r24, r25
    2826:	fb 01       	movw	r30, r22
    2828:	80 a3       	std	Z+32, r24	; 0x20

	for (cnt_i = 0; cnt_i < SEED_LEN - BLOCK_SIZE; cnt_i++)
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
	}
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    282a:	c2 5d       	subi	r28, 0xD2	; 210
    282c:	de 4f       	sbci	r29, 0xFE	; 254
    282e:	88 81       	ld	r24, Y
    2830:	ce 52       	subi	r28, 0x2E	; 46
    2832:	d1 40       	sbci	r29, 0x01	; 1
    2834:	8f 5f       	subi	r24, 0xFF	; 255
    2836:	c2 5d       	subi	r28, 0xD2	; 210
    2838:	de 4f       	sbci	r29, 0xFE	; 254
    283a:	88 83       	st	Y, r24
    283c:	ce 52       	subi	r28, 0x2E	; 46
    283e:	d1 40       	sbci	r29, 0x01	; 1
    2840:	c2 5d       	subi	r28, 0xD2	; 210
    2842:	de 4f       	sbci	r29, 0xFE	; 254
    2844:	88 81       	ld	r24, Y
    2846:	ce 52       	subi	r28, 0x2E	; 46
    2848:	d1 40       	sbci	r29, 0x01	; 1
    284a:	80 31       	cpi	r24, 0x10	; 16
    284c:	78 f2       	brcs	.-98     	; 0x27ec <update+0x1c8>
	{
		state->V[cnt_i] = temp[SEED_LEN - BLOCK_SIZE + cnt_i] ^ seed[SEED_LEN - BLOCK_SIZE + cnt_i];
	}
}
    284e:	c2 5d       	subi	r28, 0xD2	; 210
    2850:	de 4f       	sbci	r29, 0xFE	; 254
    2852:	0f b6       	in	r0, 0x3f	; 63
    2854:	f8 94       	cli
    2856:	de bf       	out	0x3e, r29	; 62
    2858:	0f be       	out	0x3f, r0	; 63
    285a:	cd bf       	out	0x3d, r28	; 61
    285c:	df 91       	pop	r29
    285e:	cf 91       	pop	r28
    2860:	1f 91       	pop	r17
    2862:	0f 91       	pop	r16
    2864:	ff 90       	pop	r15
    2866:	ef 90       	pop	r14
    2868:	df 90       	pop	r13
    286a:	cf 90       	pop	r12
    286c:	bf 90       	pop	r11
    286e:	af 90       	pop	r10
    2870:	08 95       	ret

00002872 <Reseed_Function>:
	}
	state->Reseed_counter++;
}

void Reseed_Function(st_state *state, u8 *re_Entrophy, u8 *re_add_data, st_len *len)
{
    2872:	8f 92       	push	r8
    2874:	9f 92       	push	r9
    2876:	af 92       	push	r10
    2878:	bf 92       	push	r11
    287a:	cf 92       	push	r12
    287c:	df 92       	push	r13
    287e:	ef 92       	push	r14
    2880:	ff 92       	push	r15
    2882:	0f 93       	push	r16
    2884:	1f 93       	push	r17
    2886:	cf 93       	push	r28
    2888:	df 93       	push	r29
    288a:	cd b7       	in	r28, 0x3d	; 61
    288c:	de b7       	in	r29, 0x3e	; 62
    288e:	e2 97       	sbiw	r28, 0x32	; 50
    2890:	0f b6       	in	r0, 0x3f	; 63
    2892:	f8 94       	cli
    2894:	de bf       	out	0x3e, r29	; 62
    2896:	0f be       	out	0x3f, r0	; 63
    2898:	cd bf       	out	0x3d, r28	; 61
    289a:	5c 01       	movw	r10, r24
    289c:	7b 01       	movw	r14, r22
	volatile char cnt_i = 0;
    289e:	1a aa       	std	Y+50, r1	; 0x32
	u8 len2 = len->re_adddata + len->re_Entrophy;
    28a0:	f9 01       	movw	r30, r18
    28a2:	82 80       	ldd	r8, Z+2	; 0x02
    28a4:	91 80       	ldd	r9, Z+1	; 0x01
    28a6:	98 0c       	add	r9, r8
    28a8:	99 aa       	std	Y+49, r9	; 0x31
	u8 *input_data = (u8 *)calloc(len2, sizeof(u8));
    28aa:	61 e0       	ldi	r22, 0x01	; 1
    28ac:	70 e0       	ldi	r23, 0x00	; 0
    28ae:	89 2d       	mov	r24, r9
    28b0:	90 e0       	ldi	r25, 0x00	; 0
    28b2:	e1 d5       	rcall	.+3010   	; 0x3476 <calloc>
    28b4:	8c 01       	movw	r16, r24
	u8 seed[SEED_LEN] = {0x00};
    28b6:	ce 01       	movw	r24, r28
    28b8:	01 96       	adiw	r24, 0x01	; 1
    28ba:	6c 01       	movw	r12, r24
    28bc:	80 e3       	ldi	r24, 0x30	; 48
    28be:	f6 01       	movw	r30, r12
    28c0:	11 92       	st	Z+, r1
    28c2:	8a 95       	dec	r24
    28c4:	e9 f7       	brne	.-6      	; 0x28c0 <Reseed_Function+0x4e>
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
    28c6:	1a aa       	std	Y+50, r1	; 0x32
    28c8:	8a a9       	ldd	r24, Y+50	; 0x32
    28ca:	88 15       	cp	r24, r8
    28cc:	80 f4       	brcc	.+32     	; 0x28ee <Reseed_Function+0x7c>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
    28ce:	9a a9       	ldd	r25, Y+50	; 0x32
    28d0:	8a a9       	ldd	r24, Y+50	; 0x32
    28d2:	f8 01       	movw	r30, r16
    28d4:	e9 0f       	add	r30, r25
    28d6:	f1 1d       	adc	r31, r1
    28d8:	d7 01       	movw	r26, r14
    28da:	a8 0f       	add	r26, r24
    28dc:	b1 1d       	adc	r27, r1
    28de:	8c 91       	ld	r24, X
    28e0:	80 83       	st	Z, r24
{
	volatile char cnt_i = 0;
	u8 len2 = len->re_adddata + len->re_Entrophy;
	u8 *input_data = (u8 *)calloc(len2, sizeof(u8));
	u8 seed[SEED_LEN] = {0x00};
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
    28e2:	8a a9       	ldd	r24, Y+50	; 0x32
    28e4:	8f 5f       	subi	r24, 0xFF	; 255
    28e6:	8a ab       	std	Y+50, r24	; 0x32
    28e8:	8a a9       	ldd	r24, Y+50	; 0x32
    28ea:	88 15       	cp	r24, r8
    28ec:	80 f3       	brcs	.-32     	; 0x28ce <Reseed_Function+0x5c>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
	}
	for (cnt_i = len->re_Entrophy; cnt_i < len2; cnt_i++)
    28ee:	8a aa       	std	Y+50, r8	; 0x32
    28f0:	8a a9       	ldd	r24, Y+50	; 0x32
    28f2:	89 15       	cp	r24, r9
    28f4:	a0 f4       	brcc	.+40     	; 0x291e <Reseed_Function+0xac>
    28f6:	88 2d       	mov	r24, r8
    28f8:	90 e0       	ldi	r25, 0x00	; 0
	{
		input_data[cnt_i] = re_Entrophy[cnt_i - len->re_Entrophy];
    28fa:	2a a9       	ldd	r18, Y+50	; 0x32
    28fc:	ea a9       	ldd	r30, Y+50	; 0x32
    28fe:	d8 01       	movw	r26, r16
    2900:	a2 0f       	add	r26, r18
    2902:	b1 1d       	adc	r27, r1
    2904:	f0 e0       	ldi	r31, 0x00	; 0
    2906:	e8 1b       	sub	r30, r24
    2908:	f9 0b       	sbc	r31, r25
    290a:	ee 0d       	add	r30, r14
    290c:	ff 1d       	adc	r31, r15
    290e:	20 81       	ld	r18, Z
    2910:	2c 93       	st	X, r18
	u8 seed[SEED_LEN] = {0x00};
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
	}
	for (cnt_i = len->re_Entrophy; cnt_i < len2; cnt_i++)
    2912:	2a a9       	ldd	r18, Y+50	; 0x32
    2914:	2f 5f       	subi	r18, 0xFF	; 255
    2916:	2a ab       	std	Y+50, r18	; 0x32
    2918:	2a a9       	ldd	r18, Y+50	; 0x32
    291a:	29 15       	cp	r18, r9
    291c:	70 f3       	brcs	.-36     	; 0x28fa <Reseed_Function+0x88>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i - len->re_Entrophy];
	}
	derived_function(input_data, seed, &len2);
    291e:	ae 01       	movw	r20, r28
    2920:	4f 5c       	subi	r20, 0xCF	; 207
    2922:	5f 4f       	sbci	r21, 0xFF	; 255
    2924:	b6 01       	movw	r22, r12
    2926:	c8 01       	movw	r24, r16
    2928:	eb db       	rcall	.-2090   	; 0x2100 <derived_function>
	update(state, seed);
    292a:	b6 01       	movw	r22, r12
    292c:	c5 01       	movw	r24, r10
	free(input_data);
    292e:	7a de       	rcall	.-780    	; 0x2624 <update>
    2930:	c8 01       	movw	r24, r16
    2932:	53 d6       	rcall	.+3238   	; 0x35da <free>
}
    2934:	e2 96       	adiw	r28, 0x32	; 50
    2936:	0f b6       	in	r0, 0x3f	; 63
    2938:	f8 94       	cli
    293a:	de bf       	out	0x3e, r29	; 62
    293c:	0f be       	out	0x3f, r0	; 63
    293e:	cd bf       	out	0x3d, r28	; 61
    2940:	df 91       	pop	r29
    2942:	cf 91       	pop	r28
    2944:	1f 91       	pop	r17
    2946:	0f 91       	pop	r16
    2948:	ff 90       	pop	r15
    294a:	ef 90       	pop	r14
    294c:	df 90       	pop	r13
    294e:	cf 90       	pop	r12
    2950:	bf 90       	pop	r11
    2952:	af 90       	pop	r10
    2954:	9f 90       	pop	r9
    2956:	8f 90       	pop	r8
    2958:	08 95       	ret

0000295a <generate_Random>:
		state->V[cnt_i] = temp[SEED_LEN - BLOCK_SIZE + cnt_i] ^ seed[SEED_LEN - BLOCK_SIZE + cnt_i];
	}
}

void generate_Random(st_state *state, u8 *random, u8 *add_data, u8 *re_Entrophy, u8 *re_add_data, st_len *LEN)
{
    295a:	2f 92       	push	r2
    295c:	3f 92       	push	r3
    295e:	4f 92       	push	r4
    2960:	5f 92       	push	r5
    2962:	6f 92       	push	r6
    2964:	7f 92       	push	r7
    2966:	8f 92       	push	r8
    2968:	9f 92       	push	r9
    296a:	af 92       	push	r10
    296c:	bf 92       	push	r11
    296e:	cf 92       	push	r12
    2970:	df 92       	push	r13
    2972:	ef 92       	push	r14
    2974:	ff 92       	push	r15
    2976:	0f 93       	push	r16
    2978:	1f 93       	push	r17
    297a:	cf 93       	push	r28
    297c:	df 93       	push	r29
    297e:	cd b7       	in	r28, 0x3d	; 61
    2980:	de b7       	in	r29, 0x3e	; 62
    2982:	c9 5b       	subi	r28, 0xB9	; 185
    2984:	d1 40       	sbci	r29, 0x01	; 1
    2986:	0f b6       	in	r0, 0x3f	; 63
    2988:	f8 94       	cli
    298a:	de bf       	out	0x3e, r29	; 62
    298c:	0f be       	out	0x3f, r0	; 63
    298e:	cd bf       	out	0x3d, r28	; 61
    2990:	4c 01       	movw	r8, r24
    2992:	5b 01       	movw	r10, r22
    2994:	2a 01       	movw	r4, r20
    2996:	cc 54       	subi	r28, 0x4C	; 76
    2998:	de 4f       	sbci	r29, 0xFE	; 254
    299a:	39 83       	std	Y+1, r19	; 0x01
    299c:	28 83       	st	Y, r18
    299e:	c4 5b       	subi	r28, 0xB4	; 180
    29a0:	d1 40       	sbci	r29, 0x01	; 1
    29a2:	ca 54       	subi	r28, 0x4A	; 74
    29a4:	de 4f       	sbci	r29, 0xFE	; 254
    29a6:	19 83       	std	Y+1, r17	; 0x01
    29a8:	08 83       	st	Y, r16
    29aa:	c6 5b       	subi	r28, 0xB6	; 182
    29ac:	d1 40       	sbci	r29, 0x01	; 1

	volatile char cnt_i = 0, cnt_j = 0, cnt_k = 0;
    29ae:	cd 54       	subi	r28, 0x4D	; 77
    29b0:	de 4f       	sbci	r29, 0xFE	; 254
    29b2:	18 82       	st	Y, r1
    29b4:	c3 5b       	subi	r28, 0xB3	; 179
    29b6:	d1 40       	sbci	r29, 0x01	; 1
    29b8:	ce 54       	subi	r28, 0x4E	; 78
    29ba:	de 4f       	sbci	r29, 0xFE	; 254
    29bc:	18 82       	st	Y, r1
    29be:	c2 5b       	subi	r28, 0xB2	; 178
    29c0:	d1 40       	sbci	r29, 0x01	; 1
    29c2:	cf 54       	subi	r28, 0x4F	; 79
    29c4:	de 4f       	sbci	r29, 0xFE	; 254
    29c6:	18 82       	st	Y, r1
    29c8:	c1 5b       	subi	r28, 0xB1	; 177
    29ca:	d1 40       	sbci	r29, 0x01	; 1
	u8 round_key[16 * 17] = {0x00};
	u8 a_data[16] = {0x00};
    29cc:	1e 01       	movw	r2, r28
    29ce:	2f e5       	ldi	r18, 0x5F	; 95
    29d0:	22 1a       	sub	r2, r18
    29d2:	2e ef       	ldi	r18, 0xFE	; 254
    29d4:	32 0a       	sbc	r3, r18
    29d6:	80 e1       	ldi	r24, 0x10	; 16
    29d8:	d1 01       	movw	r26, r2
    29da:	1d 92       	st	X+, r1
    29dc:	8a 95       	dec	r24
    29de:	e9 f7       	brne	.-6      	; 0x29da <generate_Random+0x80>
	u8 seed[SEED_LEN] = {0x00};
    29e0:	3e 01       	movw	r6, r28
    29e2:	bf ea       	ldi	r27, 0xAF	; 175
    29e4:	6b 1a       	sub	r6, r27
    29e6:	be ef       	ldi	r27, 0xFE	; 254
    29e8:	7b 0a       	sbc	r7, r27
    29ea:	80 e3       	ldi	r24, 0x30	; 48
    29ec:	f3 01       	movw	r30, r6
    29ee:	28 2f       	mov	r18, r24
    29f0:	11 92       	st	Z+, r1
    29f2:	2a 95       	dec	r18
    29f4:	e9 f7       	brne	.-6      	; 0x29f0 <generate_Random+0x96>
	u8 key[KEY_BIT / 8] = {0x00};
    29f6:	ae 01       	movw	r20, r28
    29f8:	4f 57       	subi	r20, 0x7F	; 127
    29fa:	5e 4f       	sbci	r21, 0xFE	; 254
    29fc:	c8 54       	subi	r28, 0x48	; 72
    29fe:	de 4f       	sbci	r29, 0xFE	; 254
    2a00:	59 83       	std	Y+1, r21	; 0x01
    2a02:	48 83       	st	Y, r20
    2a04:	c8 5b       	subi	r28, 0xB8	; 184
    2a06:	d1 40       	sbci	r29, 0x01	; 1
    2a08:	90 e2       	ldi	r25, 0x20	; 32
    2a0a:	da 01       	movw	r26, r20
    2a0c:	1d 92       	st	X+, r1
    2a0e:	9a 95       	dec	r25
    2a10:	e9 f7       	brne	.-6      	; 0x2a0c <generate_Random+0xb2>
	u8 temp[SEED_LEN] = {0x00};
    2a12:	6e 01       	movw	r12, r28
    2a14:	bf ed       	ldi	r27, 0xDF	; 223
    2a16:	cb 1a       	sub	r12, r27
    2a18:	be ef       	ldi	r27, 0xFE	; 254
    2a1a:	db 0a       	sbc	r13, r27
    2a1c:	f6 01       	movw	r30, r12
    2a1e:	28 2f       	mov	r18, r24
    2a20:	11 92       	st	Z+, r1
    2a22:	2a 95       	dec	r18
    2a24:	e9 f7       	brne	.-6      	; 0x2a20 <generate_Random+0xc6>
	u8 result[SEED_LEN] = {0x00};
    2a26:	8e 01       	movw	r16, r28
    2a28:	0f 50       	subi	r16, 0x0F	; 15
    2a2a:	1f 4f       	sbci	r17, 0xFF	; 255
    2a2c:	d8 01       	movw	r26, r16
    2a2e:	1d 92       	st	X+, r1
    2a30:	8a 95       	dec	r24
    2a32:	e9 f7       	brne	.-6      	; 0x2a2e <generate_Random+0xd4>

	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2a34:	cd 54       	subi	r28, 0x4D	; 77
    2a36:	de 4f       	sbci	r29, 0xFE	; 254
    2a38:	18 82       	st	Y, r1
    2a3a:	c3 5b       	subi	r28, 0xB3	; 179
    2a3c:	d1 40       	sbci	r29, 0x01	; 1
    2a3e:	cd 54       	subi	r28, 0x4D	; 77
    2a40:	de 4f       	sbci	r29, 0xFE	; 254
    2a42:	88 81       	ld	r24, Y
    2a44:	c3 5b       	subi	r28, 0xB3	; 179
    2a46:	d1 40       	sbci	r29, 0x01	; 1
    2a48:	80 32       	cpi	r24, 0x20	; 32
    2a4a:	40 f5       	brcc	.+80     	; 0x2a9c <generate_Random+0x142>
	{
		key[cnt_i] = state->key[cnt_i];
    2a4c:	cd 54       	subi	r28, 0x4D	; 77
    2a4e:	de 4f       	sbci	r29, 0xFE	; 254
    2a50:	98 81       	ld	r25, Y
    2a52:	c3 5b       	subi	r28, 0xB3	; 179
    2a54:	d1 40       	sbci	r29, 0x01	; 1
    2a56:	cd 54       	subi	r28, 0x4D	; 77
    2a58:	de 4f       	sbci	r29, 0xFE	; 254
    2a5a:	88 81       	ld	r24, Y
    2a5c:	c3 5b       	subi	r28, 0xB3	; 179
    2a5e:	d1 40       	sbci	r29, 0x01	; 1
    2a60:	e1 e8       	ldi	r30, 0x81	; 129
    2a62:	f1 e0       	ldi	r31, 0x01	; 1
    2a64:	ec 0f       	add	r30, r28
    2a66:	fd 1f       	adc	r31, r29
    2a68:	e9 0f       	add	r30, r25
    2a6a:	f1 1d       	adc	r31, r1
    2a6c:	94 01       	movw	r18, r8
    2a6e:	28 0f       	add	r18, r24
    2a70:	31 1d       	adc	r19, r1
    2a72:	d9 01       	movw	r26, r18
    2a74:	8c 91       	ld	r24, X
    2a76:	80 83       	st	Z, r24
	u8 seed[SEED_LEN] = {0x00};
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
	u8 result[SEED_LEN] = {0x00};

	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2a78:	cd 54       	subi	r28, 0x4D	; 77
    2a7a:	de 4f       	sbci	r29, 0xFE	; 254
    2a7c:	88 81       	ld	r24, Y
    2a7e:	c3 5b       	subi	r28, 0xB3	; 179
    2a80:	d1 40       	sbci	r29, 0x01	; 1
    2a82:	8f 5f       	subi	r24, 0xFF	; 255
    2a84:	cd 54       	subi	r28, 0x4D	; 77
    2a86:	de 4f       	sbci	r29, 0xFE	; 254
    2a88:	88 83       	st	Y, r24
    2a8a:	c3 5b       	subi	r28, 0xB3	; 179
    2a8c:	d1 40       	sbci	r29, 0x01	; 1
    2a8e:	cd 54       	subi	r28, 0x4D	; 77
    2a90:	de 4f       	sbci	r29, 0xFE	; 254
    2a92:	88 81       	ld	r24, Y
    2a94:	c3 5b       	subi	r28, 0xB3	; 179
    2a96:	d1 40       	sbci	r29, 0x01	; 1
    2a98:	80 32       	cpi	r24, 0x20	; 32
    2a9a:	c0 f2       	brcs	.-80     	; 0x2a4c <generate_Random+0xf2>
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
    2a9c:	c4 01       	movw	r24, r8
    2a9e:	80 96       	adiw	r24, 0x20	; 32
    2aa0:	f6 01       	movw	r30, r12
    2aa2:	96 01       	movw	r18, r12
    2aa4:	20 5f       	subi	r18, 0xF0	; 240
    2aa6:	3f 4f       	sbci	r19, 0xFF	; 255
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    2aa8:	dc 01       	movw	r26, r24
    2aaa:	4d 91       	ld	r20, X+
    2aac:	cd 01       	movw	r24, r26
    2aae:	41 93       	st	Z+, r20
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (int cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2ab0:	2e 17       	cp	r18, r30
    2ab2:	3f 07       	cpc	r19, r31
    2ab4:	c9 f7       	brne	.-14     	; 0x2aa8 <generate_Random+0x14e>
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2ab6:	cd 54       	subi	r28, 0x4D	; 77
    2ab8:	de 4f       	sbci	r29, 0xFE	; 254
    2aba:	18 82       	st	Y, r1
    2abc:	c3 5b       	subi	r28, 0xB3	; 179
    2abe:	d1 40       	sbci	r29, 0x01	; 1
    2ac0:	cd 54       	subi	r28, 0x4D	; 77
    2ac2:	de 4f       	sbci	r29, 0xFE	; 254
    2ac4:	88 81       	ld	r24, Y
    2ac6:	c3 5b       	subi	r28, 0xB3	; 179
    2ac8:	d1 40       	sbci	r29, 0x01	; 1
    2aca:	80 31       	cpi	r24, 0x10	; 16
    2acc:	38 f5       	brcc	.+78     	; 0x2b1c <generate_Random+0x1c2>
	{
		result[cnt_i] = state->V[(KEY_BIT / 8) + cnt_i];
    2ace:	cd 54       	subi	r28, 0x4D	; 77
    2ad0:	de 4f       	sbci	r29, 0xFE	; 254
    2ad2:	88 81       	ld	r24, Y
    2ad4:	c3 5b       	subi	r28, 0xB3	; 179
    2ad6:	d1 40       	sbci	r29, 0x01	; 1
    2ad8:	cd 54       	subi	r28, 0x4D	; 77
    2ada:	de 4f       	sbci	r29, 0xFE	; 254
    2adc:	28 81       	ld	r18, Y
    2ade:	c3 5b       	subi	r28, 0xB3	; 179
    2ae0:	d1 40       	sbci	r29, 0x01	; 1
    2ae2:	a8 01       	movw	r20, r16
    2ae4:	48 0f       	add	r20, r24
    2ae6:	51 1d       	adc	r21, r1
    2ae8:	f4 01       	movw	r30, r8
    2aea:	e2 0f       	add	r30, r18
    2aec:	f1 1d       	adc	r31, r1
    2aee:	e0 5c       	subi	r30, 0xC0	; 192
    2af0:	ff 4f       	sbci	r31, 0xFF	; 255
    2af2:	20 81       	ld	r18, Z
    2af4:	da 01       	movw	r26, r20
    2af6:	2c 93       	st	X, r18
	for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2af8:	cd 54       	subi	r28, 0x4D	; 77
    2afa:	de 4f       	sbci	r29, 0xFE	; 254
    2afc:	98 81       	ld	r25, Y
    2afe:	c3 5b       	subi	r28, 0xB3	; 179
    2b00:	d1 40       	sbci	r29, 0x01	; 1
    2b02:	9f 5f       	subi	r25, 0xFF	; 255
    2b04:	cd 54       	subi	r28, 0x4D	; 77
    2b06:	de 4f       	sbci	r29, 0xFE	; 254
    2b08:	98 83       	st	Y, r25
    2b0a:	c3 5b       	subi	r28, 0xB3	; 179
    2b0c:	d1 40       	sbci	r29, 0x01	; 1
    2b0e:	cd 54       	subi	r28, 0x4D	; 77
    2b10:	de 4f       	sbci	r29, 0xFE	; 254
    2b12:	88 81       	ld	r24, Y
    2b14:	c3 5b       	subi	r28, 0xB3	; 179
    2b16:	d1 40       	sbci	r29, 0x01	; 1
    2b18:	80 31       	cpi	r24, 0x10	; 16
    2b1a:	c8 f2       	brcs	.-78     	; 0x2ace <generate_Random+0x174>
	aes192_ctx_t aes_test;
	aes192_init(key, &aes_test);

#else //KEY_BIT ==256
	aes256_ctx_t aes_test;
	aes256_init(key, &aes_test);
    2b1c:	be 01       	movw	r22, r28
    2b1e:	6f 5f       	subi	r22, 0xFF	; 255
    2b20:	7f 4f       	sbci	r23, 0xFF	; 255
    2b22:	ce 01       	movw	r24, r28
    2b24:	8f 57       	subi	r24, 0x7F	; 127
    2b26:	9e 4f       	sbci	r25, 0xFE	; 254
    2b28:	ab d9       	rcall	.-3242   	; 0x1e80 <aes256_init>
#endif

	if (state->prediction_flag == TRUE)
    2b2a:	f4 01       	movw	r30, r8
    2b2c:	81 a9       	ldd	r24, Z+49	; 0x31
    2b2e:	81 30       	cpi	r24, 0x01	; 1
    2b30:	09 f4       	brne	.+2      	; 0x2b34 <generate_Random+0x1da>
    2b32:	a7 c2       	rjmp	.+1358   	; 0x3082 <generate_Random+0x728>
		{
			state->V[cnt_i] = temp[16 + cnt_i] ^ seed[16 + cnt_i];
		}
	}

	else if (add_data != NULL)
    2b34:	41 14       	cp	r4, r1
    2b36:	51 04       	cpc	r5, r1
    2b38:	09 f4       	brne	.+2      	; 0x2b3c <generate_Random+0x1e2>
    2b3a:	69 c1       	rjmp	.+722    	; 0x2e0e <generate_Random+0x4b4>
	{
		derived_function(add_data, seed, &(LEN->general_len));
    2b3c:	a7 01       	movw	r20, r14
    2b3e:	4c 5f       	subi	r20, 0xFC	; 252
    2b40:	5f 4f       	sbci	r21, 0xFF	; 255
    2b42:	b3 01       	movw	r22, r6
    2b44:	c2 01       	movw	r24, r4
    2b46:	dc da       	rcall	.-2632   	; 0x2100 <derived_function>
		update(state, seed);
    2b48:	b3 01       	movw	r22, r6
    2b4a:	c4 01       	movw	r24, r8
    2b4c:	6b dd       	rcall	.-1322   	; 0x2624 <update>
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2b4e:	cd 54       	subi	r28, 0x4D	; 77
    2b50:	de 4f       	sbci	r29, 0xFE	; 254
    2b52:	18 82       	st	Y, r1
    2b54:	c3 5b       	subi	r28, 0xB3	; 179
    2b56:	d1 40       	sbci	r29, 0x01	; 1
    2b58:	cd 54       	subi	r28, 0x4D	; 77
    2b5a:	de 4f       	sbci	r29, 0xFE	; 254
    2b5c:	88 81       	ld	r24, Y
    2b5e:	c3 5b       	subi	r28, 0xB3	; 179
    2b60:	d1 40       	sbci	r29, 0x01	; 1
    2b62:	83 30       	cpi	r24, 0x03	; 3
    2b64:	08 f0       	brcs	.+2      	; 0x2b68 <generate_Random+0x20e>
    2b66:	57 c0       	rjmp	.+174    	; 0x2c16 <generate_Random+0x2bc>
		{
			state->V[15]++;
    2b68:	f4 01       	movw	r30, r8
    2b6a:	87 a5       	ldd	r24, Z+47	; 0x2f
    2b6c:	8f 5f       	subi	r24, 0xFF	; 255
    2b6e:	87 a7       	std	Z+47, r24	; 0x2f
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    2b70:	be 01       	movw	r22, r28
    2b72:	6f 5f       	subi	r22, 0xFF	; 255
    2b74:	7f 4f       	sbci	r23, 0xFF	; 255
    2b76:	c8 01       	movw	r24, r16
    2b78:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2b7c:	ce 54       	subi	r28, 0x4E	; 78
    2b7e:	de 4f       	sbci	r29, 0xFE	; 254
    2b80:	18 82       	st	Y, r1
    2b82:	c2 5b       	subi	r28, 0xB2	; 178
    2b84:	d1 40       	sbci	r29, 0x01	; 1
    2b86:	ce 54       	subi	r28, 0x4E	; 78
    2b88:	de 4f       	sbci	r29, 0xFE	; 254
    2b8a:	88 81       	ld	r24, Y
    2b8c:	c2 5b       	subi	r28, 0xB2	; 178
    2b8e:	d1 40       	sbci	r29, 0x01	; 1
    2b90:	80 31       	cpi	r24, 0x10	; 16
    2b92:	70 f5       	brcc	.+92     	; 0x2bf0 <generate_Random+0x296>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    2b94:	cd 54       	subi	r28, 0x4D	; 77
    2b96:	de 4f       	sbci	r29, 0xFE	; 254
    2b98:	28 81       	ld	r18, Y
    2b9a:	c3 5b       	subi	r28, 0xB3	; 179
    2b9c:	d1 40       	sbci	r29, 0x01	; 1
    2b9e:	ce 54       	subi	r28, 0x4E	; 78
    2ba0:	de 4f       	sbci	r29, 0xFE	; 254
    2ba2:	98 81       	ld	r25, Y
    2ba4:	c2 5b       	subi	r28, 0xB2	; 178
    2ba6:	d1 40       	sbci	r29, 0x01	; 1
    2ba8:	ce 54       	subi	r28, 0x4E	; 78
    2baa:	de 4f       	sbci	r29, 0xFE	; 254
    2bac:	88 81       	ld	r24, Y
    2bae:	c2 5b       	subi	r28, 0xB2	; 178
    2bb0:	d1 40       	sbci	r29, 0x01	; 1
    2bb2:	f5 01       	movw	r30, r10
    2bb4:	30 e1       	ldi	r19, 0x10	; 16
    2bb6:	23 9f       	mul	r18, r19
    2bb8:	e0 0d       	add	r30, r0
    2bba:	f1 1d       	adc	r31, r1
    2bbc:	11 24       	eor	r1, r1
    2bbe:	e9 0f       	add	r30, r25
    2bc0:	f1 1d       	adc	r31, r1
    2bc2:	d8 01       	movw	r26, r16
    2bc4:	a8 0f       	add	r26, r24
    2bc6:	b1 1d       	adc	r27, r1
    2bc8:	8c 91       	ld	r24, X
    2bca:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2bcc:	ce 54       	subi	r28, 0x4E	; 78
    2bce:	de 4f       	sbci	r29, 0xFE	; 254
    2bd0:	88 81       	ld	r24, Y
    2bd2:	c2 5b       	subi	r28, 0xB2	; 178
    2bd4:	d1 40       	sbci	r29, 0x01	; 1
    2bd6:	8f 5f       	subi	r24, 0xFF	; 255
    2bd8:	ce 54       	subi	r28, 0x4E	; 78
    2bda:	de 4f       	sbci	r29, 0xFE	; 254
    2bdc:	88 83       	st	Y, r24
    2bde:	c2 5b       	subi	r28, 0xB2	; 178
    2be0:	d1 40       	sbci	r29, 0x01	; 1
    2be2:	ce 54       	subi	r28, 0x4E	; 78
    2be4:	de 4f       	sbci	r29, 0xFE	; 254
    2be6:	88 81       	ld	r24, Y
    2be8:	c2 5b       	subi	r28, 0xB2	; 178
    2bea:	d1 40       	sbci	r29, 0x01	; 1
    2bec:	80 31       	cpi	r24, 0x10	; 16
    2bee:	90 f2       	brcs	.-92     	; 0x2b94 <generate_Random+0x23a>

	else if (add_data != NULL)
	{
		derived_function(add_data, seed, &(LEN->general_len));
		update(state, seed);
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2bf0:	cd 54       	subi	r28, 0x4D	; 77
    2bf2:	de 4f       	sbci	r29, 0xFE	; 254
    2bf4:	88 81       	ld	r24, Y
    2bf6:	c3 5b       	subi	r28, 0xB3	; 179
    2bf8:	d1 40       	sbci	r29, 0x01	; 1
    2bfa:	8f 5f       	subi	r24, 0xFF	; 255
    2bfc:	cd 54       	subi	r28, 0x4D	; 77
    2bfe:	de 4f       	sbci	r29, 0xFE	; 254
    2c00:	88 83       	st	Y, r24
    2c02:	c3 5b       	subi	r28, 0xB3	; 179
    2c04:	d1 40       	sbci	r29, 0x01	; 1
    2c06:	cd 54       	subi	r28, 0x4D	; 77
    2c08:	de 4f       	sbci	r29, 0xFE	; 254
    2c0a:	88 81       	ld	r24, Y
    2c0c:	c3 5b       	subi	r28, 0xB3	; 179
    2c0e:	d1 40       	sbci	r29, 0x01	; 1
    2c10:	83 30       	cpi	r24, 0x03	; 3
    2c12:	08 f4       	brcc	.+2      	; 0x2c16 <generate_Random+0x2bc>
    2c14:	a9 cf       	rjmp	.-174    	; 0x2b68 <generate_Random+0x20e>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2c16:	cd 54       	subi	r28, 0x4D	; 77
    2c18:	de 4f       	sbci	r29, 0xFE	; 254
    2c1a:	18 82       	st	Y, r1
    2c1c:	c3 5b       	subi	r28, 0xB3	; 179
    2c1e:	d1 40       	sbci	r29, 0x01	; 1
    2c20:	cd 54       	subi	r28, 0x4D	; 77
    2c22:	de 4f       	sbci	r29, 0xFE	; 254
    2c24:	88 81       	ld	r24, Y
    2c26:	c3 5b       	subi	r28, 0xB3	; 179
    2c28:	d1 40       	sbci	r29, 0x01	; 1
    2c2a:	83 30       	cpi	r24, 0x03	; 3
    2c2c:	08 f0       	brcs	.+2      	; 0x2c30 <generate_Random+0x2d6>
    2c2e:	5a c0       	rjmp	.+180    	; 0x2ce4 <generate_Random+0x38a>
		{
			state->V[15]++;
    2c30:	d4 01       	movw	r26, r8
    2c32:	9f 96       	adiw	r26, 0x2f	; 47
    2c34:	8c 91       	ld	r24, X
    2c36:	9f 97       	sbiw	r26, 0x2f	; 47
    2c38:	8f 5f       	subi	r24, 0xFF	; 255
    2c3a:	9f 96       	adiw	r26, 0x2f	; 47
    2c3c:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    2c3e:	be 01       	movw	r22, r28
    2c40:	6f 5f       	subi	r22, 0xFF	; 255
    2c42:	7f 4f       	sbci	r23, 0xFF	; 255
    2c44:	c8 01       	movw	r24, r16
    2c46:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2c4a:	ce 54       	subi	r28, 0x4E	; 78
    2c4c:	de 4f       	sbci	r29, 0xFE	; 254
    2c4e:	18 82       	st	Y, r1
    2c50:	c2 5b       	subi	r28, 0xB2	; 178
    2c52:	d1 40       	sbci	r29, 0x01	; 1
    2c54:	ce 54       	subi	r28, 0x4E	; 78
    2c56:	de 4f       	sbci	r29, 0xFE	; 254
    2c58:	88 81       	ld	r24, Y
    2c5a:	c2 5b       	subi	r28, 0xB2	; 178
    2c5c:	d1 40       	sbci	r29, 0x01	; 1
    2c5e:	80 31       	cpi	r24, 0x10	; 16
    2c60:	70 f5       	brcc	.+92     	; 0x2cbe <generate_Random+0x364>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    2c62:	cd 54       	subi	r28, 0x4D	; 77
    2c64:	de 4f       	sbci	r29, 0xFE	; 254
    2c66:	28 81       	ld	r18, Y
    2c68:	c3 5b       	subi	r28, 0xB3	; 179
    2c6a:	d1 40       	sbci	r29, 0x01	; 1
    2c6c:	ce 54       	subi	r28, 0x4E	; 78
    2c6e:	de 4f       	sbci	r29, 0xFE	; 254
    2c70:	98 81       	ld	r25, Y
    2c72:	c2 5b       	subi	r28, 0xB2	; 178
    2c74:	d1 40       	sbci	r29, 0x01	; 1
    2c76:	ce 54       	subi	r28, 0x4E	; 78
    2c78:	de 4f       	sbci	r29, 0xFE	; 254
    2c7a:	88 81       	ld	r24, Y
    2c7c:	c2 5b       	subi	r28, 0xB2	; 178
    2c7e:	d1 40       	sbci	r29, 0x01	; 1
    2c80:	f6 01       	movw	r30, r12
    2c82:	b0 e1       	ldi	r27, 0x10	; 16
    2c84:	2b 9f       	mul	r18, r27
    2c86:	e0 0d       	add	r30, r0
    2c88:	f1 1d       	adc	r31, r1
    2c8a:	11 24       	eor	r1, r1
    2c8c:	e9 0f       	add	r30, r25
    2c8e:	f1 1d       	adc	r31, r1
    2c90:	d8 01       	movw	r26, r16
    2c92:	a8 0f       	add	r26, r24
    2c94:	b1 1d       	adc	r27, r1
    2c96:	8c 91       	ld	r24, X
    2c98:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2c9a:	ce 54       	subi	r28, 0x4E	; 78
    2c9c:	de 4f       	sbci	r29, 0xFE	; 254
    2c9e:	88 81       	ld	r24, Y
    2ca0:	c2 5b       	subi	r28, 0xB2	; 178
    2ca2:	d1 40       	sbci	r29, 0x01	; 1
    2ca4:	8f 5f       	subi	r24, 0xFF	; 255
    2ca6:	ce 54       	subi	r28, 0x4E	; 78
    2ca8:	de 4f       	sbci	r29, 0xFE	; 254
    2caa:	88 83       	st	Y, r24
    2cac:	c2 5b       	subi	r28, 0xB2	; 178
    2cae:	d1 40       	sbci	r29, 0x01	; 1
    2cb0:	ce 54       	subi	r28, 0x4E	; 78
    2cb2:	de 4f       	sbci	r29, 0xFE	; 254
    2cb4:	88 81       	ld	r24, Y
    2cb6:	c2 5b       	subi	r28, 0xB2	; 178
    2cb8:	d1 40       	sbci	r29, 0x01	; 1
    2cba:	80 31       	cpi	r24, 0x10	; 16
    2cbc:	90 f2       	brcs	.-92     	; 0x2c62 <generate_Random+0x308>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2cbe:	cd 54       	subi	r28, 0x4D	; 77
    2cc0:	de 4f       	sbci	r29, 0xFE	; 254
    2cc2:	88 81       	ld	r24, Y
    2cc4:	c3 5b       	subi	r28, 0xB3	; 179
    2cc6:	d1 40       	sbci	r29, 0x01	; 1
    2cc8:	8f 5f       	subi	r24, 0xFF	; 255
    2cca:	cd 54       	subi	r28, 0x4D	; 77
    2ccc:	de 4f       	sbci	r29, 0xFE	; 254
    2cce:	88 83       	st	Y, r24
    2cd0:	c3 5b       	subi	r28, 0xB3	; 179
    2cd2:	d1 40       	sbci	r29, 0x01	; 1
    2cd4:	cd 54       	subi	r28, 0x4D	; 77
    2cd6:	de 4f       	sbci	r29, 0xFE	; 254
    2cd8:	88 81       	ld	r24, Y
    2cda:	c3 5b       	subi	r28, 0xB3	; 179
    2cdc:	d1 40       	sbci	r29, 0x01	; 1
    2cde:	83 30       	cpi	r24, 0x03	; 3
    2ce0:	08 f4       	brcc	.+2      	; 0x2ce4 <generate_Random+0x38a>
    2ce2:	a6 cf       	rjmp	.-180    	; 0x2c30 <generate_Random+0x2d6>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2ce4:	cd 54       	subi	r28, 0x4D	; 77
    2ce6:	de 4f       	sbci	r29, 0xFE	; 254
    2ce8:	18 82       	st	Y, r1
    2cea:	c3 5b       	subi	r28, 0xB3	; 179
    2cec:	d1 40       	sbci	r29, 0x01	; 1
    2cee:	cd 54       	subi	r28, 0x4D	; 77
    2cf0:	de 4f       	sbci	r29, 0xFE	; 254
    2cf2:	88 81       	ld	r24, Y
    2cf4:	c3 5b       	subi	r28, 0xB3	; 179
    2cf6:	d1 40       	sbci	r29, 0x01	; 1
    2cf8:	83 30       	cpi	r24, 0x03	; 3
    2cfa:	30 f5       	brcc	.+76     	; 0x2d48 <generate_Random+0x3ee>
		{
			temp[cnt_i] ^= seed[cnt_i];
    2cfc:	cd 54       	subi	r28, 0x4D	; 77
    2cfe:	de 4f       	sbci	r29, 0xFE	; 254
    2d00:	88 81       	ld	r24, Y
    2d02:	c3 5b       	subi	r28, 0xB3	; 179
    2d04:	d1 40       	sbci	r29, 0x01	; 1
    2d06:	cd 54       	subi	r28, 0x4D	; 77
    2d08:	de 4f       	sbci	r29, 0xFE	; 254
    2d0a:	98 81       	ld	r25, Y
    2d0c:	c3 5b       	subi	r28, 0xB3	; 179
    2d0e:	d1 40       	sbci	r29, 0x01	; 1
    2d10:	f6 01       	movw	r30, r12
    2d12:	e9 0f       	add	r30, r25
    2d14:	f1 1d       	adc	r31, r1
    2d16:	d3 01       	movw	r26, r6
    2d18:	a8 0f       	add	r26, r24
    2d1a:	b1 1d       	adc	r27, r1
    2d1c:	9c 91       	ld	r25, X
    2d1e:	80 81       	ld	r24, Z
    2d20:	89 27       	eor	r24, r25
    2d22:	80 83       	st	Z, r24
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2d24:	cd 54       	subi	r28, 0x4D	; 77
    2d26:	de 4f       	sbci	r29, 0xFE	; 254
    2d28:	88 81       	ld	r24, Y
    2d2a:	c3 5b       	subi	r28, 0xB3	; 179
    2d2c:	d1 40       	sbci	r29, 0x01	; 1
    2d2e:	8f 5f       	subi	r24, 0xFF	; 255
    2d30:	cd 54       	subi	r28, 0x4D	; 77
    2d32:	de 4f       	sbci	r29, 0xFE	; 254
    2d34:	88 83       	st	Y, r24
    2d36:	c3 5b       	subi	r28, 0xB3	; 179
    2d38:	d1 40       	sbci	r29, 0x01	; 1
    2d3a:	cd 54       	subi	r28, 0x4D	; 77
    2d3c:	de 4f       	sbci	r29, 0xFE	; 254
    2d3e:	88 81       	ld	r24, Y
    2d40:	c3 5b       	subi	r28, 0xB3	; 179
    2d42:	d1 40       	sbci	r29, 0x01	; 1
    2d44:	83 30       	cpi	r24, 0x03	; 3
    2d46:	d0 f2       	brcs	.-76     	; 0x2cfc <generate_Random+0x3a2>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2d48:	cd 54       	subi	r28, 0x4D	; 77
    2d4a:	de 4f       	sbci	r29, 0xFE	; 254
    2d4c:	18 82       	st	Y, r1
    2d4e:	c3 5b       	subi	r28, 0xB3	; 179
    2d50:	d1 40       	sbci	r29, 0x01	; 1
    2d52:	cd 54       	subi	r28, 0x4D	; 77
    2d54:	de 4f       	sbci	r29, 0xFE	; 254
    2d56:	88 81       	ld	r24, Y
    2d58:	c3 5b       	subi	r28, 0xB3	; 179
    2d5a:	d1 40       	sbci	r29, 0x01	; 1
    2d5c:	80 32       	cpi	r24, 0x20	; 32
    2d5e:	78 f5       	brcc	.+94     	; 0x2dbe <generate_Random+0x464>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    2d60:	cd 54       	subi	r28, 0x4D	; 77
    2d62:	de 4f       	sbci	r29, 0xFE	; 254
    2d64:	98 81       	ld	r25, Y
    2d66:	c3 5b       	subi	r28, 0xB3	; 179
    2d68:	d1 40       	sbci	r29, 0x01	; 1
    2d6a:	cd 54       	subi	r28, 0x4D	; 77
    2d6c:	de 4f       	sbci	r29, 0xFE	; 254
    2d6e:	88 81       	ld	r24, Y
    2d70:	c3 5b       	subi	r28, 0xB3	; 179
    2d72:	d1 40       	sbci	r29, 0x01	; 1
    2d74:	cd 54       	subi	r28, 0x4D	; 77
    2d76:	de 4f       	sbci	r29, 0xFE	; 254
    2d78:	28 81       	ld	r18, Y
    2d7a:	c3 5b       	subi	r28, 0xB3	; 179
    2d7c:	d1 40       	sbci	r29, 0x01	; 1
    2d7e:	b4 01       	movw	r22, r8
    2d80:	69 0f       	add	r22, r25
    2d82:	71 1d       	adc	r23, r1
    2d84:	f6 01       	movw	r30, r12
    2d86:	e8 0f       	add	r30, r24
    2d88:	f1 1d       	adc	r31, r1
    2d8a:	d3 01       	movw	r26, r6
    2d8c:	a2 0f       	add	r26, r18
    2d8e:	b1 1d       	adc	r27, r1
    2d90:	90 81       	ld	r25, Z
    2d92:	8c 91       	ld	r24, X
    2d94:	89 27       	eor	r24, r25
    2d96:	db 01       	movw	r26, r22
    2d98:	8c 93       	st	X, r24
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2d9a:	cd 54       	subi	r28, 0x4D	; 77
    2d9c:	de 4f       	sbci	r29, 0xFE	; 254
    2d9e:	88 81       	ld	r24, Y
    2da0:	c3 5b       	subi	r28, 0xB3	; 179
    2da2:	d1 40       	sbci	r29, 0x01	; 1
    2da4:	8f 5f       	subi	r24, 0xFF	; 255
    2da6:	cd 54       	subi	r28, 0x4D	; 77
    2da8:	de 4f       	sbci	r29, 0xFE	; 254
    2daa:	88 83       	st	Y, r24
    2dac:	c3 5b       	subi	r28, 0xB3	; 179
    2dae:	d1 40       	sbci	r29, 0x01	; 1
    2db0:	cd 54       	subi	r28, 0x4D	; 77
    2db2:	de 4f       	sbci	r29, 0xFE	; 254
    2db4:	88 81       	ld	r24, Y
    2db6:	c3 5b       	subi	r28, 0xB3	; 179
    2db8:	d1 40       	sbci	r29, 0x01	; 1
    2dba:	80 32       	cpi	r24, 0x20	; 32
    2dbc:	88 f2       	brcs	.-94     	; 0x2d60 <generate_Random+0x406>
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i< LEN_SEED - (KEY_BIT / 8); cnt_i++)
    2dbe:	cd 54       	subi	r28, 0x4D	; 77
    2dc0:	de 4f       	sbci	r29, 0xFE	; 254
    2dc2:	18 82       	st	Y, r1
    2dc4:	c3 5b       	subi	r28, 0xB3	; 179
    2dc6:	d1 40       	sbci	r29, 0x01	; 1
    2dc8:	cd 54       	subi	r28, 0x4D	; 77
    2dca:	de 4f       	sbci	r29, 0xFE	; 254
    2dcc:	88 81       	ld	r24, Y
    2dce:	c3 5b       	subi	r28, 0xB3	; 179
    2dd0:	d1 40       	sbci	r29, 0x01	; 1
		{
			state->V[cnt_i] = temp[16 + cnt_i] ^ seed[16 + cnt_i];
		}
	}
	state->Reseed_counter++;
    2dd2:	f4 01       	movw	r30, r8
    2dd4:	80 a9       	ldd	r24, Z+48	; 0x30
    2dd6:	8f 5f       	subi	r24, 0xFF	; 255
    2dd8:	80 ab       	std	Z+48, r24	; 0x30
}
    2dda:	c7 54       	subi	r28, 0x47	; 71
    2ddc:	de 4f       	sbci	r29, 0xFE	; 254
    2dde:	0f b6       	in	r0, 0x3f	; 63
    2de0:	f8 94       	cli
    2de2:	de bf       	out	0x3e, r29	; 62
    2de4:	0f be       	out	0x3f, r0	; 63
    2de6:	cd bf       	out	0x3d, r28	; 61
    2de8:	df 91       	pop	r29
    2dea:	cf 91       	pop	r28
    2dec:	1f 91       	pop	r17
    2dee:	0f 91       	pop	r16
    2df0:	ff 90       	pop	r15
    2df2:	ef 90       	pop	r14
    2df4:	df 90       	pop	r13
    2df6:	cf 90       	pop	r12
    2df8:	bf 90       	pop	r11
    2dfa:	af 90       	pop	r10
    2dfc:	9f 90       	pop	r9
    2dfe:	8f 90       	pop	r8
    2e00:	7f 90       	pop	r7
    2e02:	6f 90       	pop	r6
    2e04:	5f 90       	pop	r5
    2e06:	4f 90       	pop	r4
    2e08:	3f 90       	pop	r3
    2e0a:	2f 90       	pop	r2
    2e0c:	08 95       	ret
	}

	else
	{
		//derived_function(a_data, seed, &(LEN->add_data_len));
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2e0e:	cd 54       	subi	r28, 0x4D	; 77
    2e10:	de 4f       	sbci	r29, 0xFE	; 254
    2e12:	18 82       	st	Y, r1
    2e14:	c3 5b       	subi	r28, 0xB3	; 179
    2e16:	d1 40       	sbci	r29, 0x01	; 1
    2e18:	cd 54       	subi	r28, 0x4D	; 77
    2e1a:	de 4f       	sbci	r29, 0xFE	; 254
    2e1c:	88 81       	ld	r24, Y
    2e1e:	c3 5b       	subi	r28, 0xB3	; 179
    2e20:	d1 40       	sbci	r29, 0x01	; 1
    2e22:	83 30       	cpi	r24, 0x03	; 3
    2e24:	08 f0       	brcs	.+2      	; 0x2e28 <generate_Random+0x4ce>
    2e26:	57 c0       	rjmp	.+174    	; 0x2ed6 <generate_Random+0x57c>
		{
			state->V[15]++;
    2e28:	f4 01       	movw	r30, r8
    2e2a:	87 a5       	ldd	r24, Z+47	; 0x2f
    2e2c:	8f 5f       	subi	r24, 0xFF	; 255
    2e2e:	87 a7       	std	Z+47, r24	; 0x2f
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    2e30:	be 01       	movw	r22, r28
    2e32:	6f 5f       	subi	r22, 0xFF	; 255
    2e34:	7f 4f       	sbci	r23, 0xFF	; 255
    2e36:	c8 01       	movw	r24, r16
    2e38:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2e3c:	ce 54       	subi	r28, 0x4E	; 78
    2e3e:	de 4f       	sbci	r29, 0xFE	; 254
    2e40:	18 82       	st	Y, r1
    2e42:	c2 5b       	subi	r28, 0xB2	; 178
    2e44:	d1 40       	sbci	r29, 0x01	; 1
    2e46:	ce 54       	subi	r28, 0x4E	; 78
    2e48:	de 4f       	sbci	r29, 0xFE	; 254
    2e4a:	88 81       	ld	r24, Y
    2e4c:	c2 5b       	subi	r28, 0xB2	; 178
    2e4e:	d1 40       	sbci	r29, 0x01	; 1
    2e50:	80 31       	cpi	r24, 0x10	; 16
    2e52:	70 f5       	brcc	.+92     	; 0x2eb0 <generate_Random+0x556>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    2e54:	cd 54       	subi	r28, 0x4D	; 77
    2e56:	de 4f       	sbci	r29, 0xFE	; 254
    2e58:	28 81       	ld	r18, Y
    2e5a:	c3 5b       	subi	r28, 0xB3	; 179
    2e5c:	d1 40       	sbci	r29, 0x01	; 1
    2e5e:	ce 54       	subi	r28, 0x4E	; 78
    2e60:	de 4f       	sbci	r29, 0xFE	; 254
    2e62:	98 81       	ld	r25, Y
    2e64:	c2 5b       	subi	r28, 0xB2	; 178
    2e66:	d1 40       	sbci	r29, 0x01	; 1
    2e68:	ce 54       	subi	r28, 0x4E	; 78
    2e6a:	de 4f       	sbci	r29, 0xFE	; 254
    2e6c:	88 81       	ld	r24, Y
    2e6e:	c2 5b       	subi	r28, 0xB2	; 178
    2e70:	d1 40       	sbci	r29, 0x01	; 1
    2e72:	f5 01       	movw	r30, r10
    2e74:	30 e1       	ldi	r19, 0x10	; 16
    2e76:	23 9f       	mul	r18, r19
    2e78:	e0 0d       	add	r30, r0
    2e7a:	f1 1d       	adc	r31, r1
    2e7c:	11 24       	eor	r1, r1
    2e7e:	e9 0f       	add	r30, r25
    2e80:	f1 1d       	adc	r31, r1
    2e82:	d8 01       	movw	r26, r16
    2e84:	a8 0f       	add	r26, r24
    2e86:	b1 1d       	adc	r27, r1
    2e88:	8c 91       	ld	r24, X
    2e8a:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2e8c:	ce 54       	subi	r28, 0x4E	; 78
    2e8e:	de 4f       	sbci	r29, 0xFE	; 254
    2e90:	88 81       	ld	r24, Y
    2e92:	c2 5b       	subi	r28, 0xB2	; 178
    2e94:	d1 40       	sbci	r29, 0x01	; 1
    2e96:	8f 5f       	subi	r24, 0xFF	; 255
    2e98:	ce 54       	subi	r28, 0x4E	; 78
    2e9a:	de 4f       	sbci	r29, 0xFE	; 254
    2e9c:	88 83       	st	Y, r24
    2e9e:	c2 5b       	subi	r28, 0xB2	; 178
    2ea0:	d1 40       	sbci	r29, 0x01	; 1
    2ea2:	ce 54       	subi	r28, 0x4E	; 78
    2ea4:	de 4f       	sbci	r29, 0xFE	; 254
    2ea6:	88 81       	ld	r24, Y
    2ea8:	c2 5b       	subi	r28, 0xB2	; 178
    2eaa:	d1 40       	sbci	r29, 0x01	; 1
    2eac:	80 31       	cpi	r24, 0x10	; 16
    2eae:	90 f2       	brcs	.-92     	; 0x2e54 <generate_Random+0x4fa>
	}

	else
	{
		//derived_function(a_data, seed, &(LEN->add_data_len));
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2eb0:	cd 54       	subi	r28, 0x4D	; 77
    2eb2:	de 4f       	sbci	r29, 0xFE	; 254
    2eb4:	88 81       	ld	r24, Y
    2eb6:	c3 5b       	subi	r28, 0xB3	; 179
    2eb8:	d1 40       	sbci	r29, 0x01	; 1
    2eba:	8f 5f       	subi	r24, 0xFF	; 255
    2ebc:	cd 54       	subi	r28, 0x4D	; 77
    2ebe:	de 4f       	sbci	r29, 0xFE	; 254
    2ec0:	88 83       	st	Y, r24
    2ec2:	c3 5b       	subi	r28, 0xB3	; 179
    2ec4:	d1 40       	sbci	r29, 0x01	; 1
    2ec6:	cd 54       	subi	r28, 0x4D	; 77
    2ec8:	de 4f       	sbci	r29, 0xFE	; 254
    2eca:	88 81       	ld	r24, Y
    2ecc:	c3 5b       	subi	r28, 0xB3	; 179
    2ece:	d1 40       	sbci	r29, 0x01	; 1
    2ed0:	83 30       	cpi	r24, 0x03	; 3
    2ed2:	08 f4       	brcc	.+2      	; 0x2ed6 <generate_Random+0x57c>
    2ed4:	a9 cf       	rjmp	.-174    	; 0x2e28 <generate_Random+0x4ce>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}

		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2ed6:	cd 54       	subi	r28, 0x4D	; 77
    2ed8:	de 4f       	sbci	r29, 0xFE	; 254
    2eda:	18 82       	st	Y, r1
    2edc:	c3 5b       	subi	r28, 0xB3	; 179
    2ede:	d1 40       	sbci	r29, 0x01	; 1
    2ee0:	cd 54       	subi	r28, 0x4D	; 77
    2ee2:	de 4f       	sbci	r29, 0xFE	; 254
    2ee4:	88 81       	ld	r24, Y
    2ee6:	c3 5b       	subi	r28, 0xB3	; 179
    2ee8:	d1 40       	sbci	r29, 0x01	; 1
    2eea:	83 30       	cpi	r24, 0x03	; 3
    2eec:	08 f0       	brcs	.+2      	; 0x2ef0 <generate_Random+0x596>
    2eee:	5a c0       	rjmp	.+180    	; 0x2fa4 <generate_Random+0x64a>
		{
			state->V[15]++;
    2ef0:	d4 01       	movw	r26, r8
    2ef2:	9f 96       	adiw	r26, 0x2f	; 47
    2ef4:	8c 91       	ld	r24, X
    2ef6:	9f 97       	sbiw	r26, 0x2f	; 47
    2ef8:	8f 5f       	subi	r24, 0xFF	; 255
    2efa:	9f 96       	adiw	r26, 0x2f	; 47
    2efc:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    2efe:	be 01       	movw	r22, r28
    2f00:	6f 5f       	subi	r22, 0xFF	; 255
    2f02:	7f 4f       	sbci	r23, 0xFF	; 255
    2f04:	c8 01       	movw	r24, r16
    2f06:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2f0a:	ce 54       	subi	r28, 0x4E	; 78
    2f0c:	de 4f       	sbci	r29, 0xFE	; 254
    2f0e:	18 82       	st	Y, r1
    2f10:	c2 5b       	subi	r28, 0xB2	; 178
    2f12:	d1 40       	sbci	r29, 0x01	; 1
    2f14:	ce 54       	subi	r28, 0x4E	; 78
    2f16:	de 4f       	sbci	r29, 0xFE	; 254
    2f18:	88 81       	ld	r24, Y
    2f1a:	c2 5b       	subi	r28, 0xB2	; 178
    2f1c:	d1 40       	sbci	r29, 0x01	; 1
    2f1e:	80 31       	cpi	r24, 0x10	; 16
    2f20:	70 f5       	brcc	.+92     	; 0x2f7e <generate_Random+0x624>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    2f22:	cd 54       	subi	r28, 0x4D	; 77
    2f24:	de 4f       	sbci	r29, 0xFE	; 254
    2f26:	28 81       	ld	r18, Y
    2f28:	c3 5b       	subi	r28, 0xB3	; 179
    2f2a:	d1 40       	sbci	r29, 0x01	; 1
    2f2c:	ce 54       	subi	r28, 0x4E	; 78
    2f2e:	de 4f       	sbci	r29, 0xFE	; 254
    2f30:	98 81       	ld	r25, Y
    2f32:	c2 5b       	subi	r28, 0xB2	; 178
    2f34:	d1 40       	sbci	r29, 0x01	; 1
    2f36:	ce 54       	subi	r28, 0x4E	; 78
    2f38:	de 4f       	sbci	r29, 0xFE	; 254
    2f3a:	88 81       	ld	r24, Y
    2f3c:	c2 5b       	subi	r28, 0xB2	; 178
    2f3e:	d1 40       	sbci	r29, 0x01	; 1
    2f40:	f6 01       	movw	r30, r12
    2f42:	b0 e1       	ldi	r27, 0x10	; 16
    2f44:	2b 9f       	mul	r18, r27
    2f46:	e0 0d       	add	r30, r0
    2f48:	f1 1d       	adc	r31, r1
    2f4a:	11 24       	eor	r1, r1
    2f4c:	e9 0f       	add	r30, r25
    2f4e:	f1 1d       	adc	r31, r1
    2f50:	d8 01       	movw	r26, r16
    2f52:	a8 0f       	add	r26, r24
    2f54:	b1 1d       	adc	r27, r1
    2f56:	8c 91       	ld	r24, X
    2f58:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2f5a:	ce 54       	subi	r28, 0x4E	; 78
    2f5c:	de 4f       	sbci	r29, 0xFE	; 254
    2f5e:	88 81       	ld	r24, Y
    2f60:	c2 5b       	subi	r28, 0xB2	; 178
    2f62:	d1 40       	sbci	r29, 0x01	; 1
    2f64:	8f 5f       	subi	r24, 0xFF	; 255
    2f66:	ce 54       	subi	r28, 0x4E	; 78
    2f68:	de 4f       	sbci	r29, 0xFE	; 254
    2f6a:	88 83       	st	Y, r24
    2f6c:	c2 5b       	subi	r28, 0xB2	; 178
    2f6e:	d1 40       	sbci	r29, 0x01	; 1
    2f70:	ce 54       	subi	r28, 0x4E	; 78
    2f72:	de 4f       	sbci	r29, 0xFE	; 254
    2f74:	88 81       	ld	r24, Y
    2f76:	c2 5b       	subi	r28, 0xB2	; 178
    2f78:	d1 40       	sbci	r29, 0x01	; 1
    2f7a:	80 31       	cpi	r24, 0x10	; 16
    2f7c:	90 f2       	brcs	.-92     	; 0x2f22 <generate_Random+0x5c8>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}

		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2f7e:	cd 54       	subi	r28, 0x4D	; 77
    2f80:	de 4f       	sbci	r29, 0xFE	; 254
    2f82:	88 81       	ld	r24, Y
    2f84:	c3 5b       	subi	r28, 0xB3	; 179
    2f86:	d1 40       	sbci	r29, 0x01	; 1
    2f88:	8f 5f       	subi	r24, 0xFF	; 255
    2f8a:	cd 54       	subi	r28, 0x4D	; 77
    2f8c:	de 4f       	sbci	r29, 0xFE	; 254
    2f8e:	88 83       	st	Y, r24
    2f90:	c3 5b       	subi	r28, 0xB3	; 179
    2f92:	d1 40       	sbci	r29, 0x01	; 1
    2f94:	cd 54       	subi	r28, 0x4D	; 77
    2f96:	de 4f       	sbci	r29, 0xFE	; 254
    2f98:	88 81       	ld	r24, Y
    2f9a:	c3 5b       	subi	r28, 0xB3	; 179
    2f9c:	d1 40       	sbci	r29, 0x01	; 1
    2f9e:	83 30       	cpi	r24, 0x03	; 3
    2fa0:	08 f4       	brcc	.+2      	; 0x2fa4 <generate_Random+0x64a>
    2fa2:	a6 cf       	rjmp	.-180    	; 0x2ef0 <generate_Random+0x596>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2fa4:	cd 54       	subi	r28, 0x4D	; 77
    2fa6:	de 4f       	sbci	r29, 0xFE	; 254
    2fa8:	18 82       	st	Y, r1
    2faa:	c3 5b       	subi	r28, 0xB3	; 179
    2fac:	d1 40       	sbci	r29, 0x01	; 1
    2fae:	cd 54       	subi	r28, 0x4D	; 77
    2fb0:	de 4f       	sbci	r29, 0xFE	; 254
    2fb2:	88 81       	ld	r24, Y
    2fb4:	c3 5b       	subi	r28, 0xB3	; 179
    2fb6:	d1 40       	sbci	r29, 0x01	; 1
    2fb8:	83 30       	cpi	r24, 0x03	; 3
    2fba:	30 f5       	brcc	.+76     	; 0x3008 <generate_Random+0x6ae>
		{
			temp[cnt_i] ^= seed[cnt_i];
    2fbc:	cd 54       	subi	r28, 0x4D	; 77
    2fbe:	de 4f       	sbci	r29, 0xFE	; 254
    2fc0:	88 81       	ld	r24, Y
    2fc2:	c3 5b       	subi	r28, 0xB3	; 179
    2fc4:	d1 40       	sbci	r29, 0x01	; 1
    2fc6:	cd 54       	subi	r28, 0x4D	; 77
    2fc8:	de 4f       	sbci	r29, 0xFE	; 254
    2fca:	98 81       	ld	r25, Y
    2fcc:	c3 5b       	subi	r28, 0xB3	; 179
    2fce:	d1 40       	sbci	r29, 0x01	; 1
    2fd0:	f6 01       	movw	r30, r12
    2fd2:	e9 0f       	add	r30, r25
    2fd4:	f1 1d       	adc	r31, r1
    2fd6:	d3 01       	movw	r26, r6
    2fd8:	a8 0f       	add	r26, r24
    2fda:	b1 1d       	adc	r27, r1
    2fdc:	9c 91       	ld	r25, X
    2fde:	80 81       	ld	r24, Z
    2fe0:	89 27       	eor	r24, r25
    2fe2:	80 83       	st	Z, r24
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2fe4:	cd 54       	subi	r28, 0x4D	; 77
    2fe6:	de 4f       	sbci	r29, 0xFE	; 254
    2fe8:	88 81       	ld	r24, Y
    2fea:	c3 5b       	subi	r28, 0xB3	; 179
    2fec:	d1 40       	sbci	r29, 0x01	; 1
    2fee:	8f 5f       	subi	r24, 0xFF	; 255
    2ff0:	cd 54       	subi	r28, 0x4D	; 77
    2ff2:	de 4f       	sbci	r29, 0xFE	; 254
    2ff4:	88 83       	st	Y, r24
    2ff6:	c3 5b       	subi	r28, 0xB3	; 179
    2ff8:	d1 40       	sbci	r29, 0x01	; 1
    2ffa:	cd 54       	subi	r28, 0x4D	; 77
    2ffc:	de 4f       	sbci	r29, 0xFE	; 254
    2ffe:	88 81       	ld	r24, Y
    3000:	c3 5b       	subi	r28, 0xB3	; 179
    3002:	d1 40       	sbci	r29, 0x01	; 1
    3004:	83 30       	cpi	r24, 0x03	; 3
    3006:	d0 f2       	brcs	.-76     	; 0x2fbc <generate_Random+0x662>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    3008:	cd 54       	subi	r28, 0x4D	; 77
    300a:	de 4f       	sbci	r29, 0xFE	; 254
    300c:	18 82       	st	Y, r1
    300e:	c3 5b       	subi	r28, 0xB3	; 179
    3010:	d1 40       	sbci	r29, 0x01	; 1
    3012:	cd 54       	subi	r28, 0x4D	; 77
    3014:	de 4f       	sbci	r29, 0xFE	; 254
    3016:	88 81       	ld	r24, Y
    3018:	c3 5b       	subi	r28, 0xB3	; 179
    301a:	d1 40       	sbci	r29, 0x01	; 1
    301c:	80 32       	cpi	r24, 0x20	; 32
    301e:	08 f0       	brcs	.+2      	; 0x3022 <generate_Random+0x6c8>
    3020:	ce ce       	rjmp	.-612    	; 0x2dbe <generate_Random+0x464>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    3022:	cd 54       	subi	r28, 0x4D	; 77
    3024:	de 4f       	sbci	r29, 0xFE	; 254
    3026:	98 81       	ld	r25, Y
    3028:	c3 5b       	subi	r28, 0xB3	; 179
    302a:	d1 40       	sbci	r29, 0x01	; 1
    302c:	cd 54       	subi	r28, 0x4D	; 77
    302e:	de 4f       	sbci	r29, 0xFE	; 254
    3030:	88 81       	ld	r24, Y
    3032:	c3 5b       	subi	r28, 0xB3	; 179
    3034:	d1 40       	sbci	r29, 0x01	; 1
    3036:	cd 54       	subi	r28, 0x4D	; 77
    3038:	de 4f       	sbci	r29, 0xFE	; 254
    303a:	28 81       	ld	r18, Y
    303c:	c3 5b       	subi	r28, 0xB3	; 179
    303e:	d1 40       	sbci	r29, 0x01	; 1
    3040:	b4 01       	movw	r22, r8
    3042:	69 0f       	add	r22, r25
    3044:	71 1d       	adc	r23, r1
    3046:	f6 01       	movw	r30, r12
    3048:	e8 0f       	add	r30, r24
    304a:	f1 1d       	adc	r31, r1
    304c:	d3 01       	movw	r26, r6
    304e:	a2 0f       	add	r26, r18
    3050:	b1 1d       	adc	r27, r1
    3052:	90 81       	ld	r25, Z
    3054:	8c 91       	ld	r24, X
    3056:	89 27       	eor	r24, r25
    3058:	db 01       	movw	r26, r22
    305a:	8c 93       	st	X, r24
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    305c:	cd 54       	subi	r28, 0x4D	; 77
    305e:	de 4f       	sbci	r29, 0xFE	; 254
    3060:	88 81       	ld	r24, Y
    3062:	c3 5b       	subi	r28, 0xB3	; 179
    3064:	d1 40       	sbci	r29, 0x01	; 1
    3066:	8f 5f       	subi	r24, 0xFF	; 255
    3068:	cd 54       	subi	r28, 0x4D	; 77
    306a:	de 4f       	sbci	r29, 0xFE	; 254
    306c:	88 83       	st	Y, r24
    306e:	c3 5b       	subi	r28, 0xB3	; 179
    3070:	d1 40       	sbci	r29, 0x01	; 1
    3072:	cd 54       	subi	r28, 0x4D	; 77
    3074:	de 4f       	sbci	r29, 0xFE	; 254
    3076:	88 81       	ld	r24, Y
    3078:	c3 5b       	subi	r28, 0xB3	; 179
    307a:	d1 40       	sbci	r29, 0x01	; 1
    307c:	80 32       	cpi	r24, 0x20	; 32
    307e:	88 f2       	brcs	.-94     	; 0x3022 <generate_Random+0x6c8>
    3080:	9e ce       	rjmp	.-708    	; 0x2dbe <generate_Random+0x464>
	aes256_init(key, &aes_test);
#endif

	if (state->prediction_flag == TRUE)
	{
		Reseed_Function(state, re_Entrophy, re_add_data, LEN);
    3082:	97 01       	movw	r18, r14
    3084:	ca 54       	subi	r28, 0x4A	; 74
    3086:	de 4f       	sbci	r29, 0xFE	; 254
    3088:	48 81       	ld	r20, Y
    308a:	59 81       	ldd	r21, Y+1	; 0x01
    308c:	c6 5b       	subi	r28, 0xB6	; 182
    308e:	d1 40       	sbci	r29, 0x01	; 1
    3090:	cc 54       	subi	r28, 0x4C	; 76
    3092:	de 4f       	sbci	r29, 0xFE	; 254
    3094:	68 81       	ld	r22, Y
    3096:	79 81       	ldd	r23, Y+1	; 0x01
    3098:	c4 5b       	subi	r28, 0xB4	; 180
    309a:	d1 40       	sbci	r29, 0x01	; 1
    309c:	c4 01       	movw	r24, r8
    309e:	e9 db       	rcall	.-2094   	; 0x2872 <Reseed_Function>
		add_data = NULL;
		derived_function(a_data, seed, &(LEN->general_len));
    30a0:	a7 01       	movw	r20, r14
    30a2:	4c 5f       	subi	r20, 0xFC	; 252
    30a4:	5f 4f       	sbci	r21, 0xFF	; 255
    30a6:	b3 01       	movw	r22, r6
    30a8:	c1 01       	movw	r24, r2
    30aa:	2a d8       	rcall	.-4012   	; 0x2100 <derived_function>
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    30ac:	cd 54       	subi	r28, 0x4D	; 77
    30ae:	de 4f       	sbci	r29, 0xFE	; 254
    30b0:	18 82       	st	Y, r1
    30b2:	c3 5b       	subi	r28, 0xB3	; 179
    30b4:	d1 40       	sbci	r29, 0x01	; 1
    30b6:	cd 54       	subi	r28, 0x4D	; 77
    30b8:	de 4f       	sbci	r29, 0xFE	; 254
    30ba:	88 81       	ld	r24, Y
    30bc:	c3 5b       	subi	r28, 0xB3	; 179
    30be:	d1 40       	sbci	r29, 0x01	; 1
    30c0:	83 30       	cpi	r24, 0x03	; 3
    30c2:	08 f0       	brcs	.+2      	; 0x30c6 <generate_Random+0x76c>
    30c4:	57 c0       	rjmp	.+174    	; 0x3174 <generate_Random+0x81a>
		{
			state->V[15]++;
    30c6:	f4 01       	movw	r30, r8
    30c8:	87 a5       	ldd	r24, Z+47	; 0x2f
    30ca:	8f 5f       	subi	r24, 0xFF	; 255
    30cc:	87 a7       	std	Z+47, r24	; 0x2f
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    30ce:	be 01       	movw	r22, r28
    30d0:	6f 5f       	subi	r22, 0xFF	; 255
    30d2:	7f 4f       	sbci	r23, 0xFF	; 255
    30d4:	c8 01       	movw	r24, r16
    30d6:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    30da:	ce 54       	subi	r28, 0x4E	; 78
    30dc:	de 4f       	sbci	r29, 0xFE	; 254
    30de:	18 82       	st	Y, r1
    30e0:	c2 5b       	subi	r28, 0xB2	; 178
    30e2:	d1 40       	sbci	r29, 0x01	; 1
    30e4:	ce 54       	subi	r28, 0x4E	; 78
    30e6:	de 4f       	sbci	r29, 0xFE	; 254
    30e8:	88 81       	ld	r24, Y
    30ea:	c2 5b       	subi	r28, 0xB2	; 178
    30ec:	d1 40       	sbci	r29, 0x01	; 1
    30ee:	80 31       	cpi	r24, 0x10	; 16
    30f0:	70 f5       	brcc	.+92     	; 0x314e <generate_Random+0x7f4>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    30f2:	cd 54       	subi	r28, 0x4D	; 77
    30f4:	de 4f       	sbci	r29, 0xFE	; 254
    30f6:	28 81       	ld	r18, Y
    30f8:	c3 5b       	subi	r28, 0xB3	; 179
    30fa:	d1 40       	sbci	r29, 0x01	; 1
    30fc:	ce 54       	subi	r28, 0x4E	; 78
    30fe:	de 4f       	sbci	r29, 0xFE	; 254
    3100:	98 81       	ld	r25, Y
    3102:	c2 5b       	subi	r28, 0xB2	; 178
    3104:	d1 40       	sbci	r29, 0x01	; 1
    3106:	ce 54       	subi	r28, 0x4E	; 78
    3108:	de 4f       	sbci	r29, 0xFE	; 254
    310a:	88 81       	ld	r24, Y
    310c:	c2 5b       	subi	r28, 0xB2	; 178
    310e:	d1 40       	sbci	r29, 0x01	; 1
    3110:	f5 01       	movw	r30, r10
    3112:	30 e1       	ldi	r19, 0x10	; 16
    3114:	23 9f       	mul	r18, r19
    3116:	e0 0d       	add	r30, r0
    3118:	f1 1d       	adc	r31, r1
    311a:	11 24       	eor	r1, r1
    311c:	e9 0f       	add	r30, r25
    311e:	f1 1d       	adc	r31, r1
    3120:	d8 01       	movw	r26, r16
    3122:	a8 0f       	add	r26, r24
    3124:	b1 1d       	adc	r27, r1
    3126:	8c 91       	ld	r24, X
    3128:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    312a:	ce 54       	subi	r28, 0x4E	; 78
    312c:	de 4f       	sbci	r29, 0xFE	; 254
    312e:	88 81       	ld	r24, Y
    3130:	c2 5b       	subi	r28, 0xB2	; 178
    3132:	d1 40       	sbci	r29, 0x01	; 1
    3134:	8f 5f       	subi	r24, 0xFF	; 255
    3136:	ce 54       	subi	r28, 0x4E	; 78
    3138:	de 4f       	sbci	r29, 0xFE	; 254
    313a:	88 83       	st	Y, r24
    313c:	c2 5b       	subi	r28, 0xB2	; 178
    313e:	d1 40       	sbci	r29, 0x01	; 1
    3140:	ce 54       	subi	r28, 0x4E	; 78
    3142:	de 4f       	sbci	r29, 0xFE	; 254
    3144:	88 81       	ld	r24, Y
    3146:	c2 5b       	subi	r28, 0xB2	; 178
    3148:	d1 40       	sbci	r29, 0x01	; 1
    314a:	80 31       	cpi	r24, 0x10	; 16
    314c:	90 f2       	brcs	.-92     	; 0x30f2 <generate_Random+0x798>
	if (state->prediction_flag == TRUE)
	{
		Reseed_Function(state, re_Entrophy, re_add_data, LEN);
		add_data = NULL;
		derived_function(a_data, seed, &(LEN->general_len));
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    314e:	cd 54       	subi	r28, 0x4D	; 77
    3150:	de 4f       	sbci	r29, 0xFE	; 254
    3152:	88 81       	ld	r24, Y
    3154:	c3 5b       	subi	r28, 0xB3	; 179
    3156:	d1 40       	sbci	r29, 0x01	; 1
    3158:	8f 5f       	subi	r24, 0xFF	; 255
    315a:	cd 54       	subi	r28, 0x4D	; 77
    315c:	de 4f       	sbci	r29, 0xFE	; 254
    315e:	88 83       	st	Y, r24
    3160:	c3 5b       	subi	r28, 0xB3	; 179
    3162:	d1 40       	sbci	r29, 0x01	; 1
    3164:	cd 54       	subi	r28, 0x4D	; 77
    3166:	de 4f       	sbci	r29, 0xFE	; 254
    3168:	88 81       	ld	r24, Y
    316a:	c3 5b       	subi	r28, 0xB3	; 179
    316c:	d1 40       	sbci	r29, 0x01	; 1
    316e:	83 30       	cpi	r24, 0x03	; 3
    3170:	08 f4       	brcc	.+2      	; 0x3174 <generate_Random+0x81a>
    3172:	a9 cf       	rjmp	.-174    	; 0x30c6 <generate_Random+0x76c>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3174:	cd 54       	subi	r28, 0x4D	; 77
    3176:	de 4f       	sbci	r29, 0xFE	; 254
    3178:	18 82       	st	Y, r1
    317a:	c3 5b       	subi	r28, 0xB3	; 179
    317c:	d1 40       	sbci	r29, 0x01	; 1
    317e:	cd 54       	subi	r28, 0x4D	; 77
    3180:	de 4f       	sbci	r29, 0xFE	; 254
    3182:	88 81       	ld	r24, Y
    3184:	c3 5b       	subi	r28, 0xB3	; 179
    3186:	d1 40       	sbci	r29, 0x01	; 1
    3188:	83 30       	cpi	r24, 0x03	; 3
    318a:	08 f0       	brcs	.+2      	; 0x318e <generate_Random+0x834>
    318c:	5a c0       	rjmp	.+180    	; 0x3242 <generate_Random+0x8e8>
		{
			state->V[15]++;
    318e:	d4 01       	movw	r26, r8
    3190:	9f 96       	adiw	r26, 0x2f	; 47
    3192:	8c 91       	ld	r24, X
    3194:	9f 97       	sbiw	r26, 0x2f	; 47
    3196:	8f 5f       	subi	r24, 0xFF	; 255
    3198:	9f 96       	adiw	r26, 0x2f	; 47
    319a:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
    319c:	be 01       	movw	r22, r28
    319e:	6f 5f       	subi	r22, 0xFF	; 255
    31a0:	7f 4f       	sbci	r23, 0xFF	; 255
    31a2:	c8 01       	movw	r24, r16
    31a4:	0e 94 52 00 	call	0xa4	; 0xa4 <aes256_enc_CBC_asm>
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    31a8:	ce 54       	subi	r28, 0x4E	; 78
    31aa:	de 4f       	sbci	r29, 0xFE	; 254
    31ac:	18 82       	st	Y, r1
    31ae:	c2 5b       	subi	r28, 0xB2	; 178
    31b0:	d1 40       	sbci	r29, 0x01	; 1
    31b2:	ce 54       	subi	r28, 0x4E	; 78
    31b4:	de 4f       	sbci	r29, 0xFE	; 254
    31b6:	88 81       	ld	r24, Y
    31b8:	c2 5b       	subi	r28, 0xB2	; 178
    31ba:	d1 40       	sbci	r29, 0x01	; 1
    31bc:	80 31       	cpi	r24, 0x10	; 16
    31be:	70 f5       	brcc	.+92     	; 0x321c <generate_Random+0x8c2>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    31c0:	cd 54       	subi	r28, 0x4D	; 77
    31c2:	de 4f       	sbci	r29, 0xFE	; 254
    31c4:	28 81       	ld	r18, Y
    31c6:	c3 5b       	subi	r28, 0xB3	; 179
    31c8:	d1 40       	sbci	r29, 0x01	; 1
    31ca:	ce 54       	subi	r28, 0x4E	; 78
    31cc:	de 4f       	sbci	r29, 0xFE	; 254
    31ce:	98 81       	ld	r25, Y
    31d0:	c2 5b       	subi	r28, 0xB2	; 178
    31d2:	d1 40       	sbci	r29, 0x01	; 1
    31d4:	ce 54       	subi	r28, 0x4E	; 78
    31d6:	de 4f       	sbci	r29, 0xFE	; 254
    31d8:	88 81       	ld	r24, Y
    31da:	c2 5b       	subi	r28, 0xB2	; 178
    31dc:	d1 40       	sbci	r29, 0x01	; 1
    31de:	f6 01       	movw	r30, r12
    31e0:	b0 e1       	ldi	r27, 0x10	; 16
    31e2:	2b 9f       	mul	r18, r27
    31e4:	e0 0d       	add	r30, r0
    31e6:	f1 1d       	adc	r31, r1
    31e8:	11 24       	eor	r1, r1
    31ea:	e9 0f       	add	r30, r25
    31ec:	f1 1d       	adc	r31, r1
    31ee:	d8 01       	movw	r26, r16
    31f0:	a8 0f       	add	r26, r24
    31f2:	b1 1d       	adc	r27, r1
    31f4:	8c 91       	ld	r24, X
    31f6:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    31f8:	ce 54       	subi	r28, 0x4E	; 78
    31fa:	de 4f       	sbci	r29, 0xFE	; 254
    31fc:	88 81       	ld	r24, Y
    31fe:	c2 5b       	subi	r28, 0xB2	; 178
    3200:	d1 40       	sbci	r29, 0x01	; 1
    3202:	8f 5f       	subi	r24, 0xFF	; 255
    3204:	ce 54       	subi	r28, 0x4E	; 78
    3206:	de 4f       	sbci	r29, 0xFE	; 254
    3208:	88 83       	st	Y, r24
    320a:	c2 5b       	subi	r28, 0xB2	; 178
    320c:	d1 40       	sbci	r29, 0x01	; 1
    320e:	ce 54       	subi	r28, 0x4E	; 78
    3210:	de 4f       	sbci	r29, 0xFE	; 254
    3212:	88 81       	ld	r24, Y
    3214:	c2 5b       	subi	r28, 0xB2	; 178
    3216:	d1 40       	sbci	r29, 0x01	; 1
    3218:	80 31       	cpi	r24, 0x10	; 16
    321a:	90 f2       	brcs	.-92     	; 0x31c0 <generate_Random+0x866>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    321c:	cd 54       	subi	r28, 0x4D	; 77
    321e:	de 4f       	sbci	r29, 0xFE	; 254
    3220:	88 81       	ld	r24, Y
    3222:	c3 5b       	subi	r28, 0xB3	; 179
    3224:	d1 40       	sbci	r29, 0x01	; 1
    3226:	8f 5f       	subi	r24, 0xFF	; 255
    3228:	cd 54       	subi	r28, 0x4D	; 77
    322a:	de 4f       	sbci	r29, 0xFE	; 254
    322c:	88 83       	st	Y, r24
    322e:	c3 5b       	subi	r28, 0xB3	; 179
    3230:	d1 40       	sbci	r29, 0x01	; 1
    3232:	cd 54       	subi	r28, 0x4D	; 77
    3234:	de 4f       	sbci	r29, 0xFE	; 254
    3236:	88 81       	ld	r24, Y
    3238:	c3 5b       	subi	r28, 0xB3	; 179
    323a:	d1 40       	sbci	r29, 0x01	; 1
    323c:	83 30       	cpi	r24, 0x03	; 3
    323e:	08 f4       	brcc	.+2      	; 0x3242 <generate_Random+0x8e8>
    3240:	a6 cf       	rjmp	.-180    	; 0x318e <generate_Random+0x834>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
    3242:	cd 54       	subi	r28, 0x4D	; 77
    3244:	de 4f       	sbci	r29, 0xFE	; 254
    3246:	18 82       	st	Y, r1
    3248:	c3 5b       	subi	r28, 0xB3	; 179
    324a:	d1 40       	sbci	r29, 0x01	; 1
    324c:	cd 54       	subi	r28, 0x4D	; 77
    324e:	de 4f       	sbci	r29, 0xFE	; 254
    3250:	88 81       	ld	r24, Y
    3252:	c3 5b       	subi	r28, 0xB3	; 179
    3254:	d1 40       	sbci	r29, 0x01	; 1
    3256:	80 33       	cpi	r24, 0x30	; 48
    3258:	30 f5       	brcc	.+76     	; 0x32a6 <generate_Random+0x94c>
		{
			temp[cnt_i] ^= seed[cnt_i];
    325a:	cd 54       	subi	r28, 0x4D	; 77
    325c:	de 4f       	sbci	r29, 0xFE	; 254
    325e:	88 81       	ld	r24, Y
    3260:	c3 5b       	subi	r28, 0xB3	; 179
    3262:	d1 40       	sbci	r29, 0x01	; 1
    3264:	cd 54       	subi	r28, 0x4D	; 77
    3266:	de 4f       	sbci	r29, 0xFE	; 254
    3268:	98 81       	ld	r25, Y
    326a:	c3 5b       	subi	r28, 0xB3	; 179
    326c:	d1 40       	sbci	r29, 0x01	; 1
    326e:	f6 01       	movw	r30, r12
    3270:	e9 0f       	add	r30, r25
    3272:	f1 1d       	adc	r31, r1
    3274:	d3 01       	movw	r26, r6
    3276:	a8 0f       	add	r26, r24
    3278:	b1 1d       	adc	r27, r1
    327a:	9c 91       	ld	r25, X
    327c:	80 81       	ld	r24, Z
    327e:	89 27       	eor	r24, r25
    3280:	80 83       	st	Z, r24
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
    3282:	cd 54       	subi	r28, 0x4D	; 77
    3284:	de 4f       	sbci	r29, 0xFE	; 254
    3286:	88 81       	ld	r24, Y
    3288:	c3 5b       	subi	r28, 0xB3	; 179
    328a:	d1 40       	sbci	r29, 0x01	; 1
    328c:	8f 5f       	subi	r24, 0xFF	; 255
    328e:	cd 54       	subi	r28, 0x4D	; 77
    3290:	de 4f       	sbci	r29, 0xFE	; 254
    3292:	88 83       	st	Y, r24
    3294:	c3 5b       	subi	r28, 0xB3	; 179
    3296:	d1 40       	sbci	r29, 0x01	; 1
    3298:	cd 54       	subi	r28, 0x4D	; 77
    329a:	de 4f       	sbci	r29, 0xFE	; 254
    329c:	88 81       	ld	r24, Y
    329e:	c3 5b       	subi	r28, 0xB3	; 179
    32a0:	d1 40       	sbci	r29, 0x01	; 1
    32a2:	80 33       	cpi	r24, 0x30	; 48
    32a4:	d0 f2       	brcs	.-76     	; 0x325a <generate_Random+0x900>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    32a6:	cd 54       	subi	r28, 0x4D	; 77
    32a8:	de 4f       	sbci	r29, 0xFE	; 254
    32aa:	18 82       	st	Y, r1
    32ac:	c3 5b       	subi	r28, 0xB3	; 179
    32ae:	d1 40       	sbci	r29, 0x01	; 1
    32b0:	cd 54       	subi	r28, 0x4D	; 77
    32b2:	de 4f       	sbci	r29, 0xFE	; 254
    32b4:	88 81       	ld	r24, Y
    32b6:	c3 5b       	subi	r28, 0xB3	; 179
    32b8:	d1 40       	sbci	r29, 0x01	; 1
    32ba:	80 32       	cpi	r24, 0x20	; 32
    32bc:	08 f0       	brcs	.+2      	; 0x32c0 <generate_Random+0x966>
    32be:	7f cd       	rjmp	.-1282   	; 0x2dbe <generate_Random+0x464>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    32c0:	cd 54       	subi	r28, 0x4D	; 77
    32c2:	de 4f       	sbci	r29, 0xFE	; 254
    32c4:	98 81       	ld	r25, Y
    32c6:	c3 5b       	subi	r28, 0xB3	; 179
    32c8:	d1 40       	sbci	r29, 0x01	; 1
    32ca:	cd 54       	subi	r28, 0x4D	; 77
    32cc:	de 4f       	sbci	r29, 0xFE	; 254
    32ce:	88 81       	ld	r24, Y
    32d0:	c3 5b       	subi	r28, 0xB3	; 179
    32d2:	d1 40       	sbci	r29, 0x01	; 1
    32d4:	cd 54       	subi	r28, 0x4D	; 77
    32d6:	de 4f       	sbci	r29, 0xFE	; 254
    32d8:	28 81       	ld	r18, Y
    32da:	c3 5b       	subi	r28, 0xB3	; 179
    32dc:	d1 40       	sbci	r29, 0x01	; 1
    32de:	b4 01       	movw	r22, r8
    32e0:	69 0f       	add	r22, r25
    32e2:	71 1d       	adc	r23, r1
    32e4:	f6 01       	movw	r30, r12
    32e6:	e8 0f       	add	r30, r24
    32e8:	f1 1d       	adc	r31, r1
    32ea:	d3 01       	movw	r26, r6
    32ec:	a2 0f       	add	r26, r18
    32ee:	b1 1d       	adc	r27, r1
    32f0:	90 81       	ld	r25, Z
    32f2:	8c 91       	ld	r24, X
    32f4:	89 27       	eor	r24, r25
    32f6:	db 01       	movw	r26, r22
    32f8:	8c 93       	st	X, r24
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    32fa:	cd 54       	subi	r28, 0x4D	; 77
    32fc:	de 4f       	sbci	r29, 0xFE	; 254
    32fe:	88 81       	ld	r24, Y
    3300:	c3 5b       	subi	r28, 0xB3	; 179
    3302:	d1 40       	sbci	r29, 0x01	; 1
    3304:	8f 5f       	subi	r24, 0xFF	; 255
    3306:	cd 54       	subi	r28, 0x4D	; 77
    3308:	de 4f       	sbci	r29, 0xFE	; 254
    330a:	88 83       	st	Y, r24
    330c:	c3 5b       	subi	r28, 0xB3	; 179
    330e:	d1 40       	sbci	r29, 0x01	; 1
    3310:	cd 54       	subi	r28, 0x4D	; 77
    3312:	de 4f       	sbci	r29, 0xFE	; 254
    3314:	88 81       	ld	r24, Y
    3316:	c3 5b       	subi	r28, 0xB3	; 179
    3318:	d1 40       	sbci	r29, 0x01	; 1
    331a:	80 32       	cpi	r24, 0x20	; 32
    331c:	88 f2       	brcs	.-94     	; 0x32c0 <generate_Random+0x966>
    331e:	4f cd       	rjmp	.-1378   	; 0x2dbe <generate_Random+0x464>

00003320 <CTR_DRBG>:
	update(state, seed);
	free(input_data);
}

void CTR_DRBG(st_state *in_state, st_len *len, u8 *in, u8 *seed, u8 *random, u8 *re_add_data, u8 *re_Entrophy, u8 *add_data)
{
    3320:	4f 92       	push	r4
    3322:	5f 92       	push	r5
    3324:	6f 92       	push	r6
    3326:	7f 92       	push	r7
    3328:	8f 92       	push	r8
    332a:	9f 92       	push	r9
    332c:	af 92       	push	r10
    332e:	bf 92       	push	r11
    3330:	cf 92       	push	r12
    3332:	df 92       	push	r13
    3334:	ef 92       	push	r14
    3336:	ff 92       	push	r15
    3338:	0f 93       	push	r16
    333a:	1f 93       	push	r17
    333c:	cf 93       	push	r28
    333e:	df 93       	push	r29
    3340:	ec 01       	movw	r28, r24
    3342:	4b 01       	movw	r8, r22
    3344:	ca 01       	movw	r24, r20
    3346:	39 01       	movw	r6, r18
    3348:	28 01       	movw	r4, r16
    334a:	87 01       	movw	r16, r14
	derived_function(in, seed, &len->input_len);
    334c:	ab 01       	movw	r20, r22
    334e:	4b 5f       	subi	r20, 0xFB	; 251
    3350:	5f 4f       	sbci	r21, 0xFF	; 255
    3352:	b9 01       	movw	r22, r18
    3354:	0e 94 80 10 	call	0x2100	; 0x2100 <derived_function>
	update(in_state, seed);
    3358:	b3 01       	movw	r22, r6
    335a:	ce 01       	movw	r24, r28
    335c:	63 d9       	rcall	.-3386   	; 0x2624 <update>
	generate_Random(in_state, random, add_data, re_Entrophy, re_add_data, len);
    335e:	74 01       	movw	r14, r8
    3360:	96 01       	movw	r18, r12
    3362:	a5 01       	movw	r20, r10
    3364:	b2 01       	movw	r22, r4
    3366:	ce 01       	movw	r24, r28
    3368:	f8 da       	rcall	.-2576   	; 0x295a <generate_Random>
    336a:	df 91       	pop	r29
    336c:	cf 91       	pop	r28
    336e:	1f 91       	pop	r17
    3370:	0f 91       	pop	r16
    3372:	ff 90       	pop	r15
    3374:	ef 90       	pop	r14
    3376:	df 90       	pop	r13
    3378:	cf 90       	pop	r12
    337a:	bf 90       	pop	r11
    337c:	af 90       	pop	r10
    337e:	9f 90       	pop	r9
    3380:	8f 90       	pop	r8
    3382:	7f 90       	pop	r7
    3384:	6f 90       	pop	r6
    3386:	5f 90       	pop	r5
    3388:	4f 90       	pop	r4
    338a:	08 95       	ret

0000338c <main>:
 *  Author: 김영범
 */ 
#include "ctr_drbg.h"

int main(void)
{
    338c:	8f 92       	push	r8
    338e:	9f 92       	push	r9
    3390:	af 92       	push	r10
    3392:	bf 92       	push	r11
    3394:	cf 92       	push	r12
    3396:	df 92       	push	r13
    3398:	ef 92       	push	r14
    339a:	ff 92       	push	r15
    339c:	0f 93       	push	r16
    339e:	1f 93       	push	r17
    33a0:	cf 93       	push	r28
    33a2:	df 93       	push	r29
    33a4:	cd b7       	in	r28, 0x3d	; 61
    33a6:	de b7       	in	r29, 0x3e	; 62
    33a8:	c0 5a       	subi	r28, 0xA0	; 160
    33aa:	d1 09       	sbc	r29, r1
    33ac:	0f b6       	in	r0, 0x3f	; 63
    33ae:	f8 94       	cli
    33b0:	de bf       	out	0x3e, r29	; 62
    33b2:	0f be       	out	0x3f, r0	; 63
    33b4:	cd bf       	out	0x3d, r28	; 61

	/* Replace with your application code */
	st_state INSTATE = {0x00};
    33b6:	ce 01       	movw	r24, r28
    33b8:	01 96       	adiw	r24, 0x01	; 1
    33ba:	4c 01       	movw	r8, r24
    33bc:	82 e3       	ldi	r24, 0x32	; 50
    33be:	f4 01       	movw	r30, r8
    33c0:	11 92       	st	Z+, r1
    33c2:	8a 95       	dec	r24
    33c4:	e9 f7       	brne	.-6      	; 0x33c0 <main+0x34>
	st_state *in_state = &INSTATE;
	st_len st_LEN = {0x00};
    33c6:	be 01       	movw	r22, r28
    33c8:	65 56       	subi	r22, 0x65	; 101
    33ca:	7f 4f       	sbci	r23, 0xFF	; 255
    33cc:	86 e0       	ldi	r24, 0x06	; 6
    33ce:	fb 01       	movw	r30, r22
    33d0:	11 92       	st	Z+, r1
    33d2:	8a 95       	dec	r24
    33d4:	e9 f7       	brne	.-6      	; 0x33d0 <main+0x44>
	st_len *len = &st_LEN;

	u8 in[24] = {0x3D, 0xA9, 0x3E, 0xDD, 0x17, 0x94, 0x4F, 0x79, 0x1E, 0x33, 0x99, 0x67, 0x2C, 0xC6, 0xEA, 0x93, 0x8A, 0x3F, 0xFF, 0x14, 0x09, 0x02, 0x3D, 0x0C};
    33d6:	88 e1       	ldi	r24, 0x18	; 24
    33d8:	e6 e1       	ldi	r30, 0x16	; 22
    33da:	f3 e0       	ldi	r31, 0x03	; 3
    33dc:	de 01       	movw	r26, r28
    33de:	ad 59       	subi	r26, 0x9D	; 157
    33e0:	bf 4f       	sbci	r27, 0xFF	; 255
    33e2:	01 90       	ld	r0, Z+
    33e4:	0d 92       	st	X+, r0
    33e6:	8a 95       	dec	r24
    33e8:	e1 f7       	brne	.-8      	; 0x33e2 <main+0x56>
	u8 seed[SEED_LEN] = {0x00};
    33ea:	9e 01       	movw	r18, r28
    33ec:	2d 5c       	subi	r18, 0xCD	; 205
    33ee:	3f 4f       	sbci	r19, 0xFF	; 255
    33f0:	80 e3       	ldi	r24, 0x30	; 48
    33f2:	f9 01       	movw	r30, r18
    33f4:	11 92       	st	Z+, r1
    33f6:	8a 95       	dec	r24
    33f8:	e9 f7       	brne	.-6      	; 0x33f4 <main+0x68>
	u8 *re_add_data = NULL;
	u8 *add_data = NULL;
	u8 random[16] = {0x00};
    33fa:	8e 01       	movw	r16, r28
    33fc:	05 57       	subi	r16, 0x75	; 117
    33fe:	1f 4f       	sbci	r17, 0xFF	; 255
    3400:	90 e1       	ldi	r25, 0x10	; 16
    3402:	f8 01       	movw	r30, r16
    3404:	89 2f       	mov	r24, r25
    3406:	11 92       	st	Z+, r1
    3408:	8a 95       	dec	r24
    340a:	e9 f7       	brne	.-6      	; 0x3406 <main+0x7a>
	u8 re_Entrophy[16] = {0x4E, 0xE9, 0xA2, 0xCF, 0x6E, 0x8B, 0xFA, 0x48, 0xBB, 0xBE, 0x56, 0x99, 0xDD, 0x5A, 0xBA, 0x02};
    340c:	80 e1       	ldi	r24, 0x10	; 16
    340e:	ee e2       	ldi	r30, 0x2E	; 46
    3410:	f3 e0       	ldi	r31, 0x03	; 3
    3412:	de 01       	movw	r26, r28
    3414:	a5 58       	subi	r26, 0x85	; 133
    3416:	bf 4f       	sbci	r27, 0xFF	; 255
    3418:	01 90       	ld	r0, Z+
    341a:	0d 92       	st	X+, r0
    341c:	8a 95       	dec	r24
    341e:	e1 f7       	brne	.-8      	; 0x3418 <main+0x8c>

	in_state->prediction_flag = FALSE;
	len->add_data_len = 0;
	len->general_len = 16;
    3420:	fb 01       	movw	r30, r22
    3422:	94 83       	std	Z+4, r25	; 0x04
	len->re_adddata = 16;
    3424:	91 83       	std	Z+1, r25	; 0x01
	len->re_Entrophy = 16;
    3426:	92 83       	std	Z+2, r25	; 0x02
	len->seed = 32;
    3428:	80 e2       	ldi	r24, 0x20	; 32
    342a:	83 83       	std	Z+3, r24	; 0x03
	len->input_len = 24;
    342c:	88 e1       	ldi	r24, 0x18	; 24
    342e:	85 83       	std	Z+5, r24	; 0x05
aes192_ctx_t aes_test;
	#else //KEY_BIT ==256
aes256_ctx_t aes_test;
	#endif

	CTR_DRBG(in_state, len, in, seed, random, re_add_data, re_Entrophy, add_data);
    3430:	a1 2c       	mov	r10, r1
    3432:	b1 2c       	mov	r11, r1
    3434:	ce 01       	movw	r24, r28
    3436:	85 58       	subi	r24, 0x85	; 133
    3438:	9f 4f       	sbci	r25, 0xFF	; 255
    343a:	6c 01       	movw	r12, r24
    343c:	e1 2c       	mov	r14, r1
    343e:	f1 2c       	mov	r15, r1
    3440:	ae 01       	movw	r20, r28
    3442:	4d 59       	subi	r20, 0x9D	; 157
    3444:	5f 4f       	sbci	r21, 0xFF	; 255
    3446:	c4 01       	movw	r24, r8
    3448:	6b df       	rcall	.-298    	; 0x3320 <CTR_DRBG>

	return 0;
}
    344a:	80 e0       	ldi	r24, 0x00	; 0
    344c:	90 e0       	ldi	r25, 0x00	; 0
    344e:	c0 56       	subi	r28, 0x60	; 96
    3450:	df 4f       	sbci	r29, 0xFF	; 255
    3452:	0f b6       	in	r0, 0x3f	; 63
    3454:	f8 94       	cli
    3456:	de bf       	out	0x3e, r29	; 62
    3458:	0f be       	out	0x3f, r0	; 63
    345a:	cd bf       	out	0x3d, r28	; 61
    345c:	df 91       	pop	r29
    345e:	cf 91       	pop	r28
    3460:	1f 91       	pop	r17
    3462:	0f 91       	pop	r16
    3464:	ff 90       	pop	r15
    3466:	ef 90       	pop	r14
    3468:	df 90       	pop	r13
    346a:	cf 90       	pop	r12
    346c:	bf 90       	pop	r11
    346e:	af 90       	pop	r10
    3470:	9f 90       	pop	r9
    3472:	8f 90       	pop	r8
    3474:	08 95       	ret

00003476 <calloc>:
    3476:	0f 93       	push	r16
    3478:	1f 93       	push	r17
    347a:	cf 93       	push	r28
    347c:	df 93       	push	r29
    347e:	86 9f       	mul	r24, r22
    3480:	80 01       	movw	r16, r0
    3482:	87 9f       	mul	r24, r23
    3484:	10 0d       	add	r17, r0
    3486:	96 9f       	mul	r25, r22
    3488:	10 0d       	add	r17, r0
    348a:	11 24       	eor	r1, r1
    348c:	c8 01       	movw	r24, r16
    348e:	0d d0       	rcall	.+26     	; 0x34aa <malloc>
    3490:	ec 01       	movw	r28, r24
    3492:	00 97       	sbiw	r24, 0x00	; 0
    3494:	21 f0       	breq	.+8      	; 0x349e <calloc+0x28>
    3496:	a8 01       	movw	r20, r16
    3498:	60 e0       	ldi	r22, 0x00	; 0
    349a:	70 e0       	ldi	r23, 0x00	; 0
    349c:	27 d1       	rcall	.+590    	; 0x36ec <memset>
    349e:	ce 01       	movw	r24, r28
    34a0:	df 91       	pop	r29
    34a2:	cf 91       	pop	r28
    34a4:	1f 91       	pop	r17
    34a6:	0f 91       	pop	r16
    34a8:	08 95       	ret

000034aa <malloc>:
    34aa:	0f 93       	push	r16
    34ac:	1f 93       	push	r17
    34ae:	cf 93       	push	r28
    34b0:	df 93       	push	r29
    34b2:	82 30       	cpi	r24, 0x02	; 2
    34b4:	91 05       	cpc	r25, r1
    34b6:	10 f4       	brcc	.+4      	; 0x34bc <malloc+0x12>
    34b8:	82 e0       	ldi	r24, 0x02	; 2
    34ba:	90 e0       	ldi	r25, 0x00	; 0
    34bc:	e0 91 40 03 	lds	r30, 0x0340	; 0x800340 <__flp>
    34c0:	f0 91 41 03 	lds	r31, 0x0341	; 0x800341 <__flp+0x1>
    34c4:	20 e0       	ldi	r18, 0x00	; 0
    34c6:	30 e0       	ldi	r19, 0x00	; 0
    34c8:	a0 e0       	ldi	r26, 0x00	; 0
    34ca:	b0 e0       	ldi	r27, 0x00	; 0
    34cc:	30 97       	sbiw	r30, 0x00	; 0
    34ce:	19 f1       	breq	.+70     	; 0x3516 <malloc+0x6c>
    34d0:	40 81       	ld	r20, Z
    34d2:	51 81       	ldd	r21, Z+1	; 0x01
    34d4:	02 81       	ldd	r16, Z+2	; 0x02
    34d6:	13 81       	ldd	r17, Z+3	; 0x03
    34d8:	48 17       	cp	r20, r24
    34da:	59 07       	cpc	r21, r25
    34dc:	c8 f0       	brcs	.+50     	; 0x3510 <malloc+0x66>
    34de:	84 17       	cp	r24, r20
    34e0:	95 07       	cpc	r25, r21
    34e2:	69 f4       	brne	.+26     	; 0x34fe <malloc+0x54>
    34e4:	10 97       	sbiw	r26, 0x00	; 0
    34e6:	31 f0       	breq	.+12     	; 0x34f4 <malloc+0x4a>
    34e8:	12 96       	adiw	r26, 0x02	; 2
    34ea:	0c 93       	st	X, r16
    34ec:	12 97       	sbiw	r26, 0x02	; 2
    34ee:	13 96       	adiw	r26, 0x03	; 3
    34f0:	1c 93       	st	X, r17
    34f2:	27 c0       	rjmp	.+78     	; 0x3542 <malloc+0x98>
    34f4:	00 93 40 03 	sts	0x0340, r16	; 0x800340 <__flp>
    34f8:	10 93 41 03 	sts	0x0341, r17	; 0x800341 <__flp+0x1>
    34fc:	22 c0       	rjmp	.+68     	; 0x3542 <malloc+0x98>
    34fe:	21 15       	cp	r18, r1
    3500:	31 05       	cpc	r19, r1
    3502:	19 f0       	breq	.+6      	; 0x350a <malloc+0x60>
    3504:	42 17       	cp	r20, r18
    3506:	53 07       	cpc	r21, r19
    3508:	18 f4       	brcc	.+6      	; 0x3510 <malloc+0x66>
    350a:	9a 01       	movw	r18, r20
    350c:	bd 01       	movw	r22, r26
    350e:	ef 01       	movw	r28, r30
    3510:	df 01       	movw	r26, r30
    3512:	f8 01       	movw	r30, r16
    3514:	db cf       	rjmp	.-74     	; 0x34cc <malloc+0x22>
    3516:	21 15       	cp	r18, r1
    3518:	31 05       	cpc	r19, r1
    351a:	f9 f0       	breq	.+62     	; 0x355a <malloc+0xb0>
    351c:	28 1b       	sub	r18, r24
    351e:	39 0b       	sbc	r19, r25
    3520:	24 30       	cpi	r18, 0x04	; 4
    3522:	31 05       	cpc	r19, r1
    3524:	80 f4       	brcc	.+32     	; 0x3546 <malloc+0x9c>
    3526:	8a 81       	ldd	r24, Y+2	; 0x02
    3528:	9b 81       	ldd	r25, Y+3	; 0x03
    352a:	61 15       	cp	r22, r1
    352c:	71 05       	cpc	r23, r1
    352e:	21 f0       	breq	.+8      	; 0x3538 <malloc+0x8e>
    3530:	fb 01       	movw	r30, r22
    3532:	93 83       	std	Z+3, r25	; 0x03
    3534:	82 83       	std	Z+2, r24	; 0x02
    3536:	04 c0       	rjmp	.+8      	; 0x3540 <malloc+0x96>
    3538:	90 93 41 03 	sts	0x0341, r25	; 0x800341 <__flp+0x1>
    353c:	80 93 40 03 	sts	0x0340, r24	; 0x800340 <__flp>
    3540:	fe 01       	movw	r30, r28
    3542:	32 96       	adiw	r30, 0x02	; 2
    3544:	44 c0       	rjmp	.+136    	; 0x35ce <malloc+0x124>
    3546:	fe 01       	movw	r30, r28
    3548:	e2 0f       	add	r30, r18
    354a:	f3 1f       	adc	r31, r19
    354c:	81 93       	st	Z+, r24
    354e:	91 93       	st	Z+, r25
    3550:	22 50       	subi	r18, 0x02	; 2
    3552:	31 09       	sbc	r19, r1
    3554:	39 83       	std	Y+1, r19	; 0x01
    3556:	28 83       	st	Y, r18
    3558:	3a c0       	rjmp	.+116    	; 0x35ce <malloc+0x124>
    355a:	20 91 3e 03 	lds	r18, 0x033E	; 0x80033e <__data_end>
    355e:	30 91 3f 03 	lds	r19, 0x033F	; 0x80033f <__data_end+0x1>
    3562:	23 2b       	or	r18, r19
    3564:	41 f4       	brne	.+16     	; 0x3576 <malloc+0xcc>
    3566:	20 91 02 03 	lds	r18, 0x0302	; 0x800302 <__malloc_heap_start>
    356a:	30 91 03 03 	lds	r19, 0x0303	; 0x800303 <__malloc_heap_start+0x1>
    356e:	30 93 3f 03 	sts	0x033F, r19	; 0x80033f <__data_end+0x1>
    3572:	20 93 3e 03 	sts	0x033E, r18	; 0x80033e <__data_end>
    3576:	20 91 00 03 	lds	r18, 0x0300	; 0x800300 <__malloc_heap_end>
    357a:	30 91 01 03 	lds	r19, 0x0301	; 0x800301 <__malloc_heap_end+0x1>
    357e:	21 15       	cp	r18, r1
    3580:	31 05       	cpc	r19, r1
    3582:	41 f4       	brne	.+16     	; 0x3594 <malloc+0xea>
    3584:	2d b7       	in	r18, 0x3d	; 61
    3586:	3e b7       	in	r19, 0x3e	; 62
    3588:	40 91 04 03 	lds	r20, 0x0304	; 0x800304 <__malloc_margin>
    358c:	50 91 05 03 	lds	r21, 0x0305	; 0x800305 <__malloc_margin+0x1>
    3590:	24 1b       	sub	r18, r20
    3592:	35 0b       	sbc	r19, r21
    3594:	e0 91 3e 03 	lds	r30, 0x033E	; 0x80033e <__data_end>
    3598:	f0 91 3f 03 	lds	r31, 0x033F	; 0x80033f <__data_end+0x1>
    359c:	e2 17       	cp	r30, r18
    359e:	f3 07       	cpc	r31, r19
    35a0:	a0 f4       	brcc	.+40     	; 0x35ca <malloc+0x120>
    35a2:	2e 1b       	sub	r18, r30
    35a4:	3f 0b       	sbc	r19, r31
    35a6:	28 17       	cp	r18, r24
    35a8:	39 07       	cpc	r19, r25
    35aa:	78 f0       	brcs	.+30     	; 0x35ca <malloc+0x120>
    35ac:	ac 01       	movw	r20, r24
    35ae:	4e 5f       	subi	r20, 0xFE	; 254
    35b0:	5f 4f       	sbci	r21, 0xFF	; 255
    35b2:	24 17       	cp	r18, r20
    35b4:	35 07       	cpc	r19, r21
    35b6:	48 f0       	brcs	.+18     	; 0x35ca <malloc+0x120>
    35b8:	4e 0f       	add	r20, r30
    35ba:	5f 1f       	adc	r21, r31
    35bc:	50 93 3f 03 	sts	0x033F, r21	; 0x80033f <__data_end+0x1>
    35c0:	40 93 3e 03 	sts	0x033E, r20	; 0x80033e <__data_end>
    35c4:	81 93       	st	Z+, r24
    35c6:	91 93       	st	Z+, r25
    35c8:	02 c0       	rjmp	.+4      	; 0x35ce <malloc+0x124>
    35ca:	e0 e0       	ldi	r30, 0x00	; 0
    35cc:	f0 e0       	ldi	r31, 0x00	; 0
    35ce:	cf 01       	movw	r24, r30
    35d0:	df 91       	pop	r29
    35d2:	cf 91       	pop	r28
    35d4:	1f 91       	pop	r17
    35d6:	0f 91       	pop	r16
    35d8:	08 95       	ret

000035da <free>:
    35da:	cf 93       	push	r28
    35dc:	df 93       	push	r29
    35de:	00 97       	sbiw	r24, 0x00	; 0
    35e0:	09 f4       	brne	.+2      	; 0x35e4 <free+0xa>
    35e2:	81 c0       	rjmp	.+258    	; 0x36e6 <free+0x10c>
    35e4:	fc 01       	movw	r30, r24
    35e6:	32 97       	sbiw	r30, 0x02	; 2
    35e8:	13 82       	std	Z+3, r1	; 0x03
    35ea:	12 82       	std	Z+2, r1	; 0x02
    35ec:	a0 91 40 03 	lds	r26, 0x0340	; 0x800340 <__flp>
    35f0:	b0 91 41 03 	lds	r27, 0x0341	; 0x800341 <__flp+0x1>
    35f4:	10 97       	sbiw	r26, 0x00	; 0
    35f6:	81 f4       	brne	.+32     	; 0x3618 <free+0x3e>
    35f8:	20 81       	ld	r18, Z
    35fa:	31 81       	ldd	r19, Z+1	; 0x01
    35fc:	82 0f       	add	r24, r18
    35fe:	93 1f       	adc	r25, r19
    3600:	20 91 3e 03 	lds	r18, 0x033E	; 0x80033e <__data_end>
    3604:	30 91 3f 03 	lds	r19, 0x033F	; 0x80033f <__data_end+0x1>
    3608:	28 17       	cp	r18, r24
    360a:	39 07       	cpc	r19, r25
    360c:	51 f5       	brne	.+84     	; 0x3662 <free+0x88>
    360e:	f0 93 3f 03 	sts	0x033F, r31	; 0x80033f <__data_end+0x1>
    3612:	e0 93 3e 03 	sts	0x033E, r30	; 0x80033e <__data_end>
    3616:	67 c0       	rjmp	.+206    	; 0x36e6 <free+0x10c>
    3618:	ed 01       	movw	r28, r26
    361a:	20 e0       	ldi	r18, 0x00	; 0
    361c:	30 e0       	ldi	r19, 0x00	; 0
    361e:	ce 17       	cp	r28, r30
    3620:	df 07       	cpc	r29, r31
    3622:	40 f4       	brcc	.+16     	; 0x3634 <free+0x5a>
    3624:	4a 81       	ldd	r20, Y+2	; 0x02
    3626:	5b 81       	ldd	r21, Y+3	; 0x03
    3628:	9e 01       	movw	r18, r28
    362a:	41 15       	cp	r20, r1
    362c:	51 05       	cpc	r21, r1
    362e:	f1 f0       	breq	.+60     	; 0x366c <free+0x92>
    3630:	ea 01       	movw	r28, r20
    3632:	f5 cf       	rjmp	.-22     	; 0x361e <free+0x44>
    3634:	d3 83       	std	Z+3, r29	; 0x03
    3636:	c2 83       	std	Z+2, r28	; 0x02
    3638:	40 81       	ld	r20, Z
    363a:	51 81       	ldd	r21, Z+1	; 0x01
    363c:	84 0f       	add	r24, r20
    363e:	95 1f       	adc	r25, r21
    3640:	c8 17       	cp	r28, r24
    3642:	d9 07       	cpc	r29, r25
    3644:	59 f4       	brne	.+22     	; 0x365c <free+0x82>
    3646:	88 81       	ld	r24, Y
    3648:	99 81       	ldd	r25, Y+1	; 0x01
    364a:	84 0f       	add	r24, r20
    364c:	95 1f       	adc	r25, r21
    364e:	02 96       	adiw	r24, 0x02	; 2
    3650:	91 83       	std	Z+1, r25	; 0x01
    3652:	80 83       	st	Z, r24
    3654:	8a 81       	ldd	r24, Y+2	; 0x02
    3656:	9b 81       	ldd	r25, Y+3	; 0x03
    3658:	93 83       	std	Z+3, r25	; 0x03
    365a:	82 83       	std	Z+2, r24	; 0x02
    365c:	21 15       	cp	r18, r1
    365e:	31 05       	cpc	r19, r1
    3660:	29 f4       	brne	.+10     	; 0x366c <free+0x92>
    3662:	f0 93 41 03 	sts	0x0341, r31	; 0x800341 <__flp+0x1>
    3666:	e0 93 40 03 	sts	0x0340, r30	; 0x800340 <__flp>
    366a:	3d c0       	rjmp	.+122    	; 0x36e6 <free+0x10c>
    366c:	e9 01       	movw	r28, r18
    366e:	fb 83       	std	Y+3, r31	; 0x03
    3670:	ea 83       	std	Y+2, r30	; 0x02
    3672:	49 91       	ld	r20, Y+
    3674:	59 91       	ld	r21, Y+
    3676:	c4 0f       	add	r28, r20
    3678:	d5 1f       	adc	r29, r21
    367a:	ec 17       	cp	r30, r28
    367c:	fd 07       	cpc	r31, r29
    367e:	61 f4       	brne	.+24     	; 0x3698 <free+0xbe>
    3680:	80 81       	ld	r24, Z
    3682:	91 81       	ldd	r25, Z+1	; 0x01
    3684:	84 0f       	add	r24, r20
    3686:	95 1f       	adc	r25, r21
    3688:	02 96       	adiw	r24, 0x02	; 2
    368a:	e9 01       	movw	r28, r18
    368c:	99 83       	std	Y+1, r25	; 0x01
    368e:	88 83       	st	Y, r24
    3690:	82 81       	ldd	r24, Z+2	; 0x02
    3692:	93 81       	ldd	r25, Z+3	; 0x03
    3694:	9b 83       	std	Y+3, r25	; 0x03
    3696:	8a 83       	std	Y+2, r24	; 0x02
    3698:	e0 e0       	ldi	r30, 0x00	; 0
    369a:	f0 e0       	ldi	r31, 0x00	; 0
    369c:	12 96       	adiw	r26, 0x02	; 2
    369e:	8d 91       	ld	r24, X+
    36a0:	9c 91       	ld	r25, X
    36a2:	13 97       	sbiw	r26, 0x03	; 3
    36a4:	00 97       	sbiw	r24, 0x00	; 0
    36a6:	19 f0       	breq	.+6      	; 0x36ae <free+0xd4>
    36a8:	fd 01       	movw	r30, r26
    36aa:	dc 01       	movw	r26, r24
    36ac:	f7 cf       	rjmp	.-18     	; 0x369c <free+0xc2>
    36ae:	8d 91       	ld	r24, X+
    36b0:	9c 91       	ld	r25, X
    36b2:	11 97       	sbiw	r26, 0x01	; 1
    36b4:	9d 01       	movw	r18, r26
    36b6:	2e 5f       	subi	r18, 0xFE	; 254
    36b8:	3f 4f       	sbci	r19, 0xFF	; 255
    36ba:	82 0f       	add	r24, r18
    36bc:	93 1f       	adc	r25, r19
    36be:	20 91 3e 03 	lds	r18, 0x033E	; 0x80033e <__data_end>
    36c2:	30 91 3f 03 	lds	r19, 0x033F	; 0x80033f <__data_end+0x1>
    36c6:	28 17       	cp	r18, r24
    36c8:	39 07       	cpc	r19, r25
    36ca:	69 f4       	brne	.+26     	; 0x36e6 <free+0x10c>
    36cc:	30 97       	sbiw	r30, 0x00	; 0
    36ce:	29 f4       	brne	.+10     	; 0x36da <free+0x100>
    36d0:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <__flp+0x1>
    36d4:	10 92 40 03 	sts	0x0340, r1	; 0x800340 <__flp>
    36d8:	02 c0       	rjmp	.+4      	; 0x36de <free+0x104>
    36da:	13 82       	std	Z+3, r1	; 0x03
    36dc:	12 82       	std	Z+2, r1	; 0x02
    36de:	b0 93 3f 03 	sts	0x033F, r27	; 0x80033f <__data_end+0x1>
    36e2:	a0 93 3e 03 	sts	0x033E, r26	; 0x80033e <__data_end>
    36e6:	df 91       	pop	r29
    36e8:	cf 91       	pop	r28
    36ea:	08 95       	ret

000036ec <memset>:
    36ec:	dc 01       	movw	r26, r24
    36ee:	01 c0       	rjmp	.+2      	; 0x36f2 <memset+0x6>
    36f0:	6d 93       	st	X+, r22
    36f2:	41 50       	subi	r20, 0x01	; 1
    36f4:	50 40       	sbci	r21, 0x00	; 0
    36f6:	e0 f7       	brcc	.-8      	; 0x36f0 <memset+0x4>
    36f8:	08 95       	ret

000036fa <_exit>:
    36fa:	f8 94       	cli

000036fc <__stop_program>:
    36fc:	ff cf       	rjmp	.-2      	; 0x36fc <__stop_program>
