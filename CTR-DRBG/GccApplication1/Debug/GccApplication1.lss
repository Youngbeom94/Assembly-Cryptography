
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000216  00800100  0000387c  0000397c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000387c  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000004  00800316  00800316  00003b92  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00003b92  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00003bc4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e8  00000000  00000000  00003c00  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001a08  00000000  00000000  00003ce8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b06  00000000  00000000  000056f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00005083  00000000  00000000  000061f6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002b4  00000000  00000000  0000b27c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005a8  00000000  00000000  0000b530  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000dff  00000000  00000000  0000bad8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  0000c8d7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	62 c0       	rjmp	.+196    	; 0xca <__bad_interrupt>
       6:	00 00       	nop
       8:	60 c0       	rjmp	.+192    	; 0xca <__bad_interrupt>
       a:	00 00       	nop
       c:	5e c0       	rjmp	.+188    	; 0xca <__bad_interrupt>
       e:	00 00       	nop
      10:	5c c0       	rjmp	.+184    	; 0xca <__bad_interrupt>
      12:	00 00       	nop
      14:	5a c0       	rjmp	.+180    	; 0xca <__bad_interrupt>
      16:	00 00       	nop
      18:	58 c0       	rjmp	.+176    	; 0xca <__bad_interrupt>
      1a:	00 00       	nop
      1c:	56 c0       	rjmp	.+172    	; 0xca <__bad_interrupt>
      1e:	00 00       	nop
      20:	54 c0       	rjmp	.+168    	; 0xca <__bad_interrupt>
      22:	00 00       	nop
      24:	52 c0       	rjmp	.+164    	; 0xca <__bad_interrupt>
      26:	00 00       	nop
      28:	50 c0       	rjmp	.+160    	; 0xca <__bad_interrupt>
      2a:	00 00       	nop
      2c:	4e c0       	rjmp	.+156    	; 0xca <__bad_interrupt>
      2e:	00 00       	nop
      30:	4c c0       	rjmp	.+152    	; 0xca <__bad_interrupt>
      32:	00 00       	nop
      34:	4a c0       	rjmp	.+148    	; 0xca <__bad_interrupt>
      36:	00 00       	nop
      38:	48 c0       	rjmp	.+144    	; 0xca <__bad_interrupt>
      3a:	00 00       	nop
      3c:	46 c0       	rjmp	.+140    	; 0xca <__bad_interrupt>
      3e:	00 00       	nop
      40:	44 c0       	rjmp	.+136    	; 0xca <__bad_interrupt>
      42:	00 00       	nop
      44:	42 c0       	rjmp	.+132    	; 0xca <__bad_interrupt>
      46:	00 00       	nop
      48:	40 c0       	rjmp	.+128    	; 0xca <__bad_interrupt>
      4a:	00 00       	nop
      4c:	3e c0       	rjmp	.+124    	; 0xca <__bad_interrupt>
      4e:	00 00       	nop
      50:	3c c0       	rjmp	.+120    	; 0xca <__bad_interrupt>
      52:	00 00       	nop
      54:	3a c0       	rjmp	.+116    	; 0xca <__bad_interrupt>
      56:	00 00       	nop
      58:	38 c0       	rjmp	.+112    	; 0xca <__bad_interrupt>
      5a:	00 00       	nop
      5c:	36 c0       	rjmp	.+108    	; 0xca <__bad_interrupt>
      5e:	00 00       	nop
      60:	34 c0       	rjmp	.+104    	; 0xca <__bad_interrupt>
      62:	00 00       	nop
      64:	32 c0       	rjmp	.+100    	; 0xca <__bad_interrupt>
      66:	00 00       	nop
      68:	30 c0       	rjmp	.+96     	; 0xca <__bad_interrupt>
      6a:	00 00       	nop
      6c:	2e c0       	rjmp	.+92     	; 0xca <__bad_interrupt>
      6e:	00 00       	nop
      70:	2c c0       	rjmp	.+88     	; 0xca <__bad_interrupt>
      72:	00 00       	nop
      74:	2a c0       	rjmp	.+84     	; 0xca <__bad_interrupt>
      76:	00 00       	nop
      78:	28 c0       	rjmp	.+80     	; 0xca <__bad_interrupt>
      7a:	00 00       	nop
      7c:	26 c0       	rjmp	.+76     	; 0xca <__bad_interrupt>
      7e:	00 00       	nop
      80:	24 c0       	rjmp	.+72     	; 0xca <__bad_interrupt>
      82:	00 00       	nop
      84:	22 c0       	rjmp	.+68     	; 0xca <__bad_interrupt>
      86:	00 00       	nop
      88:	20 c0       	rjmp	.+64     	; 0xca <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e1       	ldi	r29, 0x10	; 16
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
      98:	13 e0       	ldi	r17, 0x03	; 3
      9a:	a0 e0       	ldi	r26, 0x00	; 0
      9c:	b1 e0       	ldi	r27, 0x01	; 1
      9e:	ec e7       	ldi	r30, 0x7C	; 124
      a0:	f8 e3       	ldi	r31, 0x38	; 56
      a2:	00 e0       	ldi	r16, 0x00	; 0
      a4:	0b bf       	out	0x3b, r16	; 59
      a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
      a8:	07 90       	elpm	r0, Z+
      aa:	0d 92       	st	X+, r0
      ac:	a6 31       	cpi	r26, 0x16	; 22
      ae:	b1 07       	cpc	r27, r17
      b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
      b2:	23 e0       	ldi	r18, 0x03	; 3
      b4:	a6 e1       	ldi	r26, 0x16	; 22
      b6:	b3 e0       	ldi	r27, 0x03	; 3
      b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
      ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
      bc:	aa 31       	cpi	r26, 0x1A	; 26
      be:	b2 07       	cpc	r27, r18
      c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
      c2:	0e 94 92 1a 	call	0x3524	; 0x3524 <main>
      c6:	0c 94 3c 1c 	jmp	0x3878	; 0x3878 <_exit>

000000ca <__bad_interrupt>:
      ca:	9a cf       	rjmp	.-204    	; 0x0 <__vectors>

000000cc <aes256_enc_CBC_asm>:
P = 0
xREDUCER = 25

.global aes256_enc_CBC_asm
aes256_enc_CBC_asm:
	ldi r20, 14
      cc:	4e e0       	ldi	r20, 0x0E	; 14
	rjmp aes_encrypt_core
      ce:	03 c0       	rjmp	.+6      	; 0xd6 <aes_encrypt_core>

000000d0 <aes192_enc_CBC_asm>:

.global aes192_enc_CBC_asm
aes192_enc_CBC_asm:
	ldi r20, 12
      d0:	4c e0       	ldi	r20, 0x0C	; 12
	rjmp aes_encrypt_core
      d2:	01 c0       	rjmp	.+2      	; 0xd6 <aes_encrypt_core>

000000d4 <aes128_enc_CBC_asm>:

.global aes128_enc_CBC_asm
aes128_enc_CBC_asm:
	ldi r20, 10
      d4:	4a e0       	ldi	r20, 0x0A	; 10

000000d6 <aes_encrypt_core>:
 * param ks:     r22:r23
 * param rounds: r20   
 */
.global aes_encrypt_core
aes_encrypt_core:
	push_range 0, 22
      d6:	0f 92       	push	r0
      d8:	1f 92       	push	r1
      da:	2f 92       	push	r2
      dc:	3f 92       	push	r3
      de:	4f 92       	push	r4
      e0:	5f 92       	push	r5
      e2:	6f 92       	push	r6
      e4:	7f 92       	push	r7
      e6:	8f 92       	push	r8
      e8:	9f 92       	push	r9
      ea:	af 92       	push	r10
      ec:	bf 92       	push	r11
      ee:	cf 92       	push	r12
      f0:	df 92       	push	r13
      f2:	ef 92       	push	r14
      f4:	ff 92       	push	r15
      f6:	0f 93       	push	r16
      f8:	1f 93       	push	r17
      fa:	2f 93       	push	r18
      fc:	3f 93       	push	r19
      fe:	4f 93       	push	r20
     100:	5f 93       	push	r21
     102:	6f 93       	push	r22
	push r28
     104:	cf 93       	push	r28
	push r29
     106:	df 93       	push	r29
	push r24
     108:	8f 93       	push	r24
	push r25
     10a:	9f 93       	push	r25
	movw r26, r22
     10c:	db 01       	movw	r26, r22
	movw r30, r24
     10e:	fc 01       	movw	r30, r24
	mov  CTR, r20
     110:	84 2f       	mov	r24, r20
	clt
     112:	e8 94       	clt
	
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld ST\row\col, Z+
		.endr
	.endr
     114:	81 90       	ld	r8, Z+
     116:	91 90       	ld	r9, Z+
     118:	a1 90       	ld	r10, Z+
     11a:	b1 90       	ld	r11, Z+
     11c:	c1 90       	ld	r12, Z+
     11e:	d1 90       	ld	r13, Z+
     120:	e1 90       	ld	r14, Z+
     122:	f1 90       	ld	r15, Z+
     124:	01 91       	ld	r16, Z+
     126:	11 91       	ld	r17, Z+
     128:	21 91       	ld	r18, Z+
     12a:	31 91       	ld	r19, Z+
     12c:	41 91       	ld	r20, Z+
     12e:	51 91       	ld	r21, Z+
     130:	61 91       	ld	r22, Z+
     132:	71 91       	ld	r23, Z+
	
	ldi xREDUCER, 0x1b /* load reducer */
     134:	9b e1       	ldi	r25, 0x1B	; 27
	ldi r31, hi8(aes_sbox)
     136:	f0 e2       	ldi	r31, 0x20	; 32
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r0, X+
			eor ST\row\col, r0
		.endr
	.endr
     138:	0d 90       	ld	r0, X+
     13a:	80 24       	eor	r8, r0
     13c:	0d 90       	ld	r0, X+
     13e:	90 24       	eor	r9, r0
     140:	0d 90       	ld	r0, X+
     142:	a0 24       	eor	r10, r0
     144:	0d 90       	ld	r0, X+
     146:	b0 24       	eor	r11, r0
     148:	0d 90       	ld	r0, X+
     14a:	c0 24       	eor	r12, r0
     14c:	0d 90       	ld	r0, X+
     14e:	d0 24       	eor	r13, r0
     150:	0d 90       	ld	r0, X+
     152:	e0 24       	eor	r14, r0
     154:	0d 90       	ld	r0, X+
     156:	f0 24       	eor	r15, r0
     158:	0d 90       	ld	r0, X+
     15a:	00 25       	eor	r16, r0
     15c:	0d 90       	ld	r0, X+
     15e:	10 25       	eor	r17, r0
     160:	0d 90       	ld	r0, X+
     162:	20 25       	eor	r18, r0
     164:	0d 90       	ld	r0, X+
     166:	30 25       	eor	r19, r0
     168:	0d 90       	ld	r0, X+
     16a:	40 25       	eor	r20, r0
     16c:	0d 90       	ld	r0, X+
     16e:	50 25       	eor	r21, r0
     170:	0d 90       	ld	r0, X+
     172:	60 25       	eor	r22, r0
     174:	0d 90       	ld	r0, X+
     176:	70 25       	eor	r23, r0
	
	brtc 2f
     178:	66 f5       	brtc	.+88     	; 0x1d2 <exit+0x58>

0000017a <exit>:
exit:
	pop r31
     17a:	ff 91       	pop	r31
	pop r30
     17c:	ef 91       	pop	r30
	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
     17e:	81 92       	st	Z+, r8
     180:	91 92       	st	Z+, r9
     182:	a1 92       	st	Z+, r10
     184:	b1 92       	st	Z+, r11
     186:	c1 92       	st	Z+, r12
     188:	d1 92       	st	Z+, r13
     18a:	e1 92       	st	Z+, r14
     18c:	f1 92       	st	Z+, r15
     18e:	01 93       	st	Z+, r16
     190:	11 93       	st	Z+, r17
     192:	21 93       	st	Z+, r18
     194:	31 93       	st	Z+, r19
     196:	41 93       	st	Z+, r20
     198:	51 93       	st	Z+, r21
     19a:	61 93       	st	Z+, r22
     19c:	71 93       	st	Z+, r23
	pop r29
     19e:	df 91       	pop	r29
	pop r28
     1a0:	cf 91       	pop	r28
	pop_range 0, 22
     1a2:	6f 91       	pop	r22
     1a4:	5f 91       	pop	r21
     1a6:	4f 91       	pop	r20
     1a8:	3f 91       	pop	r19
     1aa:	2f 91       	pop	r18
     1ac:	1f 91       	pop	r17
     1ae:	0f 91       	pop	r16
     1b0:	ff 90       	pop	r15
     1b2:	ef 90       	pop	r14
     1b4:	df 90       	pop	r13
     1b6:	cf 90       	pop	r12
     1b8:	bf 90       	pop	r11
     1ba:	af 90       	pop	r10
     1bc:	9f 90       	pop	r9
     1be:	8f 90       	pop	r8
     1c0:	7f 90       	pop	r7
     1c2:	6f 90       	pop	r6
     1c4:	5f 90       	pop	r5
     1c6:	4f 90       	pop	r4
     1c8:	3f 90       	pop	r3
     1ca:	2f 90       	pop	r2
     1cc:	1f 90       	pop	r1
     1ce:	0f 90       	pop	r0
	ret
     1d0:	08 95       	ret

2:	dec CTR
     1d2:	8a 95       	dec	r24
	brne 3f
     1d4:	09 f4       	brne	.+2      	; 0x1d8 <exit+0x5e>
	set
     1d6:	68 94       	set
3:

	/* encryption loop */ 

	/* SBOX substitution and shifting */
	mov r30, ST00
     1d8:	e8 2d       	mov	r30, r8
	lpm ST00, Z
     1da:	84 90       	lpm	r8, Z
	mov r30, ST10
     1dc:	ec 2d       	mov	r30, r12
	lpm ST10, Z
     1de:	c4 90       	lpm	r12, Z
	mov r30, ST20
     1e0:	e0 2f       	mov	r30, r16
	lpm ST20, Z
     1e2:	04 91       	lpm	r16, Z
	mov r30, ST30
     1e4:	e4 2f       	mov	r30, r20
	lpm ST30, Z
     1e6:	44 91       	lpm	r20, Z

	mov r30, ST01
     1e8:	e9 2d       	mov	r30, r9
	lpm T0, Z
     1ea:	24 90       	lpm	r2, Z
	mov r30, ST11
     1ec:	ed 2d       	mov	r30, r13
	lpm ST01, Z
     1ee:	94 90       	lpm	r9, Z
	mov r30, ST21
     1f0:	e1 2f       	mov	r30, r17
	lpm ST11, Z
     1f2:	d4 90       	lpm	r13, Z
	mov r30, ST31
     1f4:	e5 2f       	mov	r30, r21
	lpm ST21, Z
     1f6:	14 91       	lpm	r17, Z
	mov ST31, T0
     1f8:	52 2d       	mov	r21, r2

	mov r30, ST02
     1fa:	ea 2d       	mov	r30, r10
	lpm T0, Z
     1fc:	24 90       	lpm	r2, Z
	mov r30, ST12
     1fe:	ee 2d       	mov	r30, r14
	lpm T1, Z
     200:	34 90       	lpm	r3, Z
	mov r30, ST22
     202:	e2 2f       	mov	r30, r18
	lpm ST02, Z
     204:	a4 90       	lpm	r10, Z
	mov r30, ST32
     206:	e6 2f       	mov	r30, r22
	lpm ST12, Z
     208:	e4 90       	lpm	r14, Z
	mov ST22, T0
     20a:	22 2d       	mov	r18, r2
	mov ST32, T1
     20c:	63 2d       	mov	r22, r3

	mov r30, ST03
     20e:	eb 2d       	mov	r30, r11
	lpm T0, Z
     210:	24 90       	lpm	r2, Z
	mov r30, ST33
     212:	e7 2f       	mov	r30, r23
	lpm ST03, Z
     214:	b4 90       	lpm	r11, Z
	mov r30, ST23
     216:	e3 2f       	mov	r30, r19
	lpm ST33, Z
     218:	74 91       	lpm	r23, Z
	mov r30, ST13
     21a:	ef 2d       	mov	r30, r15
	lpm ST23, Z
     21c:	34 91       	lpm	r19, Z
	mov ST13, T0
     21e:	f2 2c       	mov	r15, r2
		
	/* mixcols (or rows in our case) */
	brtc 2f
     220:	0e f4       	brtc	.+2      	; 0x224 <exit+0xaa>
	rjmp 1b
     222:	8a cf       	rjmp	.-236    	; 0x138 <aes_encrypt_core+0x62>
	brcc 3f
	eor T0, xREDUCER
3:	eor T0, r0
	eor ST\row\()3, T0

.endr
     224:	0a 2c       	mov	r0, r10
     226:	0b 24       	eor	r0, r11
     228:	40 2c       	mov	r4, r0
     22a:	28 2c       	mov	r2, r8
     22c:	89 24       	eor	r8, r9
     22e:	08 24       	eor	r0, r8
     230:	88 0c       	add	r8, r8
     232:	08 f4       	brcc	.+2      	; 0x236 <exit+0xbc>
     234:	89 26       	eor	r8, r25
     236:	80 24       	eor	r8, r0
     238:	82 24       	eor	r8, r2
     23a:	39 2c       	mov	r3, r9
     23c:	3a 24       	eor	r3, r10
     23e:	33 0c       	add	r3, r3
     240:	08 f4       	brcc	.+2      	; 0x244 <exit+0xca>
     242:	39 26       	eor	r3, r25
     244:	30 24       	eor	r3, r0
     246:	93 24       	eor	r9, r3
     248:	44 0c       	add	r4, r4
     24a:	08 f4       	brcc	.+2      	; 0x24e <exit+0xd4>
     24c:	49 26       	eor	r4, r25
     24e:	40 24       	eor	r4, r0
     250:	a4 24       	eor	r10, r4
     252:	2b 24       	eor	r2, r11
     254:	22 0c       	add	r2, r2
     256:	08 f4       	brcc	.+2      	; 0x25a <exit+0xe0>
     258:	29 26       	eor	r2, r25
     25a:	20 24       	eor	r2, r0
     25c:	b2 24       	eor	r11, r2
     25e:	0e 2c       	mov	r0, r14
     260:	0f 24       	eor	r0, r15
     262:	40 2c       	mov	r4, r0
     264:	2c 2c       	mov	r2, r12
     266:	cd 24       	eor	r12, r13
     268:	0c 24       	eor	r0, r12
     26a:	cc 0c       	add	r12, r12
     26c:	08 f4       	brcc	.+2      	; 0x270 <exit+0xf6>
     26e:	c9 26       	eor	r12, r25
     270:	c0 24       	eor	r12, r0
     272:	c2 24       	eor	r12, r2
     274:	3d 2c       	mov	r3, r13
     276:	3e 24       	eor	r3, r14
     278:	33 0c       	add	r3, r3
     27a:	08 f4       	brcc	.+2      	; 0x27e <exit+0x104>
     27c:	39 26       	eor	r3, r25
     27e:	30 24       	eor	r3, r0
     280:	d3 24       	eor	r13, r3
     282:	44 0c       	add	r4, r4
     284:	08 f4       	brcc	.+2      	; 0x288 <exit+0x10e>
     286:	49 26       	eor	r4, r25
     288:	40 24       	eor	r4, r0
     28a:	e4 24       	eor	r14, r4
     28c:	2f 24       	eor	r2, r15
     28e:	22 0c       	add	r2, r2
     290:	08 f4       	brcc	.+2      	; 0x294 <exit+0x11a>
     292:	29 26       	eor	r2, r25
     294:	20 24       	eor	r2, r0
     296:	f2 24       	eor	r15, r2
     298:	02 2e       	mov	r0, r18
     29a:	03 26       	eor	r0, r19
     29c:	40 2c       	mov	r4, r0
     29e:	20 2e       	mov	r2, r16
     2a0:	01 27       	eor	r16, r17
     2a2:	00 26       	eor	r0, r16
     2a4:	00 0f       	add	r16, r16
     2a6:	08 f4       	brcc	.+2      	; 0x2aa <exit+0x130>
     2a8:	09 27       	eor	r16, r25
     2aa:	00 25       	eor	r16, r0
     2ac:	02 25       	eor	r16, r2
     2ae:	31 2e       	mov	r3, r17
     2b0:	32 26       	eor	r3, r18
     2b2:	33 0c       	add	r3, r3
     2b4:	08 f4       	brcc	.+2      	; 0x2b8 <exit+0x13e>
     2b6:	39 26       	eor	r3, r25
     2b8:	30 24       	eor	r3, r0
     2ba:	13 25       	eor	r17, r3
     2bc:	44 0c       	add	r4, r4
     2be:	08 f4       	brcc	.+2      	; 0x2c2 <exit+0x148>
     2c0:	49 26       	eor	r4, r25
     2c2:	40 24       	eor	r4, r0
     2c4:	24 25       	eor	r18, r4
     2c6:	23 26       	eor	r2, r19
     2c8:	22 0c       	add	r2, r2
     2ca:	08 f4       	brcc	.+2      	; 0x2ce <exit+0x154>
     2cc:	29 26       	eor	r2, r25
     2ce:	20 24       	eor	r2, r0
     2d0:	32 25       	eor	r19, r2
     2d2:	06 2e       	mov	r0, r22
     2d4:	07 26       	eor	r0, r23
     2d6:	40 2c       	mov	r4, r0
     2d8:	24 2e       	mov	r2, r20
     2da:	45 27       	eor	r20, r21
     2dc:	04 26       	eor	r0, r20
     2de:	44 0f       	add	r20, r20
     2e0:	08 f4       	brcc	.+2      	; 0x2e4 <exit+0x16a>
     2e2:	49 27       	eor	r20, r25
     2e4:	40 25       	eor	r20, r0
     2e6:	42 25       	eor	r20, r2
     2e8:	35 2e       	mov	r3, r21
     2ea:	36 26       	eor	r3, r22
     2ec:	33 0c       	add	r3, r3
     2ee:	08 f4       	brcc	.+2      	; 0x2f2 <exit+0x178>
     2f0:	39 26       	eor	r3, r25
     2f2:	30 24       	eor	r3, r0
     2f4:	53 25       	eor	r21, r3
     2f6:	44 0c       	add	r4, r4
     2f8:	08 f4       	brcc	.+2      	; 0x2fc <exit+0x182>
     2fa:	49 26       	eor	r4, r25
     2fc:	40 24       	eor	r4, r0
     2fe:	64 25       	eor	r22, r4
     300:	27 26       	eor	r2, r23
     302:	22 0c       	add	r2, r2
     304:	08 f4       	brcc	.+2      	; 0x308 <exit+0x18e>
     306:	29 26       	eor	r2, r25
     308:	20 24       	eor	r2, r0
     30a:	72 25       	eor	r23, r2
	/* mix colums (rows) done */

	/* add key*/
     30c:	15 cf       	rjmp	.-470    	; 0x138 <aes_encrypt_core+0x62>

0000030e <aes128_enc_CTR_asm>:
/*
 * param state:  r24:r25
 * param ks:     r22:r23
 * param rounds: r20   
 */
	push_range 0, 19
     30e:	0f 92       	push	r0
     310:	1f 92       	push	r1
     312:	2f 92       	push	r2
     314:	3f 92       	push	r3
     316:	4f 92       	push	r4
     318:	5f 92       	push	r5
     31a:	6f 92       	push	r6
     31c:	7f 92       	push	r7
     31e:	8f 92       	push	r8
     320:	9f 92       	push	r9
     322:	af 92       	push	r10
     324:	bf 92       	push	r11
     326:	cf 92       	push	r12
     328:	df 92       	push	r13
     32a:	ef 92       	push	r14
     32c:	ff 92       	push	r15
     32e:	0f 93       	push	r16
     330:	1f 93       	push	r17
     332:	2f 93       	push	r18
     334:	3f 93       	push	r19
	push r28
     336:	cf 93       	push	r28
	push r29
     338:	df 93       	push	r29
	push r24
     33a:	8f 93       	push	r24
	push r25
     33c:	9f 93       	push	r25
	movw r26, r22
     33e:	db 01       	movw	r26, r22
	movw r30, r24
     340:	fc 01       	movw	r30, r24
	//State Set
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld ST\row\col, Z+
		.endr
	.endr
     342:	01 90       	ld	r0, Z+
     344:	11 90       	ld	r1, Z+
     346:	21 90       	ld	r2, Z+
     348:	31 90       	ld	r3, Z+
     34a:	41 90       	ld	r4, Z+
     34c:	51 90       	ld	r5, Z+
     34e:	61 90       	ld	r6, Z+
     350:	71 90       	ld	r7, Z+
     352:	81 90       	ld	r8, Z+
     354:	91 90       	ld	r9, Z+
     356:	a1 90       	ld	r10, Z+
     358:	b1 90       	ld	r11, Z+
     35a:	c1 90       	ld	r12, Z+
     35c:	d1 90       	ld	r13, Z+
     35e:	e1 90       	ld	r14, Z+
     360:	f1 90       	ld	r15, Z+
	push r26
     362:	af 93       	push	r26
	push r27
     364:	bf 93       	push	r27
	push r20
     366:	4f 93       	push	r20
	push r21
     368:	5f 93       	push	r21
	ldi r31, hi8(SBOX_TABLE)	
     36a:	f1 e0       	ldi	r31, 0x01	; 1
	ldi r29, hi8(MIX2_TABLE)
     36c:	d2 e0       	ldi	r29, 0x02	; 2
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     36e:	0d 91       	ld	r16, X+
     370:	00 26       	eor	r0, r16
     372:	0d 91       	ld	r16, X+
     374:	10 26       	eor	r1, r16
     376:	0d 91       	ld	r16, X+
     378:	20 26       	eor	r2, r16
     37a:	0d 91       	ld	r16, X+
     37c:	30 26       	eor	r3, r16
     37e:	0d 91       	ld	r16, X+
     380:	40 26       	eor	r4, r16
     382:	0d 91       	ld	r16, X+
     384:	50 26       	eor	r5, r16
     386:	0d 91       	ld	r16, X+
     388:	60 26       	eor	r6, r16
     38a:	0d 91       	ld	r16, X+
     38c:	70 26       	eor	r7, r16
     38e:	0d 91       	ld	r16, X+
     390:	80 26       	eor	r8, r16
     392:	0d 91       	ld	r16, X+
     394:	90 26       	eor	r9, r16
     396:	0d 91       	ld	r16, X+
     398:	a0 26       	eor	r10, r16
     39a:	0d 91       	ld	r16, X+
     39c:	b0 26       	eor	r11, r16
     39e:	0d 91       	ld	r16, X+
     3a0:	c0 26       	eor	r12, r16
     3a2:	0d 91       	ld	r16, X+
     3a4:	d0 26       	eor	r13, r16
     3a6:	0d 91       	ld	r16, X+
     3a8:	e0 26       	eor	r14, r16
     3aa:	0d 91       	ld	r16, X+
     3ac:	f0 26       	eor	r15, r16

	//1 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	Inc ST33
     3ae:	f3 94       	inc	r15
	mov r30, ST00 
     3b0:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     3b2:	10 81       	ld	r17, Z
	mov M2, M1
     3b4:	21 2f       	mov	r18, r17
	mov M3, M2 
     3b6:	32 2f       	mov	r19, r18
	mov r28, ST00
     3b8:	c0 2d       	mov	r28, r0
	ld  M0, Y
     3ba:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     3bc:	30 27       	eor	r19, r16

	mov r30, ST11
     3be:	e5 2d       	mov	r30, r5
	ld  T0, Z
     3c0:	40 81       	ld	r20, Z
	eor M0, T0
     3c2:	04 27       	eor	r16, r20
	eor M2, T0
     3c4:	24 27       	eor	r18, r20
	eor M3, T0 
     3c6:	34 27       	eor	r19, r20
	mov r28, ST11
     3c8:	c5 2d       	mov	r28, r5
	ld  T0, Y
     3ca:	48 81       	ld	r20, Y
	eor M0, T0
     3cc:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     3ce:	14 27       	eor	r17, r20

	mov r30, ST22
     3d0:	ea 2d       	mov	r30, r10
	ld  T0, Z
     3d2:	40 81       	ld	r20, Z
	eor M0, T0
     3d4:	04 27       	eor	r16, r20
	eor M1, T0
     3d6:	14 27       	eor	r17, r20
	eor M3, T0
     3d8:	34 27       	eor	r19, r20
	mov r28, ST22
     3da:	ca 2d       	mov	r28, r10
	ld  T0, Y
     3dc:	48 81       	ld	r20, Y
	eor M1, T0
     3de:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     3e0:	24 27       	eor	r18, r20

	mov r30, ST33
     3e2:	ef 2d       	mov	r30, r15
	ld  T0, Z
     3e4:	40 81       	ld	r20, Z
	eor M0, T0
     3e6:	04 27       	eor	r16, r20
	eor M1, T0
     3e8:	14 27       	eor	r17, r20
	eor M2, T0 
     3ea:	24 27       	eor	r18, r20
	mov r28, ST33
     3ec:	cf 2d       	mov	r28, r15
	ld  T0, Y
     3ee:	48 81       	ld	r20, Y
	eor M2, T0
     3f0:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     3f2:	34 27       	eor	r19, r20

	mov ST00, M0
     3f4:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     3f6:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     3f8:	50 81       	ld	r21, Z
	mov T2, T1
     3fa:	65 2f       	mov	r22, r21
	mov T3, T2 
     3fc:	76 2f       	mov	r23, r22
	mov r28, ST10
     3fe:	c4 2d       	mov	r28, r4
	ld  T0, Y
     400:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     402:	74 27       	eor	r23, r20

	mov r30, ST21
     404:	e9 2d       	mov	r30, r9
	ld  M0, Z
     406:	00 81       	ld	r16, Z
	eor T0, M0
     408:	40 27       	eor	r20, r16
	eor T2, M0
     40a:	60 27       	eor	r22, r16
	eor T3, M0 
     40c:	70 27       	eor	r23, r16
	mov r28, ST21
     40e:	c9 2d       	mov	r28, r9
	ld  M0, Y
     410:	08 81       	ld	r16, Y
	eor T0, M0
     412:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     414:	50 27       	eor	r21, r16

	mov r30, ST32
     416:	ee 2d       	mov	r30, r14
	ld  M0, Z
     418:	00 81       	ld	r16, Z
	eor T0, M0
     41a:	40 27       	eor	r20, r16
	eor T1, M0
     41c:	50 27       	eor	r21, r16
	eor T3, M0 
     41e:	70 27       	eor	r23, r16
	mov r28, ST32
     420:	ce 2d       	mov	r28, r14
	ld  M0, Y
     422:	08 81       	ld	r16, Y
	eor T1, M0
     424:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     426:	60 27       	eor	r22, r16

	mov r30, ST03
     428:	e3 2d       	mov	r30, r3
	ld  M0, Z
     42a:	00 81       	ld	r16, Z
	eor T0, M0
     42c:	40 27       	eor	r20, r16
	eor T1, M0
     42e:	50 27       	eor	r21, r16
	eor T2, M0 
     430:	60 27       	eor	r22, r16
	mov r28, ST03
     432:	c3 2d       	mov	r28, r3
	ld  M0, Y
     434:	08 81       	ld	r16, Y
	eor T2, M0
     436:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     438:	70 27       	eor	r23, r16

	mov ST10, T0
     43a:	44 2e       	mov	r4, r20
	mov ST11, T1
     43c:	55 2e       	mov	r5, r21
	mov ST03, M3
     43e:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     440:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     442:	40 81       	ld	r20, Z
	mov T1, T0
     444:	54 2f       	mov	r21, r20
	mov M3, T1 
     446:	35 2f       	mov	r19, r21
	mov r28, ST20
     448:	c8 2d       	mov	r28, r8
	ld  M0, Y
     44a:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     44c:	30 27       	eor	r19, r16

	mov r30, ST31
     44e:	ed 2d       	mov	r30, r13
	ld  r25, Z
     450:	90 81       	ld	r25, Z
	eor M0, r25
     452:	09 27       	eor	r16, r25
	eor T1, r25
     454:	59 27       	eor	r21, r25
	eor M3, r25
     456:	39 27       	eor	r19, r25
	mov r28, ST31
     458:	cd 2d       	mov	r28, r13
	ld  r25, Y
     45a:	98 81       	ld	r25, Y
	eor M0, r25
     45c:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     45e:	49 27       	eor	r20, r25

	mov r30, ST02
     460:	e2 2d       	mov	r30, r2
	ld  r25, Z
     462:	90 81       	ld	r25, Z
	eor M0, r25
     464:	09 27       	eor	r16, r25
	eor T0, r25
     466:	49 27       	eor	r20, r25
	eor M3, r25
     468:	39 27       	eor	r19, r25
	mov r28, ST02
     46a:	c2 2d       	mov	r28, r2
	ld  r25, Y
     46c:	98 81       	ld	r25, Y
	eor T0, r25
     46e:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     470:	59 27       	eor	r21, r25

	mov r30, ST13
     472:	e7 2d       	mov	r30, r7
	ld  r25, Z
     474:	90 81       	ld	r25, Z
	eor M0, r25
     476:	09 27       	eor	r16, r25
	eor T0, r25
     478:	49 27       	eor	r20, r25
	eor T1, r25 
     47a:	59 27       	eor	r21, r25
	mov r28, ST13
     47c:	c7 2d       	mov	r28, r7
	ld  r25, Y
     47e:	98 81       	ld	r25, Y
	eor T1, r25
     480:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     482:	39 27       	eor	r19, r25

	mov ST20, M0
     484:	80 2e       	mov	r8, r16
	mov ST21, T0
     486:	94 2e       	mov	r9, r20
	mov ST22, T1
     488:	a5 2e       	mov	r10, r21
	mov ST13, T3
     48a:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     48c:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     48e:	50 81       	ld	r21, Z
	mov T3, T1
     490:	75 2f       	mov	r23, r21
	mov r25, T3 
     492:	97 2f       	mov	r25, r23
	mov r28, ST30
     494:	cc 2d       	mov	r28, r12
	ld  T0, Y
     496:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     498:	94 27       	eor	r25, r20

	mov r30, ST01
     49a:	e1 2d       	mov	r30, r1
	ld  M0, Z
     49c:	00 81       	ld	r16, Z
	eor T0, M0
     49e:	40 27       	eor	r20, r16
	eor T3, M0
     4a0:	70 27       	eor	r23, r16
	eor r25, M0 
     4a2:	90 27       	eor	r25, r16
	mov r28, ST01
     4a4:	c1 2d       	mov	r28, r1
	ld  M0, Y
     4a6:	08 81       	ld	r16, Y
	eor T0, M0
     4a8:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     4aa:	50 27       	eor	r21, r16

	mov r30, ST12
     4ac:	e6 2d       	mov	r30, r6
	ld  M0, Z
     4ae:	00 81       	ld	r16, Z
	eor T0, M0
     4b0:	40 27       	eor	r20, r16
	eor T1, M0
     4b2:	50 27       	eor	r21, r16
	eor r25, M0 
     4b4:	90 27       	eor	r25, r16
	mov r28, ST12
     4b6:	c6 2d       	mov	r28, r6
	ld  M0, Y
     4b8:	08 81       	ld	r16, Y
	eor T1, M0
     4ba:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     4bc:	70 27       	eor	r23, r16

	mov r30, ST23
     4be:	eb 2d       	mov	r30, r11
	ld  M0, Z
     4c0:	00 81       	ld	r16, Z
	eor T0, M0
     4c2:	40 27       	eor	r20, r16
	eor T1, M0
     4c4:	50 27       	eor	r21, r16
	eor T3, M0 
     4c6:	70 27       	eor	r23, r16
	mov r28, ST23
     4c8:	cb 2d       	mov	r28, r11
	ld  M0, Y
     4ca:	08 81       	ld	r16, Y
	eor T3, M0
     4cc:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     4ce:	90 27       	eor	r25, r16

	mov ST30, T0
     4d0:	c4 2e       	mov	r12, r20
	mov ST31, T1
     4d2:	d5 2e       	mov	r13, r21
	mov ST32, T3
     4d4:	e7 2e       	mov	r14, r23
	mov ST33, r25
     4d6:	f9 2e       	mov	r15, r25
	mov ST01, M1
     4d8:	11 2e       	mov	r1, r17
	mov ST02, M2
     4da:	22 2e       	mov	r2, r18
	mov ST12, T2
     4dc:	66 2e       	mov	r6, r22
	mov ST23, M3
     4de:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     4e0:	0d 91       	ld	r16, X+
     4e2:	00 26       	eor	r0, r16
     4e4:	0d 91       	ld	r16, X+
     4e6:	10 26       	eor	r1, r16
     4e8:	0d 91       	ld	r16, X+
     4ea:	20 26       	eor	r2, r16
     4ec:	0d 91       	ld	r16, X+
     4ee:	30 26       	eor	r3, r16
     4f0:	0d 91       	ld	r16, X+
     4f2:	40 26       	eor	r4, r16
     4f4:	0d 91       	ld	r16, X+
     4f6:	50 26       	eor	r5, r16
     4f8:	0d 91       	ld	r16, X+
     4fa:	60 26       	eor	r6, r16
     4fc:	0d 91       	ld	r16, X+
     4fe:	70 26       	eor	r7, r16
     500:	0d 91       	ld	r16, X+
     502:	80 26       	eor	r8, r16
     504:	0d 91       	ld	r16, X+
     506:	90 26       	eor	r9, r16
     508:	0d 91       	ld	r16, X+
     50a:	a0 26       	eor	r10, r16
     50c:	0d 91       	ld	r16, X+
     50e:	b0 26       	eor	r11, r16
     510:	0d 91       	ld	r16, X+
     512:	c0 26       	eor	r12, r16
     514:	0d 91       	ld	r16, X+
     516:	d0 26       	eor	r13, r16
     518:	0d 91       	ld	r16, X+
     51a:	e0 26       	eor	r14, r16
     51c:	0d 91       	ld	r16, X+
     51e:	f0 26       	eor	r15, r16
	
	pop r21
     520:	5f 91       	pop	r21
	pop r20
     522:	4f 91       	pop	r20
	movw r30, r20
     524:	fa 01       	movw	r30, r20
	push r20
     526:	4f 93       	push	r20
	push r21
     528:	5f 93       	push	r21
	st Z+, ST10
     52a:	41 92       	st	Z+, r4
	st Z+, ST11
     52c:	51 92       	st	Z+, r5
	st Z+, ST12
     52e:	61 92       	st	Z+, r6
	st Z+, ST13
     530:	71 92       	st	Z+, r7
	st Z+, ST20
     532:	81 92       	st	Z+, r8
	st Z+, ST21
     534:	91 92       	st	Z+, r9
	st Z+, ST22
     536:	a1 92       	st	Z+, r10
	st Z+, ST23
     538:	b1 92       	st	Z+, r11
	st Z+, ST30
     53a:	c1 92       	st	Z+, r12
	st Z+, ST31
     53c:	d1 92       	st	Z+, r13
	st Z+, ST32
     53e:	e1 92       	st	Z+, r14
	st Z+, ST33
     540:	f1 92       	st	Z+, r15
	
	//2 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     542:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     544:	10 81       	ld	r17, Z
	mov M2, M1
     546:	21 2f       	mov	r18, r17
	mov M3, M2 
     548:	32 2f       	mov	r19, r18
	mov r28, ST00
     54a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     54c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     54e:	30 27       	eor	r19, r16

	mov r30, ST11
     550:	e5 2d       	mov	r30, r5
	ld  T0, Z
     552:	40 81       	ld	r20, Z
	eor M0, T0
     554:	04 27       	eor	r16, r20
	eor M2, T0
     556:	24 27       	eor	r18, r20
	eor M3, T0 
     558:	34 27       	eor	r19, r20
	mov r28, ST11
     55a:	c5 2d       	mov	r28, r5
	ld  T0, Y
     55c:	48 81       	ld	r20, Y
	eor M0, T0
     55e:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     560:	14 27       	eor	r17, r20

	mov r30, ST22
     562:	ea 2d       	mov	r30, r10
	ld  T0, Z
     564:	40 81       	ld	r20, Z
	eor M0, T0
     566:	04 27       	eor	r16, r20
	eor M1, T0
     568:	14 27       	eor	r17, r20
	eor M3, T0
     56a:	34 27       	eor	r19, r20
	mov r28, ST22
     56c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     56e:	48 81       	ld	r20, Y
	eor M1, T0
     570:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     572:	24 27       	eor	r18, r20

	mov r30, ST33
     574:	ef 2d       	mov	r30, r15
	ld  T0, Z
     576:	40 81       	ld	r20, Z
	eor M0, T0
     578:	04 27       	eor	r16, r20
	eor M1, T0
     57a:	14 27       	eor	r17, r20
	eor M2, T0 
     57c:	24 27       	eor	r18, r20
	mov r28, ST33
     57e:	cf 2d       	mov	r28, r15
	ld  T0, Y
     580:	48 81       	ld	r20, Y
	eor M2, T0
     582:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     584:	34 27       	eor	r19, r20

	mov ST00, M0
     586:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     588:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     58a:	50 81       	ld	r21, Z
	mov T2, T1
     58c:	65 2f       	mov	r22, r21
	mov T3, T2 
     58e:	76 2f       	mov	r23, r22
	mov r28, ST10
     590:	c4 2d       	mov	r28, r4
	ld  T0, Y
     592:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     594:	74 27       	eor	r23, r20

	mov r30, ST21
     596:	e9 2d       	mov	r30, r9
	ld  M0, Z
     598:	00 81       	ld	r16, Z
	eor T0, M0
     59a:	40 27       	eor	r20, r16
	eor T2, M0
     59c:	60 27       	eor	r22, r16
	eor T3, M0 
     59e:	70 27       	eor	r23, r16
	mov r28, ST21
     5a0:	c9 2d       	mov	r28, r9
	ld  M0, Y
     5a2:	08 81       	ld	r16, Y
	eor T0, M0
     5a4:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     5a6:	50 27       	eor	r21, r16

	mov r30, ST32
     5a8:	ee 2d       	mov	r30, r14
	ld  M0, Z
     5aa:	00 81       	ld	r16, Z
	eor T0, M0
     5ac:	40 27       	eor	r20, r16
	eor T1, M0
     5ae:	50 27       	eor	r21, r16
	eor T3, M0 
     5b0:	70 27       	eor	r23, r16
	mov r28, ST32
     5b2:	ce 2d       	mov	r28, r14
	ld  M0, Y
     5b4:	08 81       	ld	r16, Y
	eor T1, M0
     5b6:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     5b8:	60 27       	eor	r22, r16

	mov r30, ST03
     5ba:	e3 2d       	mov	r30, r3
	ld  M0, Z
     5bc:	00 81       	ld	r16, Z
	eor T0, M0
     5be:	40 27       	eor	r20, r16
	eor T1, M0
     5c0:	50 27       	eor	r21, r16
	eor T2, M0 
     5c2:	60 27       	eor	r22, r16
	mov r28, ST03
     5c4:	c3 2d       	mov	r28, r3
	ld  M0, Y
     5c6:	08 81       	ld	r16, Y
	eor T2, M0
     5c8:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     5ca:	70 27       	eor	r23, r16

	mov ST10, T0
     5cc:	44 2e       	mov	r4, r20
	mov ST11, T1
     5ce:	55 2e       	mov	r5, r21
	mov ST03, M3
     5d0:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     5d2:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     5d4:	40 81       	ld	r20, Z
	mov T1, T0
     5d6:	54 2f       	mov	r21, r20
	mov M3, T1 
     5d8:	35 2f       	mov	r19, r21
	mov r28, ST20
     5da:	c8 2d       	mov	r28, r8
	ld  M0, Y
     5dc:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     5de:	30 27       	eor	r19, r16

	mov r30, ST31
     5e0:	ed 2d       	mov	r30, r13
	ld  r25, Z
     5e2:	90 81       	ld	r25, Z
	eor M0, r25
     5e4:	09 27       	eor	r16, r25
	eor T1, r25
     5e6:	59 27       	eor	r21, r25
	eor M3, r25
     5e8:	39 27       	eor	r19, r25
	mov r28, ST31
     5ea:	cd 2d       	mov	r28, r13
	ld  r25, Y
     5ec:	98 81       	ld	r25, Y
	eor M0, r25
     5ee:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     5f0:	49 27       	eor	r20, r25

	mov r30, ST02
     5f2:	e2 2d       	mov	r30, r2
	ld  r25, Z
     5f4:	90 81       	ld	r25, Z
	eor M0, r25
     5f6:	09 27       	eor	r16, r25
	eor T0, r25
     5f8:	49 27       	eor	r20, r25
	eor M3, r25
     5fa:	39 27       	eor	r19, r25
	mov r28, ST02
     5fc:	c2 2d       	mov	r28, r2
	ld  r25, Y
     5fe:	98 81       	ld	r25, Y
	eor T0, r25
     600:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     602:	59 27       	eor	r21, r25

	mov r30, ST13
     604:	e7 2d       	mov	r30, r7
	ld  r25, Z
     606:	90 81       	ld	r25, Z
	eor M0, r25
     608:	09 27       	eor	r16, r25
	eor T0, r25
     60a:	49 27       	eor	r20, r25
	eor T1, r25 
     60c:	59 27       	eor	r21, r25
	mov r28, ST13
     60e:	c7 2d       	mov	r28, r7
	ld  r25, Y
     610:	98 81       	ld	r25, Y
	eor T1, r25
     612:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     614:	39 27       	eor	r19, r25

	mov ST20, M0
     616:	80 2e       	mov	r8, r16
	mov ST21, T0
     618:	94 2e       	mov	r9, r20
	mov ST22, T1
     61a:	a5 2e       	mov	r10, r21
	mov ST13, T3
     61c:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     61e:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     620:	50 81       	ld	r21, Z
	mov T3, T1
     622:	75 2f       	mov	r23, r21
	mov r25, T3 
     624:	97 2f       	mov	r25, r23
	mov r28, ST30
     626:	cc 2d       	mov	r28, r12
	ld  T0, Y
     628:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     62a:	94 27       	eor	r25, r20

	mov r30, ST01
     62c:	e1 2d       	mov	r30, r1
	ld  M0, Z
     62e:	00 81       	ld	r16, Z
	eor T0, M0
     630:	40 27       	eor	r20, r16
	eor T3, M0
     632:	70 27       	eor	r23, r16
	eor r25, M0 
     634:	90 27       	eor	r25, r16
	mov r28, ST01
     636:	c1 2d       	mov	r28, r1
	ld  M0, Y
     638:	08 81       	ld	r16, Y
	eor T0, M0
     63a:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     63c:	50 27       	eor	r21, r16

	mov r30, ST12
     63e:	e6 2d       	mov	r30, r6
	ld  M0, Z
     640:	00 81       	ld	r16, Z
	eor T0, M0
     642:	40 27       	eor	r20, r16
	eor T1, M0
     644:	50 27       	eor	r21, r16
	eor r25, M0 
     646:	90 27       	eor	r25, r16
	mov r28, ST12
     648:	c6 2d       	mov	r28, r6
	ld  M0, Y
     64a:	08 81       	ld	r16, Y
	eor T1, M0
     64c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     64e:	70 27       	eor	r23, r16

	mov r30, ST23
     650:	eb 2d       	mov	r30, r11
	ld  M0, Z
     652:	00 81       	ld	r16, Z
	eor T0, M0
     654:	40 27       	eor	r20, r16
	eor T1, M0
     656:	50 27       	eor	r21, r16
	eor T3, M0 
     658:	70 27       	eor	r23, r16
	mov r28, ST23
     65a:	cb 2d       	mov	r28, r11
	ld  M0, Y
     65c:	08 81       	ld	r16, Y
	eor T3, M0
     65e:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     660:	90 27       	eor	r25, r16

	mov ST30, T0
     662:	c4 2e       	mov	r12, r20
	mov ST31, T1
     664:	d5 2e       	mov	r13, r21
	mov ST32, T3
     666:	e7 2e       	mov	r14, r23
	mov ST33, r25
     668:	f9 2e       	mov	r15, r25
	mov ST01, M1
     66a:	11 2e       	mov	r1, r17
	mov ST02, M2
     66c:	22 2e       	mov	r2, r18
	mov ST12, T2
     66e:	66 2e       	mov	r6, r22
	mov ST23, M3
     670:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     672:	0d 91       	ld	r16, X+
     674:	00 26       	eor	r0, r16
     676:	0d 91       	ld	r16, X+
     678:	10 26       	eor	r1, r16
     67a:	0d 91       	ld	r16, X+
     67c:	20 26       	eor	r2, r16
     67e:	0d 91       	ld	r16, X+
     680:	30 26       	eor	r3, r16
     682:	0d 91       	ld	r16, X+
     684:	40 26       	eor	r4, r16
     686:	0d 91       	ld	r16, X+
     688:	50 26       	eor	r5, r16
     68a:	0d 91       	ld	r16, X+
     68c:	60 26       	eor	r6, r16
     68e:	0d 91       	ld	r16, X+
     690:	70 26       	eor	r7, r16
     692:	0d 91       	ld	r16, X+
     694:	80 26       	eor	r8, r16
     696:	0d 91       	ld	r16, X+
     698:	90 26       	eor	r9, r16
     69a:	0d 91       	ld	r16, X+
     69c:	a0 26       	eor	r10, r16
     69e:	0d 91       	ld	r16, X+
     6a0:	b0 26       	eor	r11, r16
     6a2:	0d 91       	ld	r16, X+
     6a4:	c0 26       	eor	r12, r16
     6a6:	0d 91       	ld	r16, X+
     6a8:	d0 26       	eor	r13, r16
     6aa:	0d 91       	ld	r16, X+
     6ac:	e0 26       	eor	r14, r16
     6ae:	0d 91       	ld	r16, X+
     6b0:	f0 26       	eor	r15, r16
	
	//3 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     6b2:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     6b4:	10 81       	ld	r17, Z
	mov M2, M1
     6b6:	21 2f       	mov	r18, r17
	mov M3, M2 
     6b8:	32 2f       	mov	r19, r18
	mov r28, ST00
     6ba:	c0 2d       	mov	r28, r0
	ld  M0, Y
     6bc:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     6be:	30 27       	eor	r19, r16

	mov r30, ST11
     6c0:	e5 2d       	mov	r30, r5
	ld  T0, Z
     6c2:	40 81       	ld	r20, Z
	eor M0, T0
     6c4:	04 27       	eor	r16, r20
	eor M2, T0
     6c6:	24 27       	eor	r18, r20
	eor M3, T0 
     6c8:	34 27       	eor	r19, r20
	mov r28, ST11
     6ca:	c5 2d       	mov	r28, r5
	ld  T0, Y
     6cc:	48 81       	ld	r20, Y
	eor M0, T0
     6ce:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     6d0:	14 27       	eor	r17, r20

	mov r30, ST22
     6d2:	ea 2d       	mov	r30, r10
	ld  T0, Z
     6d4:	40 81       	ld	r20, Z
	eor M0, T0
     6d6:	04 27       	eor	r16, r20
	eor M1, T0
     6d8:	14 27       	eor	r17, r20
	eor M3, T0
     6da:	34 27       	eor	r19, r20
	mov r28, ST22
     6dc:	ca 2d       	mov	r28, r10
	ld  T0, Y
     6de:	48 81       	ld	r20, Y
	eor M1, T0
     6e0:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     6e2:	24 27       	eor	r18, r20

	mov r30, ST33
     6e4:	ef 2d       	mov	r30, r15
	ld  T0, Z
     6e6:	40 81       	ld	r20, Z
	eor M0, T0
     6e8:	04 27       	eor	r16, r20
	eor M1, T0
     6ea:	14 27       	eor	r17, r20
	eor M2, T0 
     6ec:	24 27       	eor	r18, r20
	mov r28, ST33
     6ee:	cf 2d       	mov	r28, r15
	ld  T0, Y
     6f0:	48 81       	ld	r20, Y
	eor M2, T0
     6f2:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     6f4:	34 27       	eor	r19, r20

	mov ST00, M0
     6f6:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     6f8:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     6fa:	50 81       	ld	r21, Z
	mov T2, T1
     6fc:	65 2f       	mov	r22, r21
	mov T3, T2 
     6fe:	76 2f       	mov	r23, r22
	mov r28, ST10
     700:	c4 2d       	mov	r28, r4
	ld  T0, Y
     702:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     704:	74 27       	eor	r23, r20

	mov r30, ST21
     706:	e9 2d       	mov	r30, r9
	ld  M0, Z
     708:	00 81       	ld	r16, Z
	eor T0, M0
     70a:	40 27       	eor	r20, r16
	eor T2, M0
     70c:	60 27       	eor	r22, r16
	eor T3, M0 
     70e:	70 27       	eor	r23, r16
	mov r28, ST21
     710:	c9 2d       	mov	r28, r9
	ld  M0, Y
     712:	08 81       	ld	r16, Y
	eor T0, M0
     714:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     716:	50 27       	eor	r21, r16

	mov r30, ST32
     718:	ee 2d       	mov	r30, r14
	ld  M0, Z
     71a:	00 81       	ld	r16, Z
	eor T0, M0
     71c:	40 27       	eor	r20, r16
	eor T1, M0
     71e:	50 27       	eor	r21, r16
	eor T3, M0 
     720:	70 27       	eor	r23, r16
	mov r28, ST32
     722:	ce 2d       	mov	r28, r14
	ld  M0, Y
     724:	08 81       	ld	r16, Y
	eor T1, M0
     726:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     728:	60 27       	eor	r22, r16

	mov r30, ST03
     72a:	e3 2d       	mov	r30, r3
	ld  M0, Z
     72c:	00 81       	ld	r16, Z
	eor T0, M0
     72e:	40 27       	eor	r20, r16
	eor T1, M0
     730:	50 27       	eor	r21, r16
	eor T2, M0 
     732:	60 27       	eor	r22, r16
	mov r28, ST03
     734:	c3 2d       	mov	r28, r3
	ld  M0, Y
     736:	08 81       	ld	r16, Y
	eor T2, M0
     738:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     73a:	70 27       	eor	r23, r16

	mov ST10, T0
     73c:	44 2e       	mov	r4, r20
	mov ST11, T1
     73e:	55 2e       	mov	r5, r21
	mov ST03, M3
     740:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     742:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     744:	40 81       	ld	r20, Z
	mov T1, T0
     746:	54 2f       	mov	r21, r20
	mov M3, T1 
     748:	35 2f       	mov	r19, r21
	mov r28, ST20
     74a:	c8 2d       	mov	r28, r8
	ld  M0, Y
     74c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     74e:	30 27       	eor	r19, r16

	mov r30, ST31
     750:	ed 2d       	mov	r30, r13
	ld  r25, Z
     752:	90 81       	ld	r25, Z
	eor M0, r25
     754:	09 27       	eor	r16, r25
	eor T1, r25
     756:	59 27       	eor	r21, r25
	eor M3, r25
     758:	39 27       	eor	r19, r25
	mov r28, ST31
     75a:	cd 2d       	mov	r28, r13
	ld  r25, Y
     75c:	98 81       	ld	r25, Y
	eor M0, r25
     75e:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     760:	49 27       	eor	r20, r25

	mov r30, ST02
     762:	e2 2d       	mov	r30, r2
	ld  r25, Z
     764:	90 81       	ld	r25, Z
	eor M0, r25
     766:	09 27       	eor	r16, r25
	eor T0, r25
     768:	49 27       	eor	r20, r25
	eor M3, r25
     76a:	39 27       	eor	r19, r25
	mov r28, ST02
     76c:	c2 2d       	mov	r28, r2
	ld  r25, Y
     76e:	98 81       	ld	r25, Y
	eor T0, r25
     770:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     772:	59 27       	eor	r21, r25

	mov r30, ST13
     774:	e7 2d       	mov	r30, r7
	ld  r25, Z
     776:	90 81       	ld	r25, Z
	eor M0, r25
     778:	09 27       	eor	r16, r25
	eor T0, r25
     77a:	49 27       	eor	r20, r25
	eor T1, r25 
     77c:	59 27       	eor	r21, r25
	mov r28, ST13
     77e:	c7 2d       	mov	r28, r7
	ld  r25, Y
     780:	98 81       	ld	r25, Y
	eor T1, r25
     782:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     784:	39 27       	eor	r19, r25

	mov ST20, M0
     786:	80 2e       	mov	r8, r16
	mov ST21, T0
     788:	94 2e       	mov	r9, r20
	mov ST22, T1
     78a:	a5 2e       	mov	r10, r21
	mov ST13, T3
     78c:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     78e:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     790:	50 81       	ld	r21, Z
	mov T3, T1
     792:	75 2f       	mov	r23, r21
	mov r25, T3 
     794:	97 2f       	mov	r25, r23
	mov r28, ST30
     796:	cc 2d       	mov	r28, r12
	ld  T0, Y
     798:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     79a:	94 27       	eor	r25, r20

	mov r30, ST01
     79c:	e1 2d       	mov	r30, r1
	ld  M0, Z
     79e:	00 81       	ld	r16, Z
	eor T0, M0
     7a0:	40 27       	eor	r20, r16
	eor T3, M0
     7a2:	70 27       	eor	r23, r16
	eor r25, M0 
     7a4:	90 27       	eor	r25, r16
	mov r28, ST01
     7a6:	c1 2d       	mov	r28, r1
	ld  M0, Y
     7a8:	08 81       	ld	r16, Y
	eor T0, M0
     7aa:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     7ac:	50 27       	eor	r21, r16

	mov r30, ST12
     7ae:	e6 2d       	mov	r30, r6
	ld  M0, Z
     7b0:	00 81       	ld	r16, Z
	eor T0, M0
     7b2:	40 27       	eor	r20, r16
	eor T1, M0
     7b4:	50 27       	eor	r21, r16
	eor r25, M0 
     7b6:	90 27       	eor	r25, r16
	mov r28, ST12
     7b8:	c6 2d       	mov	r28, r6
	ld  M0, Y
     7ba:	08 81       	ld	r16, Y
	eor T1, M0
     7bc:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     7be:	70 27       	eor	r23, r16

	mov r30, ST23
     7c0:	eb 2d       	mov	r30, r11
	ld  M0, Z
     7c2:	00 81       	ld	r16, Z
	eor T0, M0
     7c4:	40 27       	eor	r20, r16
	eor T1, M0
     7c6:	50 27       	eor	r21, r16
	eor T3, M0 
     7c8:	70 27       	eor	r23, r16
	mov r28, ST23
     7ca:	cb 2d       	mov	r28, r11
	ld  M0, Y
     7cc:	08 81       	ld	r16, Y
	eor T3, M0
     7ce:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     7d0:	90 27       	eor	r25, r16

	mov ST30, T0
     7d2:	c4 2e       	mov	r12, r20
	mov ST31, T1
     7d4:	d5 2e       	mov	r13, r21
	mov ST32, T3
     7d6:	e7 2e       	mov	r14, r23
	mov ST33, r25
     7d8:	f9 2e       	mov	r15, r25
	mov ST01, M1
     7da:	11 2e       	mov	r1, r17
	mov ST02, M2
     7dc:	22 2e       	mov	r2, r18
	mov ST12, T2
     7de:	66 2e       	mov	r6, r22
	mov ST23, M3
     7e0:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     7e2:	0d 91       	ld	r16, X+
     7e4:	00 26       	eor	r0, r16
     7e6:	0d 91       	ld	r16, X+
     7e8:	10 26       	eor	r1, r16
     7ea:	0d 91       	ld	r16, X+
     7ec:	20 26       	eor	r2, r16
     7ee:	0d 91       	ld	r16, X+
     7f0:	30 26       	eor	r3, r16
     7f2:	0d 91       	ld	r16, X+
     7f4:	40 26       	eor	r4, r16
     7f6:	0d 91       	ld	r16, X+
     7f8:	50 26       	eor	r5, r16
     7fa:	0d 91       	ld	r16, X+
     7fc:	60 26       	eor	r6, r16
     7fe:	0d 91       	ld	r16, X+
     800:	70 26       	eor	r7, r16
     802:	0d 91       	ld	r16, X+
     804:	80 26       	eor	r8, r16
     806:	0d 91       	ld	r16, X+
     808:	90 26       	eor	r9, r16
     80a:	0d 91       	ld	r16, X+
     80c:	a0 26       	eor	r10, r16
     80e:	0d 91       	ld	r16, X+
     810:	b0 26       	eor	r11, r16
     812:	0d 91       	ld	r16, X+
     814:	c0 26       	eor	r12, r16
     816:	0d 91       	ld	r16, X+
     818:	d0 26       	eor	r13, r16
     81a:	0d 91       	ld	r16, X+
     81c:	e0 26       	eor	r14, r16
     81e:	0d 91       	ld	r16, X+
     820:	f0 26       	eor	r15, r16
	
	//4 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     822:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     824:	10 81       	ld	r17, Z
	mov M2, M1
     826:	21 2f       	mov	r18, r17
	mov M3, M2 
     828:	32 2f       	mov	r19, r18
	mov r28, ST00
     82a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     82c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     82e:	30 27       	eor	r19, r16

	mov r30, ST11
     830:	e5 2d       	mov	r30, r5
	ld  T0, Z
     832:	40 81       	ld	r20, Z
	eor M0, T0
     834:	04 27       	eor	r16, r20
	eor M2, T0
     836:	24 27       	eor	r18, r20
	eor M3, T0 
     838:	34 27       	eor	r19, r20
	mov r28, ST11
     83a:	c5 2d       	mov	r28, r5
	ld  T0, Y
     83c:	48 81       	ld	r20, Y
	eor M0, T0
     83e:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     840:	14 27       	eor	r17, r20

	mov r30, ST22
     842:	ea 2d       	mov	r30, r10
	ld  T0, Z
     844:	40 81       	ld	r20, Z
	eor M0, T0
     846:	04 27       	eor	r16, r20
	eor M1, T0
     848:	14 27       	eor	r17, r20
	eor M3, T0
     84a:	34 27       	eor	r19, r20
	mov r28, ST22
     84c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     84e:	48 81       	ld	r20, Y
	eor M1, T0
     850:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     852:	24 27       	eor	r18, r20

	mov r30, ST33
     854:	ef 2d       	mov	r30, r15
	ld  T0, Z
     856:	40 81       	ld	r20, Z
	eor M0, T0
     858:	04 27       	eor	r16, r20
	eor M1, T0
     85a:	14 27       	eor	r17, r20
	eor M2, T0 
     85c:	24 27       	eor	r18, r20
	mov r28, ST33
     85e:	cf 2d       	mov	r28, r15
	ld  T0, Y
     860:	48 81       	ld	r20, Y
	eor M2, T0
     862:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     864:	34 27       	eor	r19, r20

	mov ST00, M0
     866:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     868:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     86a:	50 81       	ld	r21, Z
	mov T2, T1
     86c:	65 2f       	mov	r22, r21
	mov T3, T2 
     86e:	76 2f       	mov	r23, r22
	mov r28, ST10
     870:	c4 2d       	mov	r28, r4
	ld  T0, Y
     872:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     874:	74 27       	eor	r23, r20

	mov r30, ST21
     876:	e9 2d       	mov	r30, r9
	ld  M0, Z
     878:	00 81       	ld	r16, Z
	eor T0, M0
     87a:	40 27       	eor	r20, r16
	eor T2, M0
     87c:	60 27       	eor	r22, r16
	eor T3, M0 
     87e:	70 27       	eor	r23, r16
	mov r28, ST21
     880:	c9 2d       	mov	r28, r9
	ld  M0, Y
     882:	08 81       	ld	r16, Y
	eor T0, M0
     884:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     886:	50 27       	eor	r21, r16

	mov r30, ST32
     888:	ee 2d       	mov	r30, r14
	ld  M0, Z
     88a:	00 81       	ld	r16, Z
	eor T0, M0
     88c:	40 27       	eor	r20, r16
	eor T1, M0
     88e:	50 27       	eor	r21, r16
	eor T3, M0 
     890:	70 27       	eor	r23, r16
	mov r28, ST32
     892:	ce 2d       	mov	r28, r14
	ld  M0, Y
     894:	08 81       	ld	r16, Y
	eor T1, M0
     896:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     898:	60 27       	eor	r22, r16

	mov r30, ST03
     89a:	e3 2d       	mov	r30, r3
	ld  M0, Z
     89c:	00 81       	ld	r16, Z
	eor T0, M0
     89e:	40 27       	eor	r20, r16
	eor T1, M0
     8a0:	50 27       	eor	r21, r16
	eor T2, M0 
     8a2:	60 27       	eor	r22, r16
	mov r28, ST03
     8a4:	c3 2d       	mov	r28, r3
	ld  M0, Y
     8a6:	08 81       	ld	r16, Y
	eor T2, M0
     8a8:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     8aa:	70 27       	eor	r23, r16

	mov ST10, T0
     8ac:	44 2e       	mov	r4, r20
	mov ST11, T1
     8ae:	55 2e       	mov	r5, r21
	mov ST03, M3
     8b0:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     8b2:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     8b4:	40 81       	ld	r20, Z
	mov T1, T0
     8b6:	54 2f       	mov	r21, r20
	mov M3, T1 
     8b8:	35 2f       	mov	r19, r21
	mov r28, ST20
     8ba:	c8 2d       	mov	r28, r8
	ld  M0, Y
     8bc:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     8be:	30 27       	eor	r19, r16

	mov r30, ST31
     8c0:	ed 2d       	mov	r30, r13
	ld  r25, Z
     8c2:	90 81       	ld	r25, Z
	eor M0, r25
     8c4:	09 27       	eor	r16, r25
	eor T1, r25
     8c6:	59 27       	eor	r21, r25
	eor M3, r25
     8c8:	39 27       	eor	r19, r25
	mov r28, ST31
     8ca:	cd 2d       	mov	r28, r13
	ld  r25, Y
     8cc:	98 81       	ld	r25, Y
	eor M0, r25
     8ce:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     8d0:	49 27       	eor	r20, r25

	mov r30, ST02
     8d2:	e2 2d       	mov	r30, r2
	ld  r25, Z
     8d4:	90 81       	ld	r25, Z
	eor M0, r25
     8d6:	09 27       	eor	r16, r25
	eor T0, r25
     8d8:	49 27       	eor	r20, r25
	eor M3, r25
     8da:	39 27       	eor	r19, r25
	mov r28, ST02
     8dc:	c2 2d       	mov	r28, r2
	ld  r25, Y
     8de:	98 81       	ld	r25, Y
	eor T0, r25
     8e0:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     8e2:	59 27       	eor	r21, r25

	mov r30, ST13
     8e4:	e7 2d       	mov	r30, r7
	ld  r25, Z
     8e6:	90 81       	ld	r25, Z
	eor M0, r25
     8e8:	09 27       	eor	r16, r25
	eor T0, r25
     8ea:	49 27       	eor	r20, r25
	eor T1, r25 
     8ec:	59 27       	eor	r21, r25
	mov r28, ST13
     8ee:	c7 2d       	mov	r28, r7
	ld  r25, Y
     8f0:	98 81       	ld	r25, Y
	eor T1, r25
     8f2:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     8f4:	39 27       	eor	r19, r25

	mov ST20, M0
     8f6:	80 2e       	mov	r8, r16
	mov ST21, T0
     8f8:	94 2e       	mov	r9, r20
	mov ST22, T1
     8fa:	a5 2e       	mov	r10, r21
	mov ST13, T3
     8fc:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     8fe:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     900:	50 81       	ld	r21, Z
	mov T3, T1
     902:	75 2f       	mov	r23, r21
	mov r25, T3 
     904:	97 2f       	mov	r25, r23
	mov r28, ST30
     906:	cc 2d       	mov	r28, r12
	ld  T0, Y
     908:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     90a:	94 27       	eor	r25, r20

	mov r30, ST01
     90c:	e1 2d       	mov	r30, r1
	ld  M0, Z
     90e:	00 81       	ld	r16, Z
	eor T0, M0
     910:	40 27       	eor	r20, r16
	eor T3, M0
     912:	70 27       	eor	r23, r16
	eor r25, M0 
     914:	90 27       	eor	r25, r16
	mov r28, ST01
     916:	c1 2d       	mov	r28, r1
	ld  M0, Y
     918:	08 81       	ld	r16, Y
	eor T0, M0
     91a:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     91c:	50 27       	eor	r21, r16

	mov r30, ST12
     91e:	e6 2d       	mov	r30, r6
	ld  M0, Z
     920:	00 81       	ld	r16, Z
	eor T0, M0
     922:	40 27       	eor	r20, r16
	eor T1, M0
     924:	50 27       	eor	r21, r16
	eor r25, M0 
     926:	90 27       	eor	r25, r16
	mov r28, ST12
     928:	c6 2d       	mov	r28, r6
	ld  M0, Y
     92a:	08 81       	ld	r16, Y
	eor T1, M0
     92c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     92e:	70 27       	eor	r23, r16

	mov r30, ST23
     930:	eb 2d       	mov	r30, r11
	ld  M0, Z
     932:	00 81       	ld	r16, Z
	eor T0, M0
     934:	40 27       	eor	r20, r16
	eor T1, M0
     936:	50 27       	eor	r21, r16
	eor T3, M0 
     938:	70 27       	eor	r23, r16
	mov r28, ST23
     93a:	cb 2d       	mov	r28, r11
	ld  M0, Y
     93c:	08 81       	ld	r16, Y
	eor T3, M0
     93e:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     940:	90 27       	eor	r25, r16

	mov ST30, T0
     942:	c4 2e       	mov	r12, r20
	mov ST31, T1
     944:	d5 2e       	mov	r13, r21
	mov ST32, T3
     946:	e7 2e       	mov	r14, r23
	mov ST33, r25
     948:	f9 2e       	mov	r15, r25
	mov ST01, M1
     94a:	11 2e       	mov	r1, r17
	mov ST02, M2
     94c:	22 2e       	mov	r2, r18
	mov ST12, T2
     94e:	66 2e       	mov	r6, r22
	mov ST23, M3
     950:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     952:	0d 91       	ld	r16, X+
     954:	00 26       	eor	r0, r16
     956:	0d 91       	ld	r16, X+
     958:	10 26       	eor	r1, r16
     95a:	0d 91       	ld	r16, X+
     95c:	20 26       	eor	r2, r16
     95e:	0d 91       	ld	r16, X+
     960:	30 26       	eor	r3, r16
     962:	0d 91       	ld	r16, X+
     964:	40 26       	eor	r4, r16
     966:	0d 91       	ld	r16, X+
     968:	50 26       	eor	r5, r16
     96a:	0d 91       	ld	r16, X+
     96c:	60 26       	eor	r6, r16
     96e:	0d 91       	ld	r16, X+
     970:	70 26       	eor	r7, r16
     972:	0d 91       	ld	r16, X+
     974:	80 26       	eor	r8, r16
     976:	0d 91       	ld	r16, X+
     978:	90 26       	eor	r9, r16
     97a:	0d 91       	ld	r16, X+
     97c:	a0 26       	eor	r10, r16
     97e:	0d 91       	ld	r16, X+
     980:	b0 26       	eor	r11, r16
     982:	0d 91       	ld	r16, X+
     984:	c0 26       	eor	r12, r16
     986:	0d 91       	ld	r16, X+
     988:	d0 26       	eor	r13, r16
     98a:	0d 91       	ld	r16, X+
     98c:	e0 26       	eor	r14, r16
     98e:	0d 91       	ld	r16, X+
     990:	f0 26       	eor	r15, r16
	
	//5 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     992:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     994:	10 81       	ld	r17, Z
	mov M2, M1
     996:	21 2f       	mov	r18, r17
	mov M3, M2 
     998:	32 2f       	mov	r19, r18
	mov r28, ST00
     99a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     99c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     99e:	30 27       	eor	r19, r16

	mov r30, ST11
     9a0:	e5 2d       	mov	r30, r5
	ld  T0, Z
     9a2:	40 81       	ld	r20, Z
	eor M0, T0
     9a4:	04 27       	eor	r16, r20
	eor M2, T0
     9a6:	24 27       	eor	r18, r20
	eor M3, T0 
     9a8:	34 27       	eor	r19, r20
	mov r28, ST11
     9aa:	c5 2d       	mov	r28, r5
	ld  T0, Y
     9ac:	48 81       	ld	r20, Y
	eor M0, T0
     9ae:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     9b0:	14 27       	eor	r17, r20

	mov r30, ST22
     9b2:	ea 2d       	mov	r30, r10
	ld  T0, Z
     9b4:	40 81       	ld	r20, Z
	eor M0, T0
     9b6:	04 27       	eor	r16, r20
	eor M1, T0
     9b8:	14 27       	eor	r17, r20
	eor M3, T0
     9ba:	34 27       	eor	r19, r20
	mov r28, ST22
     9bc:	ca 2d       	mov	r28, r10
	ld  T0, Y
     9be:	48 81       	ld	r20, Y
	eor M1, T0
     9c0:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     9c2:	24 27       	eor	r18, r20

	mov r30, ST33
     9c4:	ef 2d       	mov	r30, r15
	ld  T0, Z
     9c6:	40 81       	ld	r20, Z
	eor M0, T0
     9c8:	04 27       	eor	r16, r20
	eor M1, T0
     9ca:	14 27       	eor	r17, r20
	eor M2, T0 
     9cc:	24 27       	eor	r18, r20
	mov r28, ST33
     9ce:	cf 2d       	mov	r28, r15
	ld  T0, Y
     9d0:	48 81       	ld	r20, Y
	eor M2, T0
     9d2:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     9d4:	34 27       	eor	r19, r20

	mov ST00, M0
     9d6:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     9d8:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     9da:	50 81       	ld	r21, Z
	mov T2, T1
     9dc:	65 2f       	mov	r22, r21
	mov T3, T2 
     9de:	76 2f       	mov	r23, r22
	mov r28, ST10
     9e0:	c4 2d       	mov	r28, r4
	ld  T0, Y
     9e2:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     9e4:	74 27       	eor	r23, r20

	mov r30, ST21
     9e6:	e9 2d       	mov	r30, r9
	ld  M0, Z
     9e8:	00 81       	ld	r16, Z
	eor T0, M0
     9ea:	40 27       	eor	r20, r16
	eor T2, M0
     9ec:	60 27       	eor	r22, r16
	eor T3, M0 
     9ee:	70 27       	eor	r23, r16
	mov r28, ST21
     9f0:	c9 2d       	mov	r28, r9
	ld  M0, Y
     9f2:	08 81       	ld	r16, Y
	eor T0, M0
     9f4:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     9f6:	50 27       	eor	r21, r16

	mov r30, ST32
     9f8:	ee 2d       	mov	r30, r14
	ld  M0, Z
     9fa:	00 81       	ld	r16, Z
	eor T0, M0
     9fc:	40 27       	eor	r20, r16
	eor T1, M0
     9fe:	50 27       	eor	r21, r16
	eor T3, M0 
     a00:	70 27       	eor	r23, r16
	mov r28, ST32
     a02:	ce 2d       	mov	r28, r14
	ld  M0, Y
     a04:	08 81       	ld	r16, Y
	eor T1, M0
     a06:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     a08:	60 27       	eor	r22, r16

	mov r30, ST03
     a0a:	e3 2d       	mov	r30, r3
	ld  M0, Z
     a0c:	00 81       	ld	r16, Z
	eor T0, M0
     a0e:	40 27       	eor	r20, r16
	eor T1, M0
     a10:	50 27       	eor	r21, r16
	eor T2, M0 
     a12:	60 27       	eor	r22, r16
	mov r28, ST03
     a14:	c3 2d       	mov	r28, r3
	ld  M0, Y
     a16:	08 81       	ld	r16, Y
	eor T2, M0
     a18:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     a1a:	70 27       	eor	r23, r16

	mov ST10, T0
     a1c:	44 2e       	mov	r4, r20
	mov ST11, T1
     a1e:	55 2e       	mov	r5, r21
	mov ST03, M3
     a20:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     a22:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     a24:	40 81       	ld	r20, Z
	mov T1, T0
     a26:	54 2f       	mov	r21, r20
	mov M3, T1 
     a28:	35 2f       	mov	r19, r21
	mov r28, ST20
     a2a:	c8 2d       	mov	r28, r8
	ld  M0, Y
     a2c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     a2e:	30 27       	eor	r19, r16

	mov r30, ST31
     a30:	ed 2d       	mov	r30, r13
	ld  r25, Z
     a32:	90 81       	ld	r25, Z
	eor M0, r25
     a34:	09 27       	eor	r16, r25
	eor T1, r25
     a36:	59 27       	eor	r21, r25
	eor M3, r25
     a38:	39 27       	eor	r19, r25
	mov r28, ST31
     a3a:	cd 2d       	mov	r28, r13
	ld  r25, Y
     a3c:	98 81       	ld	r25, Y
	eor M0, r25
     a3e:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     a40:	49 27       	eor	r20, r25

	mov r30, ST02
     a42:	e2 2d       	mov	r30, r2
	ld  r25, Z
     a44:	90 81       	ld	r25, Z
	eor M0, r25
     a46:	09 27       	eor	r16, r25
	eor T0, r25
     a48:	49 27       	eor	r20, r25
	eor M3, r25
     a4a:	39 27       	eor	r19, r25
	mov r28, ST02
     a4c:	c2 2d       	mov	r28, r2
	ld  r25, Y
     a4e:	98 81       	ld	r25, Y
	eor T0, r25
     a50:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     a52:	59 27       	eor	r21, r25

	mov r30, ST13
     a54:	e7 2d       	mov	r30, r7
	ld  r25, Z
     a56:	90 81       	ld	r25, Z
	eor M0, r25
     a58:	09 27       	eor	r16, r25
	eor T0, r25
     a5a:	49 27       	eor	r20, r25
	eor T1, r25 
     a5c:	59 27       	eor	r21, r25
	mov r28, ST13
     a5e:	c7 2d       	mov	r28, r7
	ld  r25, Y
     a60:	98 81       	ld	r25, Y
	eor T1, r25
     a62:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     a64:	39 27       	eor	r19, r25

	mov ST20, M0
     a66:	80 2e       	mov	r8, r16
	mov ST21, T0
     a68:	94 2e       	mov	r9, r20
	mov ST22, T1
     a6a:	a5 2e       	mov	r10, r21
	mov ST13, T3
     a6c:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     a6e:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     a70:	50 81       	ld	r21, Z
	mov T3, T1
     a72:	75 2f       	mov	r23, r21
	mov r25, T3 
     a74:	97 2f       	mov	r25, r23
	mov r28, ST30
     a76:	cc 2d       	mov	r28, r12
	ld  T0, Y
     a78:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     a7a:	94 27       	eor	r25, r20

	mov r30, ST01
     a7c:	e1 2d       	mov	r30, r1
	ld  M0, Z
     a7e:	00 81       	ld	r16, Z
	eor T0, M0
     a80:	40 27       	eor	r20, r16
	eor T3, M0
     a82:	70 27       	eor	r23, r16
	eor r25, M0 
     a84:	90 27       	eor	r25, r16
	mov r28, ST01
     a86:	c1 2d       	mov	r28, r1
	ld  M0, Y
     a88:	08 81       	ld	r16, Y
	eor T0, M0
     a8a:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     a8c:	50 27       	eor	r21, r16

	mov r30, ST12
     a8e:	e6 2d       	mov	r30, r6
	ld  M0, Z
     a90:	00 81       	ld	r16, Z
	eor T0, M0
     a92:	40 27       	eor	r20, r16
	eor T1, M0
     a94:	50 27       	eor	r21, r16
	eor r25, M0 
     a96:	90 27       	eor	r25, r16
	mov r28, ST12
     a98:	c6 2d       	mov	r28, r6
	ld  M0, Y
     a9a:	08 81       	ld	r16, Y
	eor T1, M0
     a9c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     a9e:	70 27       	eor	r23, r16

	mov r30, ST23
     aa0:	eb 2d       	mov	r30, r11
	ld  M0, Z
     aa2:	00 81       	ld	r16, Z
	eor T0, M0
     aa4:	40 27       	eor	r20, r16
	eor T1, M0
     aa6:	50 27       	eor	r21, r16
	eor T3, M0 
     aa8:	70 27       	eor	r23, r16
	mov r28, ST23
     aaa:	cb 2d       	mov	r28, r11
	ld  M0, Y
     aac:	08 81       	ld	r16, Y
	eor T3, M0
     aae:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     ab0:	90 27       	eor	r25, r16

	mov ST30, T0
     ab2:	c4 2e       	mov	r12, r20
	mov ST31, T1
     ab4:	d5 2e       	mov	r13, r21
	mov ST32, T3
     ab6:	e7 2e       	mov	r14, r23
	mov ST33, r25
     ab8:	f9 2e       	mov	r15, r25
	mov ST01, M1
     aba:	11 2e       	mov	r1, r17
	mov ST02, M2
     abc:	22 2e       	mov	r2, r18
	mov ST12, T2
     abe:	66 2e       	mov	r6, r22
	mov ST23, M3
     ac0:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     ac2:	0d 91       	ld	r16, X+
     ac4:	00 26       	eor	r0, r16
     ac6:	0d 91       	ld	r16, X+
     ac8:	10 26       	eor	r1, r16
     aca:	0d 91       	ld	r16, X+
     acc:	20 26       	eor	r2, r16
     ace:	0d 91       	ld	r16, X+
     ad0:	30 26       	eor	r3, r16
     ad2:	0d 91       	ld	r16, X+
     ad4:	40 26       	eor	r4, r16
     ad6:	0d 91       	ld	r16, X+
     ad8:	50 26       	eor	r5, r16
     ada:	0d 91       	ld	r16, X+
     adc:	60 26       	eor	r6, r16
     ade:	0d 91       	ld	r16, X+
     ae0:	70 26       	eor	r7, r16
     ae2:	0d 91       	ld	r16, X+
     ae4:	80 26       	eor	r8, r16
     ae6:	0d 91       	ld	r16, X+
     ae8:	90 26       	eor	r9, r16
     aea:	0d 91       	ld	r16, X+
     aec:	a0 26       	eor	r10, r16
     aee:	0d 91       	ld	r16, X+
     af0:	b0 26       	eor	r11, r16
     af2:	0d 91       	ld	r16, X+
     af4:	c0 26       	eor	r12, r16
     af6:	0d 91       	ld	r16, X+
     af8:	d0 26       	eor	r13, r16
     afa:	0d 91       	ld	r16, X+
     afc:	e0 26       	eor	r14, r16
     afe:	0d 91       	ld	r16, X+
     b00:	f0 26       	eor	r15, r16
	
	//6 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     b02:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     b04:	10 81       	ld	r17, Z
	mov M2, M1
     b06:	21 2f       	mov	r18, r17
	mov M3, M2 
     b08:	32 2f       	mov	r19, r18
	mov r28, ST00
     b0a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     b0c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     b0e:	30 27       	eor	r19, r16

	mov r30, ST11
     b10:	e5 2d       	mov	r30, r5
	ld  T0, Z
     b12:	40 81       	ld	r20, Z
	eor M0, T0
     b14:	04 27       	eor	r16, r20
	eor M2, T0
     b16:	24 27       	eor	r18, r20
	eor M3, T0 
     b18:	34 27       	eor	r19, r20
	mov r28, ST11
     b1a:	c5 2d       	mov	r28, r5
	ld  T0, Y
     b1c:	48 81       	ld	r20, Y
	eor M0, T0
     b1e:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     b20:	14 27       	eor	r17, r20

	mov r30, ST22
     b22:	ea 2d       	mov	r30, r10
	ld  T0, Z
     b24:	40 81       	ld	r20, Z
	eor M0, T0
     b26:	04 27       	eor	r16, r20
	eor M1, T0
     b28:	14 27       	eor	r17, r20
	eor M3, T0
     b2a:	34 27       	eor	r19, r20
	mov r28, ST22
     b2c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     b2e:	48 81       	ld	r20, Y
	eor M1, T0
     b30:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     b32:	24 27       	eor	r18, r20

	mov r30, ST33
     b34:	ef 2d       	mov	r30, r15
	ld  T0, Z
     b36:	40 81       	ld	r20, Z
	eor M0, T0
     b38:	04 27       	eor	r16, r20
	eor M1, T0
     b3a:	14 27       	eor	r17, r20
	eor M2, T0 
     b3c:	24 27       	eor	r18, r20
	mov r28, ST33
     b3e:	cf 2d       	mov	r28, r15
	ld  T0, Y
     b40:	48 81       	ld	r20, Y
	eor M2, T0
     b42:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     b44:	34 27       	eor	r19, r20

	mov ST00, M0
     b46:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     b48:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     b4a:	50 81       	ld	r21, Z
	mov T2, T1
     b4c:	65 2f       	mov	r22, r21
	mov T3, T2 
     b4e:	76 2f       	mov	r23, r22
	mov r28, ST10
     b50:	c4 2d       	mov	r28, r4
	ld  T0, Y
     b52:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     b54:	74 27       	eor	r23, r20

	mov r30, ST21
     b56:	e9 2d       	mov	r30, r9
	ld  M0, Z
     b58:	00 81       	ld	r16, Z
	eor T0, M0
     b5a:	40 27       	eor	r20, r16
	eor T2, M0
     b5c:	60 27       	eor	r22, r16
	eor T3, M0 
     b5e:	70 27       	eor	r23, r16
	mov r28, ST21
     b60:	c9 2d       	mov	r28, r9
	ld  M0, Y
     b62:	08 81       	ld	r16, Y
	eor T0, M0
     b64:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     b66:	50 27       	eor	r21, r16

	mov r30, ST32
     b68:	ee 2d       	mov	r30, r14
	ld  M0, Z
     b6a:	00 81       	ld	r16, Z
	eor T0, M0
     b6c:	40 27       	eor	r20, r16
	eor T1, M0
     b6e:	50 27       	eor	r21, r16
	eor T3, M0 
     b70:	70 27       	eor	r23, r16
	mov r28, ST32
     b72:	ce 2d       	mov	r28, r14
	ld  M0, Y
     b74:	08 81       	ld	r16, Y
	eor T1, M0
     b76:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     b78:	60 27       	eor	r22, r16

	mov r30, ST03
     b7a:	e3 2d       	mov	r30, r3
	ld  M0, Z
     b7c:	00 81       	ld	r16, Z
	eor T0, M0
     b7e:	40 27       	eor	r20, r16
	eor T1, M0
     b80:	50 27       	eor	r21, r16
	eor T2, M0 
     b82:	60 27       	eor	r22, r16
	mov r28, ST03
     b84:	c3 2d       	mov	r28, r3
	ld  M0, Y
     b86:	08 81       	ld	r16, Y
	eor T2, M0
     b88:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     b8a:	70 27       	eor	r23, r16

	mov ST10, T0
     b8c:	44 2e       	mov	r4, r20
	mov ST11, T1
     b8e:	55 2e       	mov	r5, r21
	mov ST03, M3
     b90:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     b92:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     b94:	40 81       	ld	r20, Z
	mov T1, T0
     b96:	54 2f       	mov	r21, r20
	mov M3, T1 
     b98:	35 2f       	mov	r19, r21
	mov r28, ST20
     b9a:	c8 2d       	mov	r28, r8
	ld  M0, Y
     b9c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     b9e:	30 27       	eor	r19, r16

	mov r30, ST31
     ba0:	ed 2d       	mov	r30, r13
	ld  r25, Z
     ba2:	90 81       	ld	r25, Z
	eor M0, r25
     ba4:	09 27       	eor	r16, r25
	eor T1, r25
     ba6:	59 27       	eor	r21, r25
	eor M3, r25
     ba8:	39 27       	eor	r19, r25
	mov r28, ST31
     baa:	cd 2d       	mov	r28, r13
	ld  r25, Y
     bac:	98 81       	ld	r25, Y
	eor M0, r25
     bae:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     bb0:	49 27       	eor	r20, r25

	mov r30, ST02
     bb2:	e2 2d       	mov	r30, r2
	ld  r25, Z
     bb4:	90 81       	ld	r25, Z
	eor M0, r25
     bb6:	09 27       	eor	r16, r25
	eor T0, r25
     bb8:	49 27       	eor	r20, r25
	eor M3, r25
     bba:	39 27       	eor	r19, r25
	mov r28, ST02
     bbc:	c2 2d       	mov	r28, r2
	ld  r25, Y
     bbe:	98 81       	ld	r25, Y
	eor T0, r25
     bc0:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     bc2:	59 27       	eor	r21, r25

	mov r30, ST13
     bc4:	e7 2d       	mov	r30, r7
	ld  r25, Z
     bc6:	90 81       	ld	r25, Z
	eor M0, r25
     bc8:	09 27       	eor	r16, r25
	eor T0, r25
     bca:	49 27       	eor	r20, r25
	eor T1, r25 
     bcc:	59 27       	eor	r21, r25
	mov r28, ST13
     bce:	c7 2d       	mov	r28, r7
	ld  r25, Y
     bd0:	98 81       	ld	r25, Y
	eor T1, r25
     bd2:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     bd4:	39 27       	eor	r19, r25

	mov ST20, M0
     bd6:	80 2e       	mov	r8, r16
	mov ST21, T0
     bd8:	94 2e       	mov	r9, r20
	mov ST22, T1
     bda:	a5 2e       	mov	r10, r21
	mov ST13, T3
     bdc:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     bde:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     be0:	50 81       	ld	r21, Z
	mov T3, T1
     be2:	75 2f       	mov	r23, r21
	mov r25, T3 
     be4:	97 2f       	mov	r25, r23
	mov r28, ST30
     be6:	cc 2d       	mov	r28, r12
	ld  T0, Y
     be8:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     bea:	94 27       	eor	r25, r20

	mov r30, ST01
     bec:	e1 2d       	mov	r30, r1
	ld  M0, Z
     bee:	00 81       	ld	r16, Z
	eor T0, M0
     bf0:	40 27       	eor	r20, r16
	eor T3, M0
     bf2:	70 27       	eor	r23, r16
	eor r25, M0 
     bf4:	90 27       	eor	r25, r16
	mov r28, ST01
     bf6:	c1 2d       	mov	r28, r1
	ld  M0, Y
     bf8:	08 81       	ld	r16, Y
	eor T0, M0
     bfa:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     bfc:	50 27       	eor	r21, r16

	mov r30, ST12
     bfe:	e6 2d       	mov	r30, r6
	ld  M0, Z
     c00:	00 81       	ld	r16, Z
	eor T0, M0
     c02:	40 27       	eor	r20, r16
	eor T1, M0
     c04:	50 27       	eor	r21, r16
	eor r25, M0 
     c06:	90 27       	eor	r25, r16
	mov r28, ST12
     c08:	c6 2d       	mov	r28, r6
	ld  M0, Y
     c0a:	08 81       	ld	r16, Y
	eor T1, M0
     c0c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     c0e:	70 27       	eor	r23, r16

	mov r30, ST23
     c10:	eb 2d       	mov	r30, r11
	ld  M0, Z
     c12:	00 81       	ld	r16, Z
	eor T0, M0
     c14:	40 27       	eor	r20, r16
	eor T1, M0
     c16:	50 27       	eor	r21, r16
	eor T3, M0 
     c18:	70 27       	eor	r23, r16
	mov r28, ST23
     c1a:	cb 2d       	mov	r28, r11
	ld  M0, Y
     c1c:	08 81       	ld	r16, Y
	eor T3, M0
     c1e:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     c20:	90 27       	eor	r25, r16

	mov ST30, T0
     c22:	c4 2e       	mov	r12, r20
	mov ST31, T1
     c24:	d5 2e       	mov	r13, r21
	mov ST32, T3
     c26:	e7 2e       	mov	r14, r23
	mov ST33, r25
     c28:	f9 2e       	mov	r15, r25
	mov ST01, M1
     c2a:	11 2e       	mov	r1, r17
	mov ST02, M2
     c2c:	22 2e       	mov	r2, r18
	mov ST12, T2
     c2e:	66 2e       	mov	r6, r22
	mov ST23, M3
     c30:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     c32:	0d 91       	ld	r16, X+
     c34:	00 26       	eor	r0, r16
     c36:	0d 91       	ld	r16, X+
     c38:	10 26       	eor	r1, r16
     c3a:	0d 91       	ld	r16, X+
     c3c:	20 26       	eor	r2, r16
     c3e:	0d 91       	ld	r16, X+
     c40:	30 26       	eor	r3, r16
     c42:	0d 91       	ld	r16, X+
     c44:	40 26       	eor	r4, r16
     c46:	0d 91       	ld	r16, X+
     c48:	50 26       	eor	r5, r16
     c4a:	0d 91       	ld	r16, X+
     c4c:	60 26       	eor	r6, r16
     c4e:	0d 91       	ld	r16, X+
     c50:	70 26       	eor	r7, r16
     c52:	0d 91       	ld	r16, X+
     c54:	80 26       	eor	r8, r16
     c56:	0d 91       	ld	r16, X+
     c58:	90 26       	eor	r9, r16
     c5a:	0d 91       	ld	r16, X+
     c5c:	a0 26       	eor	r10, r16
     c5e:	0d 91       	ld	r16, X+
     c60:	b0 26       	eor	r11, r16
     c62:	0d 91       	ld	r16, X+
     c64:	c0 26       	eor	r12, r16
     c66:	0d 91       	ld	r16, X+
     c68:	d0 26       	eor	r13, r16
     c6a:	0d 91       	ld	r16, X+
     c6c:	e0 26       	eor	r14, r16
     c6e:	0d 91       	ld	r16, X+
     c70:	f0 26       	eor	r15, r16
	
	//7 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     c72:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     c74:	10 81       	ld	r17, Z
	mov M2, M1
     c76:	21 2f       	mov	r18, r17
	mov M3, M2 
     c78:	32 2f       	mov	r19, r18
	mov r28, ST00
     c7a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     c7c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     c7e:	30 27       	eor	r19, r16

	mov r30, ST11
     c80:	e5 2d       	mov	r30, r5
	ld  T0, Z
     c82:	40 81       	ld	r20, Z
	eor M0, T0
     c84:	04 27       	eor	r16, r20
	eor M2, T0
     c86:	24 27       	eor	r18, r20
	eor M3, T0 
     c88:	34 27       	eor	r19, r20
	mov r28, ST11
     c8a:	c5 2d       	mov	r28, r5
	ld  T0, Y
     c8c:	48 81       	ld	r20, Y
	eor M0, T0
     c8e:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     c90:	14 27       	eor	r17, r20

	mov r30, ST22
     c92:	ea 2d       	mov	r30, r10
	ld  T0, Z
     c94:	40 81       	ld	r20, Z
	eor M0, T0
     c96:	04 27       	eor	r16, r20
	eor M1, T0
     c98:	14 27       	eor	r17, r20
	eor M3, T0
     c9a:	34 27       	eor	r19, r20
	mov r28, ST22
     c9c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     c9e:	48 81       	ld	r20, Y
	eor M1, T0
     ca0:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     ca2:	24 27       	eor	r18, r20

	mov r30, ST33
     ca4:	ef 2d       	mov	r30, r15
	ld  T0, Z
     ca6:	40 81       	ld	r20, Z
	eor M0, T0
     ca8:	04 27       	eor	r16, r20
	eor M1, T0
     caa:	14 27       	eor	r17, r20
	eor M2, T0 
     cac:	24 27       	eor	r18, r20
	mov r28, ST33
     cae:	cf 2d       	mov	r28, r15
	ld  T0, Y
     cb0:	48 81       	ld	r20, Y
	eor M2, T0
     cb2:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     cb4:	34 27       	eor	r19, r20

	mov ST00, M0
     cb6:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     cb8:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     cba:	50 81       	ld	r21, Z
	mov T2, T1
     cbc:	65 2f       	mov	r22, r21
	mov T3, T2 
     cbe:	76 2f       	mov	r23, r22
	mov r28, ST10
     cc0:	c4 2d       	mov	r28, r4
	ld  T0, Y
     cc2:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     cc4:	74 27       	eor	r23, r20

	mov r30, ST21
     cc6:	e9 2d       	mov	r30, r9
	ld  M0, Z
     cc8:	00 81       	ld	r16, Z
	eor T0, M0
     cca:	40 27       	eor	r20, r16
	eor T2, M0
     ccc:	60 27       	eor	r22, r16
	eor T3, M0 
     cce:	70 27       	eor	r23, r16
	mov r28, ST21
     cd0:	c9 2d       	mov	r28, r9
	ld  M0, Y
     cd2:	08 81       	ld	r16, Y
	eor T0, M0
     cd4:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     cd6:	50 27       	eor	r21, r16

	mov r30, ST32
     cd8:	ee 2d       	mov	r30, r14
	ld  M0, Z
     cda:	00 81       	ld	r16, Z
	eor T0, M0
     cdc:	40 27       	eor	r20, r16
	eor T1, M0
     cde:	50 27       	eor	r21, r16
	eor T3, M0 
     ce0:	70 27       	eor	r23, r16
	mov r28, ST32
     ce2:	ce 2d       	mov	r28, r14
	ld  M0, Y
     ce4:	08 81       	ld	r16, Y
	eor T1, M0
     ce6:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     ce8:	60 27       	eor	r22, r16

	mov r30, ST03
     cea:	e3 2d       	mov	r30, r3
	ld  M0, Z
     cec:	00 81       	ld	r16, Z
	eor T0, M0
     cee:	40 27       	eor	r20, r16
	eor T1, M0
     cf0:	50 27       	eor	r21, r16
	eor T2, M0 
     cf2:	60 27       	eor	r22, r16
	mov r28, ST03
     cf4:	c3 2d       	mov	r28, r3
	ld  M0, Y
     cf6:	08 81       	ld	r16, Y
	eor T2, M0
     cf8:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     cfa:	70 27       	eor	r23, r16

	mov ST10, T0
     cfc:	44 2e       	mov	r4, r20
	mov ST11, T1
     cfe:	55 2e       	mov	r5, r21
	mov ST03, M3
     d00:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     d02:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     d04:	40 81       	ld	r20, Z
	mov T1, T0
     d06:	54 2f       	mov	r21, r20
	mov M3, T1 
     d08:	35 2f       	mov	r19, r21
	mov r28, ST20
     d0a:	c8 2d       	mov	r28, r8
	ld  M0, Y
     d0c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     d0e:	30 27       	eor	r19, r16

	mov r30, ST31
     d10:	ed 2d       	mov	r30, r13
	ld  r25, Z
     d12:	90 81       	ld	r25, Z
	eor M0, r25
     d14:	09 27       	eor	r16, r25
	eor T1, r25
     d16:	59 27       	eor	r21, r25
	eor M3, r25
     d18:	39 27       	eor	r19, r25
	mov r28, ST31
     d1a:	cd 2d       	mov	r28, r13
	ld  r25, Y
     d1c:	98 81       	ld	r25, Y
	eor M0, r25
     d1e:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     d20:	49 27       	eor	r20, r25

	mov r30, ST02
     d22:	e2 2d       	mov	r30, r2
	ld  r25, Z
     d24:	90 81       	ld	r25, Z
	eor M0, r25
     d26:	09 27       	eor	r16, r25
	eor T0, r25
     d28:	49 27       	eor	r20, r25
	eor M3, r25
     d2a:	39 27       	eor	r19, r25
	mov r28, ST02
     d2c:	c2 2d       	mov	r28, r2
	ld  r25, Y
     d2e:	98 81       	ld	r25, Y
	eor T0, r25
     d30:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     d32:	59 27       	eor	r21, r25

	mov r30, ST13
     d34:	e7 2d       	mov	r30, r7
	ld  r25, Z
     d36:	90 81       	ld	r25, Z
	eor M0, r25
     d38:	09 27       	eor	r16, r25
	eor T0, r25
     d3a:	49 27       	eor	r20, r25
	eor T1, r25 
     d3c:	59 27       	eor	r21, r25
	mov r28, ST13
     d3e:	c7 2d       	mov	r28, r7
	ld  r25, Y
     d40:	98 81       	ld	r25, Y
	eor T1, r25
     d42:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     d44:	39 27       	eor	r19, r25

	mov ST20, M0
     d46:	80 2e       	mov	r8, r16
	mov ST21, T0
     d48:	94 2e       	mov	r9, r20
	mov ST22, T1
     d4a:	a5 2e       	mov	r10, r21
	mov ST13, T3
     d4c:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     d4e:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     d50:	50 81       	ld	r21, Z
	mov T3, T1
     d52:	75 2f       	mov	r23, r21
	mov r25, T3 
     d54:	97 2f       	mov	r25, r23
	mov r28, ST30
     d56:	cc 2d       	mov	r28, r12
	ld  T0, Y
     d58:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     d5a:	94 27       	eor	r25, r20

	mov r30, ST01
     d5c:	e1 2d       	mov	r30, r1
	ld  M0, Z
     d5e:	00 81       	ld	r16, Z
	eor T0, M0
     d60:	40 27       	eor	r20, r16
	eor T3, M0
     d62:	70 27       	eor	r23, r16
	eor r25, M0 
     d64:	90 27       	eor	r25, r16
	mov r28, ST01
     d66:	c1 2d       	mov	r28, r1
	ld  M0, Y
     d68:	08 81       	ld	r16, Y
	eor T0, M0
     d6a:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     d6c:	50 27       	eor	r21, r16

	mov r30, ST12
     d6e:	e6 2d       	mov	r30, r6
	ld  M0, Z
     d70:	00 81       	ld	r16, Z
	eor T0, M0
     d72:	40 27       	eor	r20, r16
	eor T1, M0
     d74:	50 27       	eor	r21, r16
	eor r25, M0 
     d76:	90 27       	eor	r25, r16
	mov r28, ST12
     d78:	c6 2d       	mov	r28, r6
	ld  M0, Y
     d7a:	08 81       	ld	r16, Y
	eor T1, M0
     d7c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     d7e:	70 27       	eor	r23, r16

	mov r30, ST23
     d80:	eb 2d       	mov	r30, r11
	ld  M0, Z
     d82:	00 81       	ld	r16, Z
	eor T0, M0
     d84:	40 27       	eor	r20, r16
	eor T1, M0
     d86:	50 27       	eor	r21, r16
	eor T3, M0 
     d88:	70 27       	eor	r23, r16
	mov r28, ST23
     d8a:	cb 2d       	mov	r28, r11
	ld  M0, Y
     d8c:	08 81       	ld	r16, Y
	eor T3, M0
     d8e:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     d90:	90 27       	eor	r25, r16

	mov ST30, T0
     d92:	c4 2e       	mov	r12, r20
	mov ST31, T1
     d94:	d5 2e       	mov	r13, r21
	mov ST32, T3
     d96:	e7 2e       	mov	r14, r23
	mov ST33, r25
     d98:	f9 2e       	mov	r15, r25
	mov ST01, M1
     d9a:	11 2e       	mov	r1, r17
	mov ST02, M2
     d9c:	22 2e       	mov	r2, r18
	mov ST12, T2
     d9e:	66 2e       	mov	r6, r22
	mov ST23, M3
     da0:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     da2:	0d 91       	ld	r16, X+
     da4:	00 26       	eor	r0, r16
     da6:	0d 91       	ld	r16, X+
     da8:	10 26       	eor	r1, r16
     daa:	0d 91       	ld	r16, X+
     dac:	20 26       	eor	r2, r16
     dae:	0d 91       	ld	r16, X+
     db0:	30 26       	eor	r3, r16
     db2:	0d 91       	ld	r16, X+
     db4:	40 26       	eor	r4, r16
     db6:	0d 91       	ld	r16, X+
     db8:	50 26       	eor	r5, r16
     dba:	0d 91       	ld	r16, X+
     dbc:	60 26       	eor	r6, r16
     dbe:	0d 91       	ld	r16, X+
     dc0:	70 26       	eor	r7, r16
     dc2:	0d 91       	ld	r16, X+
     dc4:	80 26       	eor	r8, r16
     dc6:	0d 91       	ld	r16, X+
     dc8:	90 26       	eor	r9, r16
     dca:	0d 91       	ld	r16, X+
     dcc:	a0 26       	eor	r10, r16
     dce:	0d 91       	ld	r16, X+
     dd0:	b0 26       	eor	r11, r16
     dd2:	0d 91       	ld	r16, X+
     dd4:	c0 26       	eor	r12, r16
     dd6:	0d 91       	ld	r16, X+
     dd8:	d0 26       	eor	r13, r16
     dda:	0d 91       	ld	r16, X+
     ddc:	e0 26       	eor	r14, r16
     dde:	0d 91       	ld	r16, X+
     de0:	f0 26       	eor	r15, r16
	
	//8 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     de2:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     de4:	10 81       	ld	r17, Z
	mov M2, M1
     de6:	21 2f       	mov	r18, r17
	mov M3, M2 
     de8:	32 2f       	mov	r19, r18
	mov r28, ST00
     dea:	c0 2d       	mov	r28, r0
	ld  M0, Y
     dec:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     dee:	30 27       	eor	r19, r16

	mov r30, ST11
     df0:	e5 2d       	mov	r30, r5
	ld  T0, Z
     df2:	40 81       	ld	r20, Z
	eor M0, T0
     df4:	04 27       	eor	r16, r20
	eor M2, T0
     df6:	24 27       	eor	r18, r20
	eor M3, T0 
     df8:	34 27       	eor	r19, r20
	mov r28, ST11
     dfa:	c5 2d       	mov	r28, r5
	ld  T0, Y
     dfc:	48 81       	ld	r20, Y
	eor M0, T0
     dfe:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     e00:	14 27       	eor	r17, r20

	mov r30, ST22
     e02:	ea 2d       	mov	r30, r10
	ld  T0, Z
     e04:	40 81       	ld	r20, Z
	eor M0, T0
     e06:	04 27       	eor	r16, r20
	eor M1, T0
     e08:	14 27       	eor	r17, r20
	eor M3, T0
     e0a:	34 27       	eor	r19, r20
	mov r28, ST22
     e0c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     e0e:	48 81       	ld	r20, Y
	eor M1, T0
     e10:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     e12:	24 27       	eor	r18, r20

	mov r30, ST33
     e14:	ef 2d       	mov	r30, r15
	ld  T0, Z
     e16:	40 81       	ld	r20, Z
	eor M0, T0
     e18:	04 27       	eor	r16, r20
	eor M1, T0
     e1a:	14 27       	eor	r17, r20
	eor M2, T0 
     e1c:	24 27       	eor	r18, r20
	mov r28, ST33
     e1e:	cf 2d       	mov	r28, r15
	ld  T0, Y
     e20:	48 81       	ld	r20, Y
	eor M2, T0
     e22:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     e24:	34 27       	eor	r19, r20

	mov ST00, M0
     e26:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     e28:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     e2a:	50 81       	ld	r21, Z
	mov T2, T1
     e2c:	65 2f       	mov	r22, r21
	mov T3, T2 
     e2e:	76 2f       	mov	r23, r22
	mov r28, ST10
     e30:	c4 2d       	mov	r28, r4
	ld  T0, Y
     e32:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     e34:	74 27       	eor	r23, r20

	mov r30, ST21
     e36:	e9 2d       	mov	r30, r9
	ld  M0, Z
     e38:	00 81       	ld	r16, Z
	eor T0, M0
     e3a:	40 27       	eor	r20, r16
	eor T2, M0
     e3c:	60 27       	eor	r22, r16
	eor T3, M0 
     e3e:	70 27       	eor	r23, r16
	mov r28, ST21
     e40:	c9 2d       	mov	r28, r9
	ld  M0, Y
     e42:	08 81       	ld	r16, Y
	eor T0, M0
     e44:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     e46:	50 27       	eor	r21, r16

	mov r30, ST32
     e48:	ee 2d       	mov	r30, r14
	ld  M0, Z
     e4a:	00 81       	ld	r16, Z
	eor T0, M0
     e4c:	40 27       	eor	r20, r16
	eor T1, M0
     e4e:	50 27       	eor	r21, r16
	eor T3, M0 
     e50:	70 27       	eor	r23, r16
	mov r28, ST32
     e52:	ce 2d       	mov	r28, r14
	ld  M0, Y
     e54:	08 81       	ld	r16, Y
	eor T1, M0
     e56:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     e58:	60 27       	eor	r22, r16

	mov r30, ST03
     e5a:	e3 2d       	mov	r30, r3
	ld  M0, Z
     e5c:	00 81       	ld	r16, Z
	eor T0, M0
     e5e:	40 27       	eor	r20, r16
	eor T1, M0
     e60:	50 27       	eor	r21, r16
	eor T2, M0 
     e62:	60 27       	eor	r22, r16
	mov r28, ST03
     e64:	c3 2d       	mov	r28, r3
	ld  M0, Y
     e66:	08 81       	ld	r16, Y
	eor T2, M0
     e68:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     e6a:	70 27       	eor	r23, r16

	mov ST10, T0
     e6c:	44 2e       	mov	r4, r20
	mov ST11, T1
     e6e:	55 2e       	mov	r5, r21
	mov ST03, M3
     e70:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     e72:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     e74:	40 81       	ld	r20, Z
	mov T1, T0
     e76:	54 2f       	mov	r21, r20
	mov M3, T1 
     e78:	35 2f       	mov	r19, r21
	mov r28, ST20
     e7a:	c8 2d       	mov	r28, r8
	ld  M0, Y
     e7c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     e7e:	30 27       	eor	r19, r16

	mov r30, ST31
     e80:	ed 2d       	mov	r30, r13
	ld  r25, Z
     e82:	90 81       	ld	r25, Z
	eor M0, r25
     e84:	09 27       	eor	r16, r25
	eor T1, r25
     e86:	59 27       	eor	r21, r25
	eor M3, r25
     e88:	39 27       	eor	r19, r25
	mov r28, ST31
     e8a:	cd 2d       	mov	r28, r13
	ld  r25, Y
     e8c:	98 81       	ld	r25, Y
	eor M0, r25
     e8e:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
     e90:	49 27       	eor	r20, r25

	mov r30, ST02
     e92:	e2 2d       	mov	r30, r2
	ld  r25, Z
     e94:	90 81       	ld	r25, Z
	eor M0, r25
     e96:	09 27       	eor	r16, r25
	eor T0, r25
     e98:	49 27       	eor	r20, r25
	eor M3, r25
     e9a:	39 27       	eor	r19, r25
	mov r28, ST02
     e9c:	c2 2d       	mov	r28, r2
	ld  r25, Y
     e9e:	98 81       	ld	r25, Y
	eor T0, r25
     ea0:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
     ea2:	59 27       	eor	r21, r25

	mov r30, ST13
     ea4:	e7 2d       	mov	r30, r7
	ld  r25, Z
     ea6:	90 81       	ld	r25, Z
	eor M0, r25
     ea8:	09 27       	eor	r16, r25
	eor T0, r25
     eaa:	49 27       	eor	r20, r25
	eor T1, r25 
     eac:	59 27       	eor	r21, r25
	mov r28, ST13
     eae:	c7 2d       	mov	r28, r7
	ld  r25, Y
     eb0:	98 81       	ld	r25, Y
	eor T1, r25
     eb2:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
     eb4:	39 27       	eor	r19, r25

	mov ST20, M0
     eb6:	80 2e       	mov	r8, r16
	mov ST21, T0
     eb8:	94 2e       	mov	r9, r20
	mov ST22, T1
     eba:	a5 2e       	mov	r10, r21
	mov ST13, T3
     ebc:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
     ebe:	ec 2d       	mov	r30, r12
	ld  T1, Z 
     ec0:	50 81       	ld	r21, Z
	mov T3, T1
     ec2:	75 2f       	mov	r23, r21
	mov r25, T3 
     ec4:	97 2f       	mov	r25, r23
	mov r28, ST30
     ec6:	cc 2d       	mov	r28, r12
	ld  T0, Y
     ec8:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
     eca:	94 27       	eor	r25, r20

	mov r30, ST01
     ecc:	e1 2d       	mov	r30, r1
	ld  M0, Z
     ece:	00 81       	ld	r16, Z
	eor T0, M0
     ed0:	40 27       	eor	r20, r16
	eor T3, M0
     ed2:	70 27       	eor	r23, r16
	eor r25, M0 
     ed4:	90 27       	eor	r25, r16
	mov r28, ST01
     ed6:	c1 2d       	mov	r28, r1
	ld  M0, Y
     ed8:	08 81       	ld	r16, Y
	eor T0, M0
     eda:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     edc:	50 27       	eor	r21, r16

	mov r30, ST12
     ede:	e6 2d       	mov	r30, r6
	ld  M0, Z
     ee0:	00 81       	ld	r16, Z
	eor T0, M0
     ee2:	40 27       	eor	r20, r16
	eor T1, M0
     ee4:	50 27       	eor	r21, r16
	eor r25, M0 
     ee6:	90 27       	eor	r25, r16
	mov r28, ST12
     ee8:	c6 2d       	mov	r28, r6
	ld  M0, Y
     eea:	08 81       	ld	r16, Y
	eor T1, M0
     eec:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
     eee:	70 27       	eor	r23, r16

	mov r30, ST23
     ef0:	eb 2d       	mov	r30, r11
	ld  M0, Z
     ef2:	00 81       	ld	r16, Z
	eor T0, M0
     ef4:	40 27       	eor	r20, r16
	eor T1, M0
     ef6:	50 27       	eor	r21, r16
	eor T3, M0 
     ef8:	70 27       	eor	r23, r16
	mov r28, ST23
     efa:	cb 2d       	mov	r28, r11
	ld  M0, Y
     efc:	08 81       	ld	r16, Y
	eor T3, M0
     efe:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
     f00:	90 27       	eor	r25, r16

	mov ST30, T0
     f02:	c4 2e       	mov	r12, r20
	mov ST31, T1
     f04:	d5 2e       	mov	r13, r21
	mov ST32, T3
     f06:	e7 2e       	mov	r14, r23
	mov ST33, r25
     f08:	f9 2e       	mov	r15, r25
	mov ST01, M1
     f0a:	11 2e       	mov	r1, r17
	mov ST02, M2
     f0c:	22 2e       	mov	r2, r18
	mov ST12, T2
     f0e:	66 2e       	mov	r6, r22
	mov ST23, M3
     f10:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
     f12:	0d 91       	ld	r16, X+
     f14:	00 26       	eor	r0, r16
     f16:	0d 91       	ld	r16, X+
     f18:	10 26       	eor	r1, r16
     f1a:	0d 91       	ld	r16, X+
     f1c:	20 26       	eor	r2, r16
     f1e:	0d 91       	ld	r16, X+
     f20:	30 26       	eor	r3, r16
     f22:	0d 91       	ld	r16, X+
     f24:	40 26       	eor	r4, r16
     f26:	0d 91       	ld	r16, X+
     f28:	50 26       	eor	r5, r16
     f2a:	0d 91       	ld	r16, X+
     f2c:	60 26       	eor	r6, r16
     f2e:	0d 91       	ld	r16, X+
     f30:	70 26       	eor	r7, r16
     f32:	0d 91       	ld	r16, X+
     f34:	80 26       	eor	r8, r16
     f36:	0d 91       	ld	r16, X+
     f38:	90 26       	eor	r9, r16
     f3a:	0d 91       	ld	r16, X+
     f3c:	a0 26       	eor	r10, r16
     f3e:	0d 91       	ld	r16, X+
     f40:	b0 26       	eor	r11, r16
     f42:	0d 91       	ld	r16, X+
     f44:	c0 26       	eor	r12, r16
     f46:	0d 91       	ld	r16, X+
     f48:	d0 26       	eor	r13, r16
     f4a:	0d 91       	ld	r16, X+
     f4c:	e0 26       	eor	r14, r16
     f4e:	0d 91       	ld	r16, X+
     f50:	f0 26       	eor	r15, r16
	
	//9 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
     f52:	e0 2d       	mov	r30, r0
	ld  M1, Z 
     f54:	10 81       	ld	r17, Z
	mov M2, M1
     f56:	21 2f       	mov	r18, r17
	mov M3, M2 
     f58:	32 2f       	mov	r19, r18
	mov r28, ST00
     f5a:	c0 2d       	mov	r28, r0
	ld  M0, Y
     f5c:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     f5e:	30 27       	eor	r19, r16

	mov r30, ST11
     f60:	e5 2d       	mov	r30, r5
	ld  T0, Z
     f62:	40 81       	ld	r20, Z
	eor M0, T0
     f64:	04 27       	eor	r16, r20
	eor M2, T0
     f66:	24 27       	eor	r18, r20
	eor M3, T0 
     f68:	34 27       	eor	r19, r20
	mov r28, ST11
     f6a:	c5 2d       	mov	r28, r5
	ld  T0, Y
     f6c:	48 81       	ld	r20, Y
	eor M0, T0
     f6e:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
     f70:	14 27       	eor	r17, r20

	mov r30, ST22
     f72:	ea 2d       	mov	r30, r10
	ld  T0, Z
     f74:	40 81       	ld	r20, Z
	eor M0, T0
     f76:	04 27       	eor	r16, r20
	eor M1, T0
     f78:	14 27       	eor	r17, r20
	eor M3, T0
     f7a:	34 27       	eor	r19, r20
	mov r28, ST22
     f7c:	ca 2d       	mov	r28, r10
	ld  T0, Y
     f7e:	48 81       	ld	r20, Y
	eor M1, T0
     f80:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
     f82:	24 27       	eor	r18, r20

	mov r30, ST33
     f84:	ef 2d       	mov	r30, r15
	ld  T0, Z
     f86:	40 81       	ld	r20, Z
	eor M0, T0
     f88:	04 27       	eor	r16, r20
	eor M1, T0
     f8a:	14 27       	eor	r17, r20
	eor M2, T0 
     f8c:	24 27       	eor	r18, r20
	mov r28, ST33
     f8e:	cf 2d       	mov	r28, r15
	ld  T0, Y
     f90:	48 81       	ld	r20, Y
	eor M2, T0
     f92:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
     f94:	34 27       	eor	r19, r20

	mov ST00, M0
     f96:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
     f98:	e4 2d       	mov	r30, r4
	ld  T1, Z 
     f9a:	50 81       	ld	r21, Z
	mov T2, T1
     f9c:	65 2f       	mov	r22, r21
	mov T3, T2 
     f9e:	76 2f       	mov	r23, r22
	mov r28, ST10
     fa0:	c4 2d       	mov	r28, r4
	ld  T0, Y
     fa2:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
     fa4:	74 27       	eor	r23, r20

	mov r30, ST21
     fa6:	e9 2d       	mov	r30, r9
	ld  M0, Z
     fa8:	00 81       	ld	r16, Z
	eor T0, M0
     faa:	40 27       	eor	r20, r16
	eor T2, M0
     fac:	60 27       	eor	r22, r16
	eor T3, M0 
     fae:	70 27       	eor	r23, r16
	mov r28, ST21
     fb0:	c9 2d       	mov	r28, r9
	ld  M0, Y
     fb2:	08 81       	ld	r16, Y
	eor T0, M0
     fb4:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
     fb6:	50 27       	eor	r21, r16

	mov r30, ST32
     fb8:	ee 2d       	mov	r30, r14
	ld  M0, Z
     fba:	00 81       	ld	r16, Z
	eor T0, M0
     fbc:	40 27       	eor	r20, r16
	eor T1, M0
     fbe:	50 27       	eor	r21, r16
	eor T3, M0 
     fc0:	70 27       	eor	r23, r16
	mov r28, ST32
     fc2:	ce 2d       	mov	r28, r14
	ld  M0, Y
     fc4:	08 81       	ld	r16, Y
	eor T1, M0
     fc6:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
     fc8:	60 27       	eor	r22, r16

	mov r30, ST03
     fca:	e3 2d       	mov	r30, r3
	ld  M0, Z
     fcc:	00 81       	ld	r16, Z
	eor T0, M0
     fce:	40 27       	eor	r20, r16
	eor T1, M0
     fd0:	50 27       	eor	r21, r16
	eor T2, M0 
     fd2:	60 27       	eor	r22, r16
	mov r28, ST03
     fd4:	c3 2d       	mov	r28, r3
	ld  M0, Y
     fd6:	08 81       	ld	r16, Y
	eor T2, M0
     fd8:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
     fda:	70 27       	eor	r23, r16

	mov ST10, T0
     fdc:	44 2e       	mov	r4, r20
	mov ST11, T1
     fde:	55 2e       	mov	r5, r21
	mov ST03, M3
     fe0:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
     fe2:	e8 2d       	mov	r30, r8
	ld  T0, Z 
     fe4:	40 81       	ld	r20, Z
	mov T1, T0
     fe6:	54 2f       	mov	r21, r20
	mov M3, T1 
     fe8:	35 2f       	mov	r19, r21
	mov r28, ST20
     fea:	c8 2d       	mov	r28, r8
	ld  M0, Y
     fec:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
     fee:	30 27       	eor	r19, r16

	mov r30, ST31
     ff0:	ed 2d       	mov	r30, r13
	ld  r25, Z
     ff2:	90 81       	ld	r25, Z
	eor M0, r25
     ff4:	09 27       	eor	r16, r25
	eor T1, r25
     ff6:	59 27       	eor	r21, r25
	eor M3, r25
     ff8:	39 27       	eor	r19, r25
	mov r28, ST31
     ffa:	cd 2d       	mov	r28, r13
	ld  r25, Y
     ffc:	98 81       	ld	r25, Y
	eor M0, r25
     ffe:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1000:	49 27       	eor	r20, r25

	mov r30, ST02
    1002:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1004:	90 81       	ld	r25, Z
	eor M0, r25
    1006:	09 27       	eor	r16, r25
	eor T0, r25
    1008:	49 27       	eor	r20, r25
	eor M3, r25
    100a:	39 27       	eor	r19, r25
	mov r28, ST02
    100c:	c2 2d       	mov	r28, r2
	ld  r25, Y
    100e:	98 81       	ld	r25, Y
	eor T0, r25
    1010:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1012:	59 27       	eor	r21, r25

	mov r30, ST13
    1014:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1016:	90 81       	ld	r25, Z
	eor M0, r25
    1018:	09 27       	eor	r16, r25
	eor T0, r25
    101a:	49 27       	eor	r20, r25
	eor T1, r25 
    101c:	59 27       	eor	r21, r25
	mov r28, ST13
    101e:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1020:	98 81       	ld	r25, Y
	eor T1, r25
    1022:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1024:	39 27       	eor	r19, r25

	mov ST20, M0
    1026:	80 2e       	mov	r8, r16
	mov ST21, T0
    1028:	94 2e       	mov	r9, r20
	mov ST22, T1
    102a:	a5 2e       	mov	r10, r21
	mov ST13, T3
    102c:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    102e:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1030:	50 81       	ld	r21, Z
	mov T3, T1
    1032:	75 2f       	mov	r23, r21
	mov r25, T3 
    1034:	97 2f       	mov	r25, r23
	mov r28, ST30
    1036:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1038:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    103a:	94 27       	eor	r25, r20

	mov r30, ST01
    103c:	e1 2d       	mov	r30, r1
	ld  M0, Z
    103e:	00 81       	ld	r16, Z
	eor T0, M0
    1040:	40 27       	eor	r20, r16
	eor T3, M0
    1042:	70 27       	eor	r23, r16
	eor r25, M0 
    1044:	90 27       	eor	r25, r16
	mov r28, ST01
    1046:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1048:	08 81       	ld	r16, Y
	eor T0, M0
    104a:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    104c:	50 27       	eor	r21, r16

	mov r30, ST12
    104e:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1050:	00 81       	ld	r16, Z
	eor T0, M0
    1052:	40 27       	eor	r20, r16
	eor T1, M0
    1054:	50 27       	eor	r21, r16
	eor r25, M0 
    1056:	90 27       	eor	r25, r16
	mov r28, ST12
    1058:	c6 2d       	mov	r28, r6
	ld  M0, Y
    105a:	08 81       	ld	r16, Y
	eor T1, M0
    105c:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    105e:	70 27       	eor	r23, r16

	mov r30, ST23
    1060:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1062:	00 81       	ld	r16, Z
	eor T0, M0
    1064:	40 27       	eor	r20, r16
	eor T1, M0
    1066:	50 27       	eor	r21, r16
	eor T3, M0 
    1068:	70 27       	eor	r23, r16
	mov r28, ST23
    106a:	cb 2d       	mov	r28, r11
	ld  M0, Y
    106c:	08 81       	ld	r16, Y
	eor T3, M0
    106e:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1070:	90 27       	eor	r25, r16

	mov ST30, T0
    1072:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1074:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1076:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1078:	f9 2e       	mov	r15, r25
	mov ST01, M1
    107a:	11 2e       	mov	r1, r17
	mov ST02, M2
    107c:	22 2e       	mov	r2, r18
	mov ST12, T2
    107e:	66 2e       	mov	r6, r22
	mov ST23, M3
    1080:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1082:	0d 91       	ld	r16, X+
    1084:	00 26       	eor	r0, r16
    1086:	0d 91       	ld	r16, X+
    1088:	10 26       	eor	r1, r16
    108a:	0d 91       	ld	r16, X+
    108c:	20 26       	eor	r2, r16
    108e:	0d 91       	ld	r16, X+
    1090:	30 26       	eor	r3, r16
    1092:	0d 91       	ld	r16, X+
    1094:	40 26       	eor	r4, r16
    1096:	0d 91       	ld	r16, X+
    1098:	50 26       	eor	r5, r16
    109a:	0d 91       	ld	r16, X+
    109c:	60 26       	eor	r6, r16
    109e:	0d 91       	ld	r16, X+
    10a0:	70 26       	eor	r7, r16
    10a2:	0d 91       	ld	r16, X+
    10a4:	80 26       	eor	r8, r16
    10a6:	0d 91       	ld	r16, X+
    10a8:	90 26       	eor	r9, r16
    10aa:	0d 91       	ld	r16, X+
    10ac:	a0 26       	eor	r10, r16
    10ae:	0d 91       	ld	r16, X+
    10b0:	b0 26       	eor	r11, r16
    10b2:	0d 91       	ld	r16, X+
    10b4:	c0 26       	eor	r12, r16
    10b6:	0d 91       	ld	r16, X+
    10b8:	d0 26       	eor	r13, r16
    10ba:	0d 91       	ld	r16, X+
    10bc:	e0 26       	eor	r14, r16
    10be:	0d 91       	ld	r16, X+
    10c0:	f0 26       	eor	r15, r16
	


	// 10 Round--------------------------------------------------------------------------------------------
	// Shift Row + Subbyte
	mov r30, ST00
    10c2:	e0 2d       	mov	r30, r0
	ld ST00, Z
    10c4:	00 80       	ld	r0, Z
	mov r30, ST10
    10c6:	e4 2d       	mov	r30, r4
	ld ST10, Z
    10c8:	40 80       	ld	r4, Z
	mov r30, ST20
    10ca:	e8 2d       	mov	r30, r8
	ld ST20, Z
    10cc:	80 80       	ld	r8, Z
	mov r30, ST30
    10ce:	ec 2d       	mov	r30, r12
	ld ST30, Z
    10d0:	c0 80       	ld	r12, Z

	mov r30, ST01
    10d2:	e1 2d       	mov	r30, r1
	ld T0, Z
    10d4:	40 81       	ld	r20, Z
	mov r30, ST11
    10d6:	e5 2d       	mov	r30, r5
	ld ST01, Z
    10d8:	10 80       	ld	r1, Z
	mov r30, ST21
    10da:	e9 2d       	mov	r30, r9
	ld ST11, Z
    10dc:	50 80       	ld	r5, Z
	mov r30, ST31
    10de:	ed 2d       	mov	r30, r13
	ld ST21, Z
    10e0:	90 80       	ld	r9, Z
	mov ST31, T0
    10e2:	d4 2e       	mov	r13, r20

	mov r30, ST02
    10e4:	e2 2d       	mov	r30, r2
	ld T0, Z
    10e6:	40 81       	ld	r20, Z
	mov r30, ST12
    10e8:	e6 2d       	mov	r30, r6
	ld T1, Z
    10ea:	50 81       	ld	r21, Z
	mov r30, ST22
    10ec:	ea 2d       	mov	r30, r10
	ld ST02, Z
    10ee:	20 80       	ld	r2, Z
	mov r30, ST32
    10f0:	ee 2d       	mov	r30, r14
	ld ST12, Z
    10f2:	60 80       	ld	r6, Z
	mov ST22, T0
    10f4:	a4 2e       	mov	r10, r20
	mov ST32, T1
    10f6:	e5 2e       	mov	r14, r21

	mov r30, ST03
    10f8:	e3 2d       	mov	r30, r3
	ld T0, Z
    10fa:	40 81       	ld	r20, Z
	mov r30, ST33
    10fc:	ef 2d       	mov	r30, r15
	ld  ST03, Z
    10fe:	30 80       	ld	r3, Z
	mov r30, ST23
    1100:	eb 2d       	mov	r30, r11
	ld ST33, Z
    1102:	f0 80       	ld	r15, Z
	mov r30, ST13
    1104:	e7 2d       	mov	r30, r7
	ld ST23, Z
    1106:	b0 80       	ld	r11, Z
	mov ST13, T0
    1108:	74 2e       	mov	r7, r20
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    110a:	0d 91       	ld	r16, X+
    110c:	00 26       	eor	r0, r16
    110e:	0d 91       	ld	r16, X+
    1110:	10 26       	eor	r1, r16
    1112:	0d 91       	ld	r16, X+
    1114:	20 26       	eor	r2, r16
    1116:	0d 91       	ld	r16, X+
    1118:	30 26       	eor	r3, r16
    111a:	0d 91       	ld	r16, X+
    111c:	40 26       	eor	r4, r16
    111e:	0d 91       	ld	r16, X+
    1120:	50 26       	eor	r5, r16
    1122:	0d 91       	ld	r16, X+
    1124:	60 26       	eor	r6, r16
    1126:	0d 91       	ld	r16, X+
    1128:	70 26       	eor	r7, r16
    112a:	0d 91       	ld	r16, X+
    112c:	80 26       	eor	r8, r16
    112e:	0d 91       	ld	r16, X+
    1130:	90 26       	eor	r9, r16
    1132:	0d 91       	ld	r16, X+
    1134:	a0 26       	eor	r10, r16
    1136:	0d 91       	ld	r16, X+
    1138:	b0 26       	eor	r11, r16
    113a:	0d 91       	ld	r16, X+
    113c:	c0 26       	eor	r12, r16
    113e:	0d 91       	ld	r16, X+
    1140:	d0 26       	eor	r13, r16
    1142:	0d 91       	ld	r16, X+
    1144:	e0 26       	eor	r14, r16
    1146:	0d 91       	ld	r16, X+
    1148:	f0 26       	eor	r15, r16
	pop r21
    114a:	5f 91       	pop	r21
	pop r20
    114c:	4f 91       	pop	r20
	pop r27
    114e:	bf 91       	pop	r27
	pop r26
    1150:	af 91       	pop	r26
	pop r31
    1152:	ff 91       	pop	r31
	pop r30
    1154:	ef 91       	pop	r30
	movw r16, r30
    1156:	8f 01       	movw	r16, r30

	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
    1158:	01 92       	st	Z+, r0
    115a:	11 92       	st	Z+, r1
    115c:	21 92       	st	Z+, r2
    115e:	31 92       	st	Z+, r3
    1160:	41 92       	st	Z+, r4
    1162:	51 92       	st	Z+, r5
    1164:	61 92       	st	Z+, r6
    1166:	71 92       	st	Z+, r7
    1168:	81 92       	st	Z+, r8
    116a:	91 92       	st	Z+, r9
    116c:	a1 92       	st	Z+, r10
    116e:	b1 92       	st	Z+, r11
    1170:	c1 92       	st	Z+, r12
    1172:	d1 92       	st	Z+, r13
    1174:	e1 92       	st	Z+, r14
    1176:	f1 92       	st	Z+, r15
	movw r30, r16
    1178:	f8 01       	movw	r30, r16
	ld r16, Z
    117a:	00 81       	ld	r16, Z
	inc r16
    117c:	03 95       	inc	r16
	st Z, r16
    117e:	00 83       	st	Z, r16
	movw r16, r30
    1180:	8f 01       	movw	r16, r30

	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			ld ST\row\col ,Z+
		.endr
	.endr
    1182:	01 90       	ld	r0, Z+
    1184:	11 90       	ld	r1, Z+
    1186:	21 90       	ld	r2, Z+
    1188:	31 90       	ld	r3, Z+
    118a:	41 90       	ld	r4, Z+
    118c:	51 90       	ld	r5, Z+
    118e:	61 90       	ld	r6, Z+
    1190:	71 90       	ld	r7, Z+
    1192:	81 90       	ld	r8, Z+
    1194:	91 90       	ld	r9, Z+
    1196:	a1 90       	ld	r10, Z+
    1198:	b1 90       	ld	r11, Z+
    119a:	c1 90       	ld	r12, Z+
    119c:	d1 90       	ld	r13, Z+
    119e:	e1 90       	ld	r14, Z+
    11a0:	f1 90       	ld	r15, Z+
	movw r30, r16
    11a2:	f8 01       	movw	r30, r16

	push r30
    11a4:	ef 93       	push	r30
	push r31
    11a6:	ff 93       	push	r31
	push r26
    11a8:	af 93       	push	r26
	push r27
    11aa:	bf 93       	push	r27
	push r20
    11ac:	4f 93       	push	r20
	push r21
    11ae:	5f 93       	push	r21

	ldi r16, 12
    11b0:	0c e0       	ldi	r16, 0x0C	; 12
	add r26, r16
    11b2:	a0 0f       	add	r26, r16

	ld r16, X+
    11b4:	0d 91       	ld	r16, X+
	eor ST30, r16
    11b6:	c0 26       	eor	r12, r16
	ld r16, X+
    11b8:	0d 91       	ld	r16, X+
	eor ST31, r16
    11ba:	d0 26       	eor	r13, r16
	ld r16, X+
    11bc:	0d 91       	ld	r16, X+
	eor ST32, r16
    11be:	e0 26       	eor	r14, r16
	ld r16, X+
    11c0:	0d 91       	ld	r16, X+
	eor ST33, r16
    11c2:	f0 26       	eor	r15, r16
	
//------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
	//1 Round------------------------------------------------------------------------------------------
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	ldi r31, hi8(SBOX_TABLE)	
    11c4:	f1 e0       	ldi	r31, 0x01	; 1
	mov r30, ST00 
    11c6:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    11c8:	10 81       	ld	r17, Z
	mov M2, M1
    11ca:	21 2f       	mov	r18, r17
	mov M3, M2 
    11cc:	32 2f       	mov	r19, r18
	mov r28, ST00
    11ce:	c0 2d       	mov	r28, r0
	ld  M0, Y
    11d0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    11d2:	30 27       	eor	r19, r16

	mov r30, ST11
    11d4:	e5 2d       	mov	r30, r5
	ld  T0, Z
    11d6:	40 81       	ld	r20, Z
	eor M0, T0
    11d8:	04 27       	eor	r16, r20
	eor M2, T0
    11da:	24 27       	eor	r18, r20
	eor M3, T0 
    11dc:	34 27       	eor	r19, r20
	mov r28, ST11
    11de:	c5 2d       	mov	r28, r5
	ld  T0, Y
    11e0:	48 81       	ld	r20, Y
	eor M0, T0
    11e2:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    11e4:	14 27       	eor	r17, r20

	mov r30, ST22
    11e6:	ea 2d       	mov	r30, r10
	ld  T0, Z
    11e8:	40 81       	ld	r20, Z
	eor M0, T0
    11ea:	04 27       	eor	r16, r20
	eor M1, T0
    11ec:	14 27       	eor	r17, r20
	eor M3, T0
    11ee:	34 27       	eor	r19, r20
	mov r28, ST22
    11f0:	ca 2d       	mov	r28, r10
	ld  T0, Y
    11f2:	48 81       	ld	r20, Y
	eor M1, T0
    11f4:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    11f6:	24 27       	eor	r18, r20

	mov r30, ST33
    11f8:	ef 2d       	mov	r30, r15
	ld  T0, Z
    11fa:	40 81       	ld	r20, Z
	eor M0, T0
    11fc:	04 27       	eor	r16, r20
	eor M1, T0
    11fe:	14 27       	eor	r17, r20
	eor M2, T0 
    1200:	24 27       	eor	r18, r20
	mov r28, ST33
    1202:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1204:	48 81       	ld	r20, Y
	eor M2, T0
    1206:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1208:	34 27       	eor	r19, r20

	mov ST00, M0
    120a:	00 2e       	mov	r0, r16
	mov ST01, M1
    120c:	11 2e       	mov	r1, r17
	mov ST02, M2
    120e:	22 2e       	mov	r2, r18
	mov ST03, M3
    1210:	33 2e       	mov	r3, r19

	ld r16, X+
    1212:	0d 91       	ld	r16, X+
	eor ST00, r16
    1214:	00 26       	eor	r0, r16
	ld r16, X+
    1216:	0d 91       	ld	r16, X+
	eor ST01, r16
    1218:	10 26       	eor	r1, r16
	ld r16, X+
    121a:	0d 91       	ld	r16, X+
	eor ST02, r16
    121c:	20 26       	eor	r2, r16
	ld r16, X+
    121e:	0d 91       	ld	r16, X+
	eor ST03, r16
    1220:	30 26       	eor	r3, r16

	pop r31
    1222:	ff 91       	pop	r31
	pop r30
    1224:	ef 91       	pop	r30
	movw r16, r30
    1226:	8f 01       	movw	r16, r30
	
	ld ST10, Z+
    1228:	41 90       	ld	r4, Z+
	ld ST11, Z+
    122a:	51 90       	ld	r5, Z+
	ld ST12, Z+
    122c:	61 90       	ld	r6, Z+
	ld ST13, Z+
    122e:	71 90       	ld	r7, Z+
	ld ST20, Z+
    1230:	81 90       	ld	r8, Z+
	ld ST21, Z+
    1232:	91 90       	ld	r9, Z+
	ld ST22, Z+
    1234:	a1 90       	ld	r10, Z+
	ld ST23, Z+
    1236:	b1 90       	ld	r11, Z+
	ld ST30, Z+
    1238:	c1 90       	ld	r12, Z+
	ld ST31, Z+
    123a:	d1 90       	ld	r13, Z+
	ld ST32, Z+
    123c:	e1 90       	ld	r14, Z+
	ld ST33, Z+
    123e:	f1 90       	ld	r15, Z+
	push r16
    1240:	0f 93       	push	r16
	push r17
    1242:	1f 93       	push	r17
	ldi r31, hi8(SBOX_TABLE)	
    1244:	f1 e0       	ldi	r31, 0x01	; 1

	//2 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1246:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1248:	10 81       	ld	r17, Z
	mov M2, M1
    124a:	21 2f       	mov	r18, r17
	mov M3, M2 
    124c:	32 2f       	mov	r19, r18
	mov r28, ST00
    124e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1250:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1252:	30 27       	eor	r19, r16

	mov r30, ST11
    1254:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1256:	40 81       	ld	r20, Z
	eor M0, T0
    1258:	04 27       	eor	r16, r20
	eor M2, T0
    125a:	24 27       	eor	r18, r20
	eor M3, T0 
    125c:	34 27       	eor	r19, r20
	mov r28, ST11
    125e:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1260:	48 81       	ld	r20, Y
	eor M0, T0
    1262:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1264:	14 27       	eor	r17, r20

	mov r30, ST22
    1266:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1268:	40 81       	ld	r20, Z
	eor M0, T0
    126a:	04 27       	eor	r16, r20
	eor M1, T0
    126c:	14 27       	eor	r17, r20
	eor M3, T0
    126e:	34 27       	eor	r19, r20
	mov r28, ST22
    1270:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1272:	48 81       	ld	r20, Y
	eor M1, T0
    1274:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1276:	24 27       	eor	r18, r20

	mov r30, ST33
    1278:	ef 2d       	mov	r30, r15
	ld  T0, Z
    127a:	40 81       	ld	r20, Z
	eor M0, T0
    127c:	04 27       	eor	r16, r20
	eor M1, T0
    127e:	14 27       	eor	r17, r20
	eor M2, T0 
    1280:	24 27       	eor	r18, r20
	mov r28, ST33
    1282:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1284:	48 81       	ld	r20, Y
	eor M2, T0
    1286:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1288:	34 27       	eor	r19, r20

	mov ST00, M0
    128a:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    128c:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    128e:	50 81       	ld	r21, Z
	mov T2, T1
    1290:	65 2f       	mov	r22, r21
	mov T3, T2 
    1292:	76 2f       	mov	r23, r22
	mov r28, ST10
    1294:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1296:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1298:	74 27       	eor	r23, r20

	mov r30, ST21
    129a:	e9 2d       	mov	r30, r9
	ld  M0, Z
    129c:	00 81       	ld	r16, Z
	eor T0, M0
    129e:	40 27       	eor	r20, r16
	eor T2, M0
    12a0:	60 27       	eor	r22, r16
	eor T3, M0 
    12a2:	70 27       	eor	r23, r16
	mov r28, ST21
    12a4:	c9 2d       	mov	r28, r9
	ld  M0, Y
    12a6:	08 81       	ld	r16, Y
	eor T0, M0
    12a8:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    12aa:	50 27       	eor	r21, r16

	mov r30, ST32
    12ac:	ee 2d       	mov	r30, r14
	ld  M0, Z
    12ae:	00 81       	ld	r16, Z
	eor T0, M0
    12b0:	40 27       	eor	r20, r16
	eor T1, M0
    12b2:	50 27       	eor	r21, r16
	eor T3, M0 
    12b4:	70 27       	eor	r23, r16
	mov r28, ST32
    12b6:	ce 2d       	mov	r28, r14
	ld  M0, Y
    12b8:	08 81       	ld	r16, Y
	eor T1, M0
    12ba:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    12bc:	60 27       	eor	r22, r16

	mov r30, ST03
    12be:	e3 2d       	mov	r30, r3
	ld  M0, Z
    12c0:	00 81       	ld	r16, Z
	eor T0, M0
    12c2:	40 27       	eor	r20, r16
	eor T1, M0
    12c4:	50 27       	eor	r21, r16
	eor T2, M0 
    12c6:	60 27       	eor	r22, r16
	mov r28, ST03
    12c8:	c3 2d       	mov	r28, r3
	ld  M0, Y
    12ca:	08 81       	ld	r16, Y
	eor T2, M0
    12cc:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    12ce:	70 27       	eor	r23, r16

	mov ST10, T0
    12d0:	44 2e       	mov	r4, r20
	mov ST11, T1
    12d2:	55 2e       	mov	r5, r21
	mov ST03, M3
    12d4:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    12d6:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    12d8:	40 81       	ld	r20, Z
	mov T1, T0
    12da:	54 2f       	mov	r21, r20
	mov M3, T1 
    12dc:	35 2f       	mov	r19, r21
	mov r28, ST20
    12de:	c8 2d       	mov	r28, r8
	ld  M0, Y
    12e0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    12e2:	30 27       	eor	r19, r16

	mov r30, ST31
    12e4:	ed 2d       	mov	r30, r13
	ld  r25, Z
    12e6:	90 81       	ld	r25, Z
	eor M0, r25
    12e8:	09 27       	eor	r16, r25
	eor T1, r25
    12ea:	59 27       	eor	r21, r25
	eor M3, r25
    12ec:	39 27       	eor	r19, r25
	mov r28, ST31
    12ee:	cd 2d       	mov	r28, r13
	ld  r25, Y
    12f0:	98 81       	ld	r25, Y
	eor M0, r25
    12f2:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    12f4:	49 27       	eor	r20, r25

	mov r30, ST02
    12f6:	e2 2d       	mov	r30, r2
	ld  r25, Z
    12f8:	90 81       	ld	r25, Z
	eor M0, r25
    12fa:	09 27       	eor	r16, r25
	eor T0, r25
    12fc:	49 27       	eor	r20, r25
	eor M3, r25
    12fe:	39 27       	eor	r19, r25
	mov r28, ST02
    1300:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1302:	98 81       	ld	r25, Y
	eor T0, r25
    1304:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1306:	59 27       	eor	r21, r25

	mov r30, ST13
    1308:	e7 2d       	mov	r30, r7
	ld  r25, Z
    130a:	90 81       	ld	r25, Z
	eor M0, r25
    130c:	09 27       	eor	r16, r25
	eor T0, r25
    130e:	49 27       	eor	r20, r25
	eor T1, r25 
    1310:	59 27       	eor	r21, r25
	mov r28, ST13
    1312:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1314:	98 81       	ld	r25, Y
	eor T1, r25
    1316:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1318:	39 27       	eor	r19, r25

	mov ST20, M0
    131a:	80 2e       	mov	r8, r16
	mov ST21, T0
    131c:	94 2e       	mov	r9, r20
	mov ST22, T1
    131e:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1320:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1322:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1324:	50 81       	ld	r21, Z
	mov T3, T1
    1326:	75 2f       	mov	r23, r21
	mov r25, T3 
    1328:	97 2f       	mov	r25, r23
	mov r28, ST30
    132a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    132c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    132e:	94 27       	eor	r25, r20

	mov r30, ST01
    1330:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1332:	00 81       	ld	r16, Z
	eor T0, M0
    1334:	40 27       	eor	r20, r16
	eor T3, M0
    1336:	70 27       	eor	r23, r16
	eor r25, M0 
    1338:	90 27       	eor	r25, r16
	mov r28, ST01
    133a:	c1 2d       	mov	r28, r1
	ld  M0, Y
    133c:	08 81       	ld	r16, Y
	eor T0, M0
    133e:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1340:	50 27       	eor	r21, r16

	mov r30, ST12
    1342:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1344:	00 81       	ld	r16, Z
	eor T0, M0
    1346:	40 27       	eor	r20, r16
	eor T1, M0
    1348:	50 27       	eor	r21, r16
	eor r25, M0 
    134a:	90 27       	eor	r25, r16
	mov r28, ST12
    134c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    134e:	08 81       	ld	r16, Y
	eor T1, M0
    1350:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1352:	70 27       	eor	r23, r16

	mov r30, ST23
    1354:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1356:	00 81       	ld	r16, Z
	eor T0, M0
    1358:	40 27       	eor	r20, r16
	eor T1, M0
    135a:	50 27       	eor	r21, r16
	eor T3, M0 
    135c:	70 27       	eor	r23, r16
	mov r28, ST23
    135e:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1360:	08 81       	ld	r16, Y
	eor T3, M0
    1362:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1364:	90 27       	eor	r25, r16

	mov ST30, T0
    1366:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1368:	d5 2e       	mov	r13, r21
	mov ST32, T3
    136a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    136c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    136e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1370:	22 2e       	mov	r2, r18
	mov ST12, T2
    1372:	66 2e       	mov	r6, r22
	mov ST23, M3
    1374:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1376:	0d 91       	ld	r16, X+
    1378:	00 26       	eor	r0, r16
    137a:	0d 91       	ld	r16, X+
    137c:	10 26       	eor	r1, r16
    137e:	0d 91       	ld	r16, X+
    1380:	20 26       	eor	r2, r16
    1382:	0d 91       	ld	r16, X+
    1384:	30 26       	eor	r3, r16
    1386:	0d 91       	ld	r16, X+
    1388:	40 26       	eor	r4, r16
    138a:	0d 91       	ld	r16, X+
    138c:	50 26       	eor	r5, r16
    138e:	0d 91       	ld	r16, X+
    1390:	60 26       	eor	r6, r16
    1392:	0d 91       	ld	r16, X+
    1394:	70 26       	eor	r7, r16
    1396:	0d 91       	ld	r16, X+
    1398:	80 26       	eor	r8, r16
    139a:	0d 91       	ld	r16, X+
    139c:	90 26       	eor	r9, r16
    139e:	0d 91       	ld	r16, X+
    13a0:	a0 26       	eor	r10, r16
    13a2:	0d 91       	ld	r16, X+
    13a4:	b0 26       	eor	r11, r16
    13a6:	0d 91       	ld	r16, X+
    13a8:	c0 26       	eor	r12, r16
    13aa:	0d 91       	ld	r16, X+
    13ac:	d0 26       	eor	r13, r16
    13ae:	0d 91       	ld	r16, X+
    13b0:	e0 26       	eor	r14, r16
    13b2:	0d 91       	ld	r16, X+
    13b4:	f0 26       	eor	r15, r16
	
	//3 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    13b6:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    13b8:	10 81       	ld	r17, Z
	mov M2, M1
    13ba:	21 2f       	mov	r18, r17
	mov M3, M2 
    13bc:	32 2f       	mov	r19, r18
	mov r28, ST00
    13be:	c0 2d       	mov	r28, r0
	ld  M0, Y
    13c0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    13c2:	30 27       	eor	r19, r16

	mov r30, ST11
    13c4:	e5 2d       	mov	r30, r5
	ld  T0, Z
    13c6:	40 81       	ld	r20, Z
	eor M0, T0
    13c8:	04 27       	eor	r16, r20
	eor M2, T0
    13ca:	24 27       	eor	r18, r20
	eor M3, T0 
    13cc:	34 27       	eor	r19, r20
	mov r28, ST11
    13ce:	c5 2d       	mov	r28, r5
	ld  T0, Y
    13d0:	48 81       	ld	r20, Y
	eor M0, T0
    13d2:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    13d4:	14 27       	eor	r17, r20

	mov r30, ST22
    13d6:	ea 2d       	mov	r30, r10
	ld  T0, Z
    13d8:	40 81       	ld	r20, Z
	eor M0, T0
    13da:	04 27       	eor	r16, r20
	eor M1, T0
    13dc:	14 27       	eor	r17, r20
	eor M3, T0
    13de:	34 27       	eor	r19, r20
	mov r28, ST22
    13e0:	ca 2d       	mov	r28, r10
	ld  T0, Y
    13e2:	48 81       	ld	r20, Y
	eor M1, T0
    13e4:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    13e6:	24 27       	eor	r18, r20

	mov r30, ST33
    13e8:	ef 2d       	mov	r30, r15
	ld  T0, Z
    13ea:	40 81       	ld	r20, Z
	eor M0, T0
    13ec:	04 27       	eor	r16, r20
	eor M1, T0
    13ee:	14 27       	eor	r17, r20
	eor M2, T0 
    13f0:	24 27       	eor	r18, r20
	mov r28, ST33
    13f2:	cf 2d       	mov	r28, r15
	ld  T0, Y
    13f4:	48 81       	ld	r20, Y
	eor M2, T0
    13f6:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    13f8:	34 27       	eor	r19, r20

	mov ST00, M0
    13fa:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    13fc:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    13fe:	50 81       	ld	r21, Z
	mov T2, T1
    1400:	65 2f       	mov	r22, r21
	mov T3, T2 
    1402:	76 2f       	mov	r23, r22
	mov r28, ST10
    1404:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1406:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1408:	74 27       	eor	r23, r20

	mov r30, ST21
    140a:	e9 2d       	mov	r30, r9
	ld  M0, Z
    140c:	00 81       	ld	r16, Z
	eor T0, M0
    140e:	40 27       	eor	r20, r16
	eor T2, M0
    1410:	60 27       	eor	r22, r16
	eor T3, M0 
    1412:	70 27       	eor	r23, r16
	mov r28, ST21
    1414:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1416:	08 81       	ld	r16, Y
	eor T0, M0
    1418:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    141a:	50 27       	eor	r21, r16

	mov r30, ST32
    141c:	ee 2d       	mov	r30, r14
	ld  M0, Z
    141e:	00 81       	ld	r16, Z
	eor T0, M0
    1420:	40 27       	eor	r20, r16
	eor T1, M0
    1422:	50 27       	eor	r21, r16
	eor T3, M0 
    1424:	70 27       	eor	r23, r16
	mov r28, ST32
    1426:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1428:	08 81       	ld	r16, Y
	eor T1, M0
    142a:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    142c:	60 27       	eor	r22, r16

	mov r30, ST03
    142e:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1430:	00 81       	ld	r16, Z
	eor T0, M0
    1432:	40 27       	eor	r20, r16
	eor T1, M0
    1434:	50 27       	eor	r21, r16
	eor T2, M0 
    1436:	60 27       	eor	r22, r16
	mov r28, ST03
    1438:	c3 2d       	mov	r28, r3
	ld  M0, Y
    143a:	08 81       	ld	r16, Y
	eor T2, M0
    143c:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    143e:	70 27       	eor	r23, r16

	mov ST10, T0
    1440:	44 2e       	mov	r4, r20
	mov ST11, T1
    1442:	55 2e       	mov	r5, r21
	mov ST03, M3
    1444:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1446:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1448:	40 81       	ld	r20, Z
	mov T1, T0
    144a:	54 2f       	mov	r21, r20
	mov M3, T1 
    144c:	35 2f       	mov	r19, r21
	mov r28, ST20
    144e:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1450:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1452:	30 27       	eor	r19, r16

	mov r30, ST31
    1454:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1456:	90 81       	ld	r25, Z
	eor M0, r25
    1458:	09 27       	eor	r16, r25
	eor T1, r25
    145a:	59 27       	eor	r21, r25
	eor M3, r25
    145c:	39 27       	eor	r19, r25
	mov r28, ST31
    145e:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1460:	98 81       	ld	r25, Y
	eor M0, r25
    1462:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1464:	49 27       	eor	r20, r25

	mov r30, ST02
    1466:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1468:	90 81       	ld	r25, Z
	eor M0, r25
    146a:	09 27       	eor	r16, r25
	eor T0, r25
    146c:	49 27       	eor	r20, r25
	eor M3, r25
    146e:	39 27       	eor	r19, r25
	mov r28, ST02
    1470:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1472:	98 81       	ld	r25, Y
	eor T0, r25
    1474:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1476:	59 27       	eor	r21, r25

	mov r30, ST13
    1478:	e7 2d       	mov	r30, r7
	ld  r25, Z
    147a:	90 81       	ld	r25, Z
	eor M0, r25
    147c:	09 27       	eor	r16, r25
	eor T0, r25
    147e:	49 27       	eor	r20, r25
	eor T1, r25 
    1480:	59 27       	eor	r21, r25
	mov r28, ST13
    1482:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1484:	98 81       	ld	r25, Y
	eor T1, r25
    1486:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1488:	39 27       	eor	r19, r25

	mov ST20, M0
    148a:	80 2e       	mov	r8, r16
	mov ST21, T0
    148c:	94 2e       	mov	r9, r20
	mov ST22, T1
    148e:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1490:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1492:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1494:	50 81       	ld	r21, Z
	mov T3, T1
    1496:	75 2f       	mov	r23, r21
	mov r25, T3 
    1498:	97 2f       	mov	r25, r23
	mov r28, ST30
    149a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    149c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    149e:	94 27       	eor	r25, r20

	mov r30, ST01
    14a0:	e1 2d       	mov	r30, r1
	ld  M0, Z
    14a2:	00 81       	ld	r16, Z
	eor T0, M0
    14a4:	40 27       	eor	r20, r16
	eor T3, M0
    14a6:	70 27       	eor	r23, r16
	eor r25, M0 
    14a8:	90 27       	eor	r25, r16
	mov r28, ST01
    14aa:	c1 2d       	mov	r28, r1
	ld  M0, Y
    14ac:	08 81       	ld	r16, Y
	eor T0, M0
    14ae:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    14b0:	50 27       	eor	r21, r16

	mov r30, ST12
    14b2:	e6 2d       	mov	r30, r6
	ld  M0, Z
    14b4:	00 81       	ld	r16, Z
	eor T0, M0
    14b6:	40 27       	eor	r20, r16
	eor T1, M0
    14b8:	50 27       	eor	r21, r16
	eor r25, M0 
    14ba:	90 27       	eor	r25, r16
	mov r28, ST12
    14bc:	c6 2d       	mov	r28, r6
	ld  M0, Y
    14be:	08 81       	ld	r16, Y
	eor T1, M0
    14c0:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    14c2:	70 27       	eor	r23, r16

	mov r30, ST23
    14c4:	eb 2d       	mov	r30, r11
	ld  M0, Z
    14c6:	00 81       	ld	r16, Z
	eor T0, M0
    14c8:	40 27       	eor	r20, r16
	eor T1, M0
    14ca:	50 27       	eor	r21, r16
	eor T3, M0 
    14cc:	70 27       	eor	r23, r16
	mov r28, ST23
    14ce:	cb 2d       	mov	r28, r11
	ld  M0, Y
    14d0:	08 81       	ld	r16, Y
	eor T3, M0
    14d2:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    14d4:	90 27       	eor	r25, r16

	mov ST30, T0
    14d6:	c4 2e       	mov	r12, r20
	mov ST31, T1
    14d8:	d5 2e       	mov	r13, r21
	mov ST32, T3
    14da:	e7 2e       	mov	r14, r23
	mov ST33, r25
    14dc:	f9 2e       	mov	r15, r25
	mov ST01, M1
    14de:	11 2e       	mov	r1, r17
	mov ST02, M2
    14e0:	22 2e       	mov	r2, r18
	mov ST12, T2
    14e2:	66 2e       	mov	r6, r22
	mov ST23, M3
    14e4:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    14e6:	0d 91       	ld	r16, X+
    14e8:	00 26       	eor	r0, r16
    14ea:	0d 91       	ld	r16, X+
    14ec:	10 26       	eor	r1, r16
    14ee:	0d 91       	ld	r16, X+
    14f0:	20 26       	eor	r2, r16
    14f2:	0d 91       	ld	r16, X+
    14f4:	30 26       	eor	r3, r16
    14f6:	0d 91       	ld	r16, X+
    14f8:	40 26       	eor	r4, r16
    14fa:	0d 91       	ld	r16, X+
    14fc:	50 26       	eor	r5, r16
    14fe:	0d 91       	ld	r16, X+
    1500:	60 26       	eor	r6, r16
    1502:	0d 91       	ld	r16, X+
    1504:	70 26       	eor	r7, r16
    1506:	0d 91       	ld	r16, X+
    1508:	80 26       	eor	r8, r16
    150a:	0d 91       	ld	r16, X+
    150c:	90 26       	eor	r9, r16
    150e:	0d 91       	ld	r16, X+
    1510:	a0 26       	eor	r10, r16
    1512:	0d 91       	ld	r16, X+
    1514:	b0 26       	eor	r11, r16
    1516:	0d 91       	ld	r16, X+
    1518:	c0 26       	eor	r12, r16
    151a:	0d 91       	ld	r16, X+
    151c:	d0 26       	eor	r13, r16
    151e:	0d 91       	ld	r16, X+
    1520:	e0 26       	eor	r14, r16
    1522:	0d 91       	ld	r16, X+
    1524:	f0 26       	eor	r15, r16
	
	//4 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1526:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1528:	10 81       	ld	r17, Z
	mov M2, M1
    152a:	21 2f       	mov	r18, r17
	mov M3, M2 
    152c:	32 2f       	mov	r19, r18
	mov r28, ST00
    152e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1530:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1532:	30 27       	eor	r19, r16

	mov r30, ST11
    1534:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1536:	40 81       	ld	r20, Z
	eor M0, T0
    1538:	04 27       	eor	r16, r20
	eor M2, T0
    153a:	24 27       	eor	r18, r20
	eor M3, T0 
    153c:	34 27       	eor	r19, r20
	mov r28, ST11
    153e:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1540:	48 81       	ld	r20, Y
	eor M0, T0
    1542:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1544:	14 27       	eor	r17, r20

	mov r30, ST22
    1546:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1548:	40 81       	ld	r20, Z
	eor M0, T0
    154a:	04 27       	eor	r16, r20
	eor M1, T0
    154c:	14 27       	eor	r17, r20
	eor M3, T0
    154e:	34 27       	eor	r19, r20
	mov r28, ST22
    1550:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1552:	48 81       	ld	r20, Y
	eor M1, T0
    1554:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1556:	24 27       	eor	r18, r20

	mov r30, ST33
    1558:	ef 2d       	mov	r30, r15
	ld  T0, Z
    155a:	40 81       	ld	r20, Z
	eor M0, T0
    155c:	04 27       	eor	r16, r20
	eor M1, T0
    155e:	14 27       	eor	r17, r20
	eor M2, T0 
    1560:	24 27       	eor	r18, r20
	mov r28, ST33
    1562:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1564:	48 81       	ld	r20, Y
	eor M2, T0
    1566:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1568:	34 27       	eor	r19, r20

	mov ST00, M0
    156a:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    156c:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    156e:	50 81       	ld	r21, Z
	mov T2, T1
    1570:	65 2f       	mov	r22, r21
	mov T3, T2 
    1572:	76 2f       	mov	r23, r22
	mov r28, ST10
    1574:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1576:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1578:	74 27       	eor	r23, r20

	mov r30, ST21
    157a:	e9 2d       	mov	r30, r9
	ld  M0, Z
    157c:	00 81       	ld	r16, Z
	eor T0, M0
    157e:	40 27       	eor	r20, r16
	eor T2, M0
    1580:	60 27       	eor	r22, r16
	eor T3, M0 
    1582:	70 27       	eor	r23, r16
	mov r28, ST21
    1584:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1586:	08 81       	ld	r16, Y
	eor T0, M0
    1588:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    158a:	50 27       	eor	r21, r16

	mov r30, ST32
    158c:	ee 2d       	mov	r30, r14
	ld  M0, Z
    158e:	00 81       	ld	r16, Z
	eor T0, M0
    1590:	40 27       	eor	r20, r16
	eor T1, M0
    1592:	50 27       	eor	r21, r16
	eor T3, M0 
    1594:	70 27       	eor	r23, r16
	mov r28, ST32
    1596:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1598:	08 81       	ld	r16, Y
	eor T1, M0
    159a:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    159c:	60 27       	eor	r22, r16

	mov r30, ST03
    159e:	e3 2d       	mov	r30, r3
	ld  M0, Z
    15a0:	00 81       	ld	r16, Z
	eor T0, M0
    15a2:	40 27       	eor	r20, r16
	eor T1, M0
    15a4:	50 27       	eor	r21, r16
	eor T2, M0 
    15a6:	60 27       	eor	r22, r16
	mov r28, ST03
    15a8:	c3 2d       	mov	r28, r3
	ld  M0, Y
    15aa:	08 81       	ld	r16, Y
	eor T2, M0
    15ac:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    15ae:	70 27       	eor	r23, r16

	mov ST10, T0
    15b0:	44 2e       	mov	r4, r20
	mov ST11, T1
    15b2:	55 2e       	mov	r5, r21
	mov ST03, M3
    15b4:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    15b6:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    15b8:	40 81       	ld	r20, Z
	mov T1, T0
    15ba:	54 2f       	mov	r21, r20
	mov M3, T1 
    15bc:	35 2f       	mov	r19, r21
	mov r28, ST20
    15be:	c8 2d       	mov	r28, r8
	ld  M0, Y
    15c0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    15c2:	30 27       	eor	r19, r16

	mov r30, ST31
    15c4:	ed 2d       	mov	r30, r13
	ld  r25, Z
    15c6:	90 81       	ld	r25, Z
	eor M0, r25
    15c8:	09 27       	eor	r16, r25
	eor T1, r25
    15ca:	59 27       	eor	r21, r25
	eor M3, r25
    15cc:	39 27       	eor	r19, r25
	mov r28, ST31
    15ce:	cd 2d       	mov	r28, r13
	ld  r25, Y
    15d0:	98 81       	ld	r25, Y
	eor M0, r25
    15d2:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    15d4:	49 27       	eor	r20, r25

	mov r30, ST02
    15d6:	e2 2d       	mov	r30, r2
	ld  r25, Z
    15d8:	90 81       	ld	r25, Z
	eor M0, r25
    15da:	09 27       	eor	r16, r25
	eor T0, r25
    15dc:	49 27       	eor	r20, r25
	eor M3, r25
    15de:	39 27       	eor	r19, r25
	mov r28, ST02
    15e0:	c2 2d       	mov	r28, r2
	ld  r25, Y
    15e2:	98 81       	ld	r25, Y
	eor T0, r25
    15e4:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    15e6:	59 27       	eor	r21, r25

	mov r30, ST13
    15e8:	e7 2d       	mov	r30, r7
	ld  r25, Z
    15ea:	90 81       	ld	r25, Z
	eor M0, r25
    15ec:	09 27       	eor	r16, r25
	eor T0, r25
    15ee:	49 27       	eor	r20, r25
	eor T1, r25 
    15f0:	59 27       	eor	r21, r25
	mov r28, ST13
    15f2:	c7 2d       	mov	r28, r7
	ld  r25, Y
    15f4:	98 81       	ld	r25, Y
	eor T1, r25
    15f6:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    15f8:	39 27       	eor	r19, r25

	mov ST20, M0
    15fa:	80 2e       	mov	r8, r16
	mov ST21, T0
    15fc:	94 2e       	mov	r9, r20
	mov ST22, T1
    15fe:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1600:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1602:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1604:	50 81       	ld	r21, Z
	mov T3, T1
    1606:	75 2f       	mov	r23, r21
	mov r25, T3 
    1608:	97 2f       	mov	r25, r23
	mov r28, ST30
    160a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    160c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    160e:	94 27       	eor	r25, r20

	mov r30, ST01
    1610:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1612:	00 81       	ld	r16, Z
	eor T0, M0
    1614:	40 27       	eor	r20, r16
	eor T3, M0
    1616:	70 27       	eor	r23, r16
	eor r25, M0 
    1618:	90 27       	eor	r25, r16
	mov r28, ST01
    161a:	c1 2d       	mov	r28, r1
	ld  M0, Y
    161c:	08 81       	ld	r16, Y
	eor T0, M0
    161e:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1620:	50 27       	eor	r21, r16

	mov r30, ST12
    1622:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1624:	00 81       	ld	r16, Z
	eor T0, M0
    1626:	40 27       	eor	r20, r16
	eor T1, M0
    1628:	50 27       	eor	r21, r16
	eor r25, M0 
    162a:	90 27       	eor	r25, r16
	mov r28, ST12
    162c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    162e:	08 81       	ld	r16, Y
	eor T1, M0
    1630:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1632:	70 27       	eor	r23, r16

	mov r30, ST23
    1634:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1636:	00 81       	ld	r16, Z
	eor T0, M0
    1638:	40 27       	eor	r20, r16
	eor T1, M0
    163a:	50 27       	eor	r21, r16
	eor T3, M0 
    163c:	70 27       	eor	r23, r16
	mov r28, ST23
    163e:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1640:	08 81       	ld	r16, Y
	eor T3, M0
    1642:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1644:	90 27       	eor	r25, r16

	mov ST30, T0
    1646:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1648:	d5 2e       	mov	r13, r21
	mov ST32, T3
    164a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    164c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    164e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1650:	22 2e       	mov	r2, r18
	mov ST12, T2
    1652:	66 2e       	mov	r6, r22
	mov ST23, M3
    1654:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1656:	0d 91       	ld	r16, X+
    1658:	00 26       	eor	r0, r16
    165a:	0d 91       	ld	r16, X+
    165c:	10 26       	eor	r1, r16
    165e:	0d 91       	ld	r16, X+
    1660:	20 26       	eor	r2, r16
    1662:	0d 91       	ld	r16, X+
    1664:	30 26       	eor	r3, r16
    1666:	0d 91       	ld	r16, X+
    1668:	40 26       	eor	r4, r16
    166a:	0d 91       	ld	r16, X+
    166c:	50 26       	eor	r5, r16
    166e:	0d 91       	ld	r16, X+
    1670:	60 26       	eor	r6, r16
    1672:	0d 91       	ld	r16, X+
    1674:	70 26       	eor	r7, r16
    1676:	0d 91       	ld	r16, X+
    1678:	80 26       	eor	r8, r16
    167a:	0d 91       	ld	r16, X+
    167c:	90 26       	eor	r9, r16
    167e:	0d 91       	ld	r16, X+
    1680:	a0 26       	eor	r10, r16
    1682:	0d 91       	ld	r16, X+
    1684:	b0 26       	eor	r11, r16
    1686:	0d 91       	ld	r16, X+
    1688:	c0 26       	eor	r12, r16
    168a:	0d 91       	ld	r16, X+
    168c:	d0 26       	eor	r13, r16
    168e:	0d 91       	ld	r16, X+
    1690:	e0 26       	eor	r14, r16
    1692:	0d 91       	ld	r16, X+
    1694:	f0 26       	eor	r15, r16
	
	//5 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1696:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1698:	10 81       	ld	r17, Z
	mov M2, M1
    169a:	21 2f       	mov	r18, r17
	mov M3, M2 
    169c:	32 2f       	mov	r19, r18
	mov r28, ST00
    169e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    16a0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    16a2:	30 27       	eor	r19, r16

	mov r30, ST11
    16a4:	e5 2d       	mov	r30, r5
	ld  T0, Z
    16a6:	40 81       	ld	r20, Z
	eor M0, T0
    16a8:	04 27       	eor	r16, r20
	eor M2, T0
    16aa:	24 27       	eor	r18, r20
	eor M3, T0 
    16ac:	34 27       	eor	r19, r20
	mov r28, ST11
    16ae:	c5 2d       	mov	r28, r5
	ld  T0, Y
    16b0:	48 81       	ld	r20, Y
	eor M0, T0
    16b2:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    16b4:	14 27       	eor	r17, r20

	mov r30, ST22
    16b6:	ea 2d       	mov	r30, r10
	ld  T0, Z
    16b8:	40 81       	ld	r20, Z
	eor M0, T0
    16ba:	04 27       	eor	r16, r20
	eor M1, T0
    16bc:	14 27       	eor	r17, r20
	eor M3, T0
    16be:	34 27       	eor	r19, r20
	mov r28, ST22
    16c0:	ca 2d       	mov	r28, r10
	ld  T0, Y
    16c2:	48 81       	ld	r20, Y
	eor M1, T0
    16c4:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    16c6:	24 27       	eor	r18, r20

	mov r30, ST33
    16c8:	ef 2d       	mov	r30, r15
	ld  T0, Z
    16ca:	40 81       	ld	r20, Z
	eor M0, T0
    16cc:	04 27       	eor	r16, r20
	eor M1, T0
    16ce:	14 27       	eor	r17, r20
	eor M2, T0 
    16d0:	24 27       	eor	r18, r20
	mov r28, ST33
    16d2:	cf 2d       	mov	r28, r15
	ld  T0, Y
    16d4:	48 81       	ld	r20, Y
	eor M2, T0
    16d6:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    16d8:	34 27       	eor	r19, r20

	mov ST00, M0
    16da:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    16dc:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    16de:	50 81       	ld	r21, Z
	mov T2, T1
    16e0:	65 2f       	mov	r22, r21
	mov T3, T2 
    16e2:	76 2f       	mov	r23, r22
	mov r28, ST10
    16e4:	c4 2d       	mov	r28, r4
	ld  T0, Y
    16e6:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    16e8:	74 27       	eor	r23, r20

	mov r30, ST21
    16ea:	e9 2d       	mov	r30, r9
	ld  M0, Z
    16ec:	00 81       	ld	r16, Z
	eor T0, M0
    16ee:	40 27       	eor	r20, r16
	eor T2, M0
    16f0:	60 27       	eor	r22, r16
	eor T3, M0 
    16f2:	70 27       	eor	r23, r16
	mov r28, ST21
    16f4:	c9 2d       	mov	r28, r9
	ld  M0, Y
    16f6:	08 81       	ld	r16, Y
	eor T0, M0
    16f8:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    16fa:	50 27       	eor	r21, r16

	mov r30, ST32
    16fc:	ee 2d       	mov	r30, r14
	ld  M0, Z
    16fe:	00 81       	ld	r16, Z
	eor T0, M0
    1700:	40 27       	eor	r20, r16
	eor T1, M0
    1702:	50 27       	eor	r21, r16
	eor T3, M0 
    1704:	70 27       	eor	r23, r16
	mov r28, ST32
    1706:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1708:	08 81       	ld	r16, Y
	eor T1, M0
    170a:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    170c:	60 27       	eor	r22, r16

	mov r30, ST03
    170e:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1710:	00 81       	ld	r16, Z
	eor T0, M0
    1712:	40 27       	eor	r20, r16
	eor T1, M0
    1714:	50 27       	eor	r21, r16
	eor T2, M0 
    1716:	60 27       	eor	r22, r16
	mov r28, ST03
    1718:	c3 2d       	mov	r28, r3
	ld  M0, Y
    171a:	08 81       	ld	r16, Y
	eor T2, M0
    171c:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    171e:	70 27       	eor	r23, r16

	mov ST10, T0
    1720:	44 2e       	mov	r4, r20
	mov ST11, T1
    1722:	55 2e       	mov	r5, r21
	mov ST03, M3
    1724:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1726:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1728:	40 81       	ld	r20, Z
	mov T1, T0
    172a:	54 2f       	mov	r21, r20
	mov M3, T1 
    172c:	35 2f       	mov	r19, r21
	mov r28, ST20
    172e:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1730:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1732:	30 27       	eor	r19, r16

	mov r30, ST31
    1734:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1736:	90 81       	ld	r25, Z
	eor M0, r25
    1738:	09 27       	eor	r16, r25
	eor T1, r25
    173a:	59 27       	eor	r21, r25
	eor M3, r25
    173c:	39 27       	eor	r19, r25
	mov r28, ST31
    173e:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1740:	98 81       	ld	r25, Y
	eor M0, r25
    1742:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1744:	49 27       	eor	r20, r25

	mov r30, ST02
    1746:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1748:	90 81       	ld	r25, Z
	eor M0, r25
    174a:	09 27       	eor	r16, r25
	eor T0, r25
    174c:	49 27       	eor	r20, r25
	eor M3, r25
    174e:	39 27       	eor	r19, r25
	mov r28, ST02
    1750:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1752:	98 81       	ld	r25, Y
	eor T0, r25
    1754:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1756:	59 27       	eor	r21, r25

	mov r30, ST13
    1758:	e7 2d       	mov	r30, r7
	ld  r25, Z
    175a:	90 81       	ld	r25, Z
	eor M0, r25
    175c:	09 27       	eor	r16, r25
	eor T0, r25
    175e:	49 27       	eor	r20, r25
	eor T1, r25 
    1760:	59 27       	eor	r21, r25
	mov r28, ST13
    1762:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1764:	98 81       	ld	r25, Y
	eor T1, r25
    1766:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1768:	39 27       	eor	r19, r25

	mov ST20, M0
    176a:	80 2e       	mov	r8, r16
	mov ST21, T0
    176c:	94 2e       	mov	r9, r20
	mov ST22, T1
    176e:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1770:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1772:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1774:	50 81       	ld	r21, Z
	mov T3, T1
    1776:	75 2f       	mov	r23, r21
	mov r25, T3 
    1778:	97 2f       	mov	r25, r23
	mov r28, ST30
    177a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    177c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    177e:	94 27       	eor	r25, r20

	mov r30, ST01
    1780:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1782:	00 81       	ld	r16, Z
	eor T0, M0
    1784:	40 27       	eor	r20, r16
	eor T3, M0
    1786:	70 27       	eor	r23, r16
	eor r25, M0 
    1788:	90 27       	eor	r25, r16
	mov r28, ST01
    178a:	c1 2d       	mov	r28, r1
	ld  M0, Y
    178c:	08 81       	ld	r16, Y
	eor T0, M0
    178e:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1790:	50 27       	eor	r21, r16

	mov r30, ST12
    1792:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1794:	00 81       	ld	r16, Z
	eor T0, M0
    1796:	40 27       	eor	r20, r16
	eor T1, M0
    1798:	50 27       	eor	r21, r16
	eor r25, M0 
    179a:	90 27       	eor	r25, r16
	mov r28, ST12
    179c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    179e:	08 81       	ld	r16, Y
	eor T1, M0
    17a0:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    17a2:	70 27       	eor	r23, r16

	mov r30, ST23
    17a4:	eb 2d       	mov	r30, r11
	ld  M0, Z
    17a6:	00 81       	ld	r16, Z
	eor T0, M0
    17a8:	40 27       	eor	r20, r16
	eor T1, M0
    17aa:	50 27       	eor	r21, r16
	eor T3, M0 
    17ac:	70 27       	eor	r23, r16
	mov r28, ST23
    17ae:	cb 2d       	mov	r28, r11
	ld  M0, Y
    17b0:	08 81       	ld	r16, Y
	eor T3, M0
    17b2:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    17b4:	90 27       	eor	r25, r16

	mov ST30, T0
    17b6:	c4 2e       	mov	r12, r20
	mov ST31, T1
    17b8:	d5 2e       	mov	r13, r21
	mov ST32, T3
    17ba:	e7 2e       	mov	r14, r23
	mov ST33, r25
    17bc:	f9 2e       	mov	r15, r25
	mov ST01, M1
    17be:	11 2e       	mov	r1, r17
	mov ST02, M2
    17c0:	22 2e       	mov	r2, r18
	mov ST12, T2
    17c2:	66 2e       	mov	r6, r22
	mov ST23, M3
    17c4:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    17c6:	0d 91       	ld	r16, X+
    17c8:	00 26       	eor	r0, r16
    17ca:	0d 91       	ld	r16, X+
    17cc:	10 26       	eor	r1, r16
    17ce:	0d 91       	ld	r16, X+
    17d0:	20 26       	eor	r2, r16
    17d2:	0d 91       	ld	r16, X+
    17d4:	30 26       	eor	r3, r16
    17d6:	0d 91       	ld	r16, X+
    17d8:	40 26       	eor	r4, r16
    17da:	0d 91       	ld	r16, X+
    17dc:	50 26       	eor	r5, r16
    17de:	0d 91       	ld	r16, X+
    17e0:	60 26       	eor	r6, r16
    17e2:	0d 91       	ld	r16, X+
    17e4:	70 26       	eor	r7, r16
    17e6:	0d 91       	ld	r16, X+
    17e8:	80 26       	eor	r8, r16
    17ea:	0d 91       	ld	r16, X+
    17ec:	90 26       	eor	r9, r16
    17ee:	0d 91       	ld	r16, X+
    17f0:	a0 26       	eor	r10, r16
    17f2:	0d 91       	ld	r16, X+
    17f4:	b0 26       	eor	r11, r16
    17f6:	0d 91       	ld	r16, X+
    17f8:	c0 26       	eor	r12, r16
    17fa:	0d 91       	ld	r16, X+
    17fc:	d0 26       	eor	r13, r16
    17fe:	0d 91       	ld	r16, X+
    1800:	e0 26       	eor	r14, r16
    1802:	0d 91       	ld	r16, X+
    1804:	f0 26       	eor	r15, r16
	
	//6 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1806:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1808:	10 81       	ld	r17, Z
	mov M2, M1
    180a:	21 2f       	mov	r18, r17
	mov M3, M2 
    180c:	32 2f       	mov	r19, r18
	mov r28, ST00
    180e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1810:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1812:	30 27       	eor	r19, r16

	mov r30, ST11
    1814:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1816:	40 81       	ld	r20, Z
	eor M0, T0
    1818:	04 27       	eor	r16, r20
	eor M2, T0
    181a:	24 27       	eor	r18, r20
	eor M3, T0 
    181c:	34 27       	eor	r19, r20
	mov r28, ST11
    181e:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1820:	48 81       	ld	r20, Y
	eor M0, T0
    1822:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1824:	14 27       	eor	r17, r20

	mov r30, ST22
    1826:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1828:	40 81       	ld	r20, Z
	eor M0, T0
    182a:	04 27       	eor	r16, r20
	eor M1, T0
    182c:	14 27       	eor	r17, r20
	eor M3, T0
    182e:	34 27       	eor	r19, r20
	mov r28, ST22
    1830:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1832:	48 81       	ld	r20, Y
	eor M1, T0
    1834:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1836:	24 27       	eor	r18, r20

	mov r30, ST33
    1838:	ef 2d       	mov	r30, r15
	ld  T0, Z
    183a:	40 81       	ld	r20, Z
	eor M0, T0
    183c:	04 27       	eor	r16, r20
	eor M1, T0
    183e:	14 27       	eor	r17, r20
	eor M2, T0 
    1840:	24 27       	eor	r18, r20
	mov r28, ST33
    1842:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1844:	48 81       	ld	r20, Y
	eor M2, T0
    1846:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1848:	34 27       	eor	r19, r20

	mov ST00, M0
    184a:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    184c:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    184e:	50 81       	ld	r21, Z
	mov T2, T1
    1850:	65 2f       	mov	r22, r21
	mov T3, T2 
    1852:	76 2f       	mov	r23, r22
	mov r28, ST10
    1854:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1856:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1858:	74 27       	eor	r23, r20

	mov r30, ST21
    185a:	e9 2d       	mov	r30, r9
	ld  M0, Z
    185c:	00 81       	ld	r16, Z
	eor T0, M0
    185e:	40 27       	eor	r20, r16
	eor T2, M0
    1860:	60 27       	eor	r22, r16
	eor T3, M0 
    1862:	70 27       	eor	r23, r16
	mov r28, ST21
    1864:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1866:	08 81       	ld	r16, Y
	eor T0, M0
    1868:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    186a:	50 27       	eor	r21, r16

	mov r30, ST32
    186c:	ee 2d       	mov	r30, r14
	ld  M0, Z
    186e:	00 81       	ld	r16, Z
	eor T0, M0
    1870:	40 27       	eor	r20, r16
	eor T1, M0
    1872:	50 27       	eor	r21, r16
	eor T3, M0 
    1874:	70 27       	eor	r23, r16
	mov r28, ST32
    1876:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1878:	08 81       	ld	r16, Y
	eor T1, M0
    187a:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    187c:	60 27       	eor	r22, r16

	mov r30, ST03
    187e:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1880:	00 81       	ld	r16, Z
	eor T0, M0
    1882:	40 27       	eor	r20, r16
	eor T1, M0
    1884:	50 27       	eor	r21, r16
	eor T2, M0 
    1886:	60 27       	eor	r22, r16
	mov r28, ST03
    1888:	c3 2d       	mov	r28, r3
	ld  M0, Y
    188a:	08 81       	ld	r16, Y
	eor T2, M0
    188c:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    188e:	70 27       	eor	r23, r16

	mov ST10, T0
    1890:	44 2e       	mov	r4, r20
	mov ST11, T1
    1892:	55 2e       	mov	r5, r21
	mov ST03, M3
    1894:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1896:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1898:	40 81       	ld	r20, Z
	mov T1, T0
    189a:	54 2f       	mov	r21, r20
	mov M3, T1 
    189c:	35 2f       	mov	r19, r21
	mov r28, ST20
    189e:	c8 2d       	mov	r28, r8
	ld  M0, Y
    18a0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    18a2:	30 27       	eor	r19, r16

	mov r30, ST31
    18a4:	ed 2d       	mov	r30, r13
	ld  r25, Z
    18a6:	90 81       	ld	r25, Z
	eor M0, r25
    18a8:	09 27       	eor	r16, r25
	eor T1, r25
    18aa:	59 27       	eor	r21, r25
	eor M3, r25
    18ac:	39 27       	eor	r19, r25
	mov r28, ST31
    18ae:	cd 2d       	mov	r28, r13
	ld  r25, Y
    18b0:	98 81       	ld	r25, Y
	eor M0, r25
    18b2:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    18b4:	49 27       	eor	r20, r25

	mov r30, ST02
    18b6:	e2 2d       	mov	r30, r2
	ld  r25, Z
    18b8:	90 81       	ld	r25, Z
	eor M0, r25
    18ba:	09 27       	eor	r16, r25
	eor T0, r25
    18bc:	49 27       	eor	r20, r25
	eor M3, r25
    18be:	39 27       	eor	r19, r25
	mov r28, ST02
    18c0:	c2 2d       	mov	r28, r2
	ld  r25, Y
    18c2:	98 81       	ld	r25, Y
	eor T0, r25
    18c4:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    18c6:	59 27       	eor	r21, r25

	mov r30, ST13
    18c8:	e7 2d       	mov	r30, r7
	ld  r25, Z
    18ca:	90 81       	ld	r25, Z
	eor M0, r25
    18cc:	09 27       	eor	r16, r25
	eor T0, r25
    18ce:	49 27       	eor	r20, r25
	eor T1, r25 
    18d0:	59 27       	eor	r21, r25
	mov r28, ST13
    18d2:	c7 2d       	mov	r28, r7
	ld  r25, Y
    18d4:	98 81       	ld	r25, Y
	eor T1, r25
    18d6:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    18d8:	39 27       	eor	r19, r25

	mov ST20, M0
    18da:	80 2e       	mov	r8, r16
	mov ST21, T0
    18dc:	94 2e       	mov	r9, r20
	mov ST22, T1
    18de:	a5 2e       	mov	r10, r21
	mov ST13, T3
    18e0:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    18e2:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    18e4:	50 81       	ld	r21, Z
	mov T3, T1
    18e6:	75 2f       	mov	r23, r21
	mov r25, T3 
    18e8:	97 2f       	mov	r25, r23
	mov r28, ST30
    18ea:	cc 2d       	mov	r28, r12
	ld  T0, Y
    18ec:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    18ee:	94 27       	eor	r25, r20

	mov r30, ST01
    18f0:	e1 2d       	mov	r30, r1
	ld  M0, Z
    18f2:	00 81       	ld	r16, Z
	eor T0, M0
    18f4:	40 27       	eor	r20, r16
	eor T3, M0
    18f6:	70 27       	eor	r23, r16
	eor r25, M0 
    18f8:	90 27       	eor	r25, r16
	mov r28, ST01
    18fa:	c1 2d       	mov	r28, r1
	ld  M0, Y
    18fc:	08 81       	ld	r16, Y
	eor T0, M0
    18fe:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1900:	50 27       	eor	r21, r16

	mov r30, ST12
    1902:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1904:	00 81       	ld	r16, Z
	eor T0, M0
    1906:	40 27       	eor	r20, r16
	eor T1, M0
    1908:	50 27       	eor	r21, r16
	eor r25, M0 
    190a:	90 27       	eor	r25, r16
	mov r28, ST12
    190c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    190e:	08 81       	ld	r16, Y
	eor T1, M0
    1910:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1912:	70 27       	eor	r23, r16

	mov r30, ST23
    1914:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1916:	00 81       	ld	r16, Z
	eor T0, M0
    1918:	40 27       	eor	r20, r16
	eor T1, M0
    191a:	50 27       	eor	r21, r16
	eor T3, M0 
    191c:	70 27       	eor	r23, r16
	mov r28, ST23
    191e:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1920:	08 81       	ld	r16, Y
	eor T3, M0
    1922:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1924:	90 27       	eor	r25, r16

	mov ST30, T0
    1926:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1928:	d5 2e       	mov	r13, r21
	mov ST32, T3
    192a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    192c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    192e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1930:	22 2e       	mov	r2, r18
	mov ST12, T2
    1932:	66 2e       	mov	r6, r22
	mov ST23, M3
    1934:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1936:	0d 91       	ld	r16, X+
    1938:	00 26       	eor	r0, r16
    193a:	0d 91       	ld	r16, X+
    193c:	10 26       	eor	r1, r16
    193e:	0d 91       	ld	r16, X+
    1940:	20 26       	eor	r2, r16
    1942:	0d 91       	ld	r16, X+
    1944:	30 26       	eor	r3, r16
    1946:	0d 91       	ld	r16, X+
    1948:	40 26       	eor	r4, r16
    194a:	0d 91       	ld	r16, X+
    194c:	50 26       	eor	r5, r16
    194e:	0d 91       	ld	r16, X+
    1950:	60 26       	eor	r6, r16
    1952:	0d 91       	ld	r16, X+
    1954:	70 26       	eor	r7, r16
    1956:	0d 91       	ld	r16, X+
    1958:	80 26       	eor	r8, r16
    195a:	0d 91       	ld	r16, X+
    195c:	90 26       	eor	r9, r16
    195e:	0d 91       	ld	r16, X+
    1960:	a0 26       	eor	r10, r16
    1962:	0d 91       	ld	r16, X+
    1964:	b0 26       	eor	r11, r16
    1966:	0d 91       	ld	r16, X+
    1968:	c0 26       	eor	r12, r16
    196a:	0d 91       	ld	r16, X+
    196c:	d0 26       	eor	r13, r16
    196e:	0d 91       	ld	r16, X+
    1970:	e0 26       	eor	r14, r16
    1972:	0d 91       	ld	r16, X+
    1974:	f0 26       	eor	r15, r16
	
	//7 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1976:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1978:	10 81       	ld	r17, Z
	mov M2, M1
    197a:	21 2f       	mov	r18, r17
	mov M3, M2 
    197c:	32 2f       	mov	r19, r18
	mov r28, ST00
    197e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1980:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1982:	30 27       	eor	r19, r16

	mov r30, ST11
    1984:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1986:	40 81       	ld	r20, Z
	eor M0, T0
    1988:	04 27       	eor	r16, r20
	eor M2, T0
    198a:	24 27       	eor	r18, r20
	eor M3, T0 
    198c:	34 27       	eor	r19, r20
	mov r28, ST11
    198e:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1990:	48 81       	ld	r20, Y
	eor M0, T0
    1992:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1994:	14 27       	eor	r17, r20

	mov r30, ST22
    1996:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1998:	40 81       	ld	r20, Z
	eor M0, T0
    199a:	04 27       	eor	r16, r20
	eor M1, T0
    199c:	14 27       	eor	r17, r20
	eor M3, T0
    199e:	34 27       	eor	r19, r20
	mov r28, ST22
    19a0:	ca 2d       	mov	r28, r10
	ld  T0, Y
    19a2:	48 81       	ld	r20, Y
	eor M1, T0
    19a4:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    19a6:	24 27       	eor	r18, r20

	mov r30, ST33
    19a8:	ef 2d       	mov	r30, r15
	ld  T0, Z
    19aa:	40 81       	ld	r20, Z
	eor M0, T0
    19ac:	04 27       	eor	r16, r20
	eor M1, T0
    19ae:	14 27       	eor	r17, r20
	eor M2, T0 
    19b0:	24 27       	eor	r18, r20
	mov r28, ST33
    19b2:	cf 2d       	mov	r28, r15
	ld  T0, Y
    19b4:	48 81       	ld	r20, Y
	eor M2, T0
    19b6:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    19b8:	34 27       	eor	r19, r20

	mov ST00, M0
    19ba:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    19bc:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    19be:	50 81       	ld	r21, Z
	mov T2, T1
    19c0:	65 2f       	mov	r22, r21
	mov T3, T2 
    19c2:	76 2f       	mov	r23, r22
	mov r28, ST10
    19c4:	c4 2d       	mov	r28, r4
	ld  T0, Y
    19c6:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    19c8:	74 27       	eor	r23, r20

	mov r30, ST21
    19ca:	e9 2d       	mov	r30, r9
	ld  M0, Z
    19cc:	00 81       	ld	r16, Z
	eor T0, M0
    19ce:	40 27       	eor	r20, r16
	eor T2, M0
    19d0:	60 27       	eor	r22, r16
	eor T3, M0 
    19d2:	70 27       	eor	r23, r16
	mov r28, ST21
    19d4:	c9 2d       	mov	r28, r9
	ld  M0, Y
    19d6:	08 81       	ld	r16, Y
	eor T0, M0
    19d8:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    19da:	50 27       	eor	r21, r16

	mov r30, ST32
    19dc:	ee 2d       	mov	r30, r14
	ld  M0, Z
    19de:	00 81       	ld	r16, Z
	eor T0, M0
    19e0:	40 27       	eor	r20, r16
	eor T1, M0
    19e2:	50 27       	eor	r21, r16
	eor T3, M0 
    19e4:	70 27       	eor	r23, r16
	mov r28, ST32
    19e6:	ce 2d       	mov	r28, r14
	ld  M0, Y
    19e8:	08 81       	ld	r16, Y
	eor T1, M0
    19ea:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    19ec:	60 27       	eor	r22, r16

	mov r30, ST03
    19ee:	e3 2d       	mov	r30, r3
	ld  M0, Z
    19f0:	00 81       	ld	r16, Z
	eor T0, M0
    19f2:	40 27       	eor	r20, r16
	eor T1, M0
    19f4:	50 27       	eor	r21, r16
	eor T2, M0 
    19f6:	60 27       	eor	r22, r16
	mov r28, ST03
    19f8:	c3 2d       	mov	r28, r3
	ld  M0, Y
    19fa:	08 81       	ld	r16, Y
	eor T2, M0
    19fc:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    19fe:	70 27       	eor	r23, r16

	mov ST10, T0
    1a00:	44 2e       	mov	r4, r20
	mov ST11, T1
    1a02:	55 2e       	mov	r5, r21
	mov ST03, M3
    1a04:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1a06:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1a08:	40 81       	ld	r20, Z
	mov T1, T0
    1a0a:	54 2f       	mov	r21, r20
	mov M3, T1 
    1a0c:	35 2f       	mov	r19, r21
	mov r28, ST20
    1a0e:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1a10:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1a12:	30 27       	eor	r19, r16

	mov r30, ST31
    1a14:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1a16:	90 81       	ld	r25, Z
	eor M0, r25
    1a18:	09 27       	eor	r16, r25
	eor T1, r25
    1a1a:	59 27       	eor	r21, r25
	eor M3, r25
    1a1c:	39 27       	eor	r19, r25
	mov r28, ST31
    1a1e:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1a20:	98 81       	ld	r25, Y
	eor M0, r25
    1a22:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1a24:	49 27       	eor	r20, r25

	mov r30, ST02
    1a26:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1a28:	90 81       	ld	r25, Z
	eor M0, r25
    1a2a:	09 27       	eor	r16, r25
	eor T0, r25
    1a2c:	49 27       	eor	r20, r25
	eor M3, r25
    1a2e:	39 27       	eor	r19, r25
	mov r28, ST02
    1a30:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1a32:	98 81       	ld	r25, Y
	eor T0, r25
    1a34:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1a36:	59 27       	eor	r21, r25

	mov r30, ST13
    1a38:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1a3a:	90 81       	ld	r25, Z
	eor M0, r25
    1a3c:	09 27       	eor	r16, r25
	eor T0, r25
    1a3e:	49 27       	eor	r20, r25
	eor T1, r25 
    1a40:	59 27       	eor	r21, r25
	mov r28, ST13
    1a42:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1a44:	98 81       	ld	r25, Y
	eor T1, r25
    1a46:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1a48:	39 27       	eor	r19, r25

	mov ST20, M0
    1a4a:	80 2e       	mov	r8, r16
	mov ST21, T0
    1a4c:	94 2e       	mov	r9, r20
	mov ST22, T1
    1a4e:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1a50:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1a52:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1a54:	50 81       	ld	r21, Z
	mov T3, T1
    1a56:	75 2f       	mov	r23, r21
	mov r25, T3 
    1a58:	97 2f       	mov	r25, r23
	mov r28, ST30
    1a5a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1a5c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1a5e:	94 27       	eor	r25, r20

	mov r30, ST01
    1a60:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1a62:	00 81       	ld	r16, Z
	eor T0, M0
    1a64:	40 27       	eor	r20, r16
	eor T3, M0
    1a66:	70 27       	eor	r23, r16
	eor r25, M0 
    1a68:	90 27       	eor	r25, r16
	mov r28, ST01
    1a6a:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1a6c:	08 81       	ld	r16, Y
	eor T0, M0
    1a6e:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1a70:	50 27       	eor	r21, r16

	mov r30, ST12
    1a72:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1a74:	00 81       	ld	r16, Z
	eor T0, M0
    1a76:	40 27       	eor	r20, r16
	eor T1, M0
    1a78:	50 27       	eor	r21, r16
	eor r25, M0 
    1a7a:	90 27       	eor	r25, r16
	mov r28, ST12
    1a7c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1a7e:	08 81       	ld	r16, Y
	eor T1, M0
    1a80:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1a82:	70 27       	eor	r23, r16

	mov r30, ST23
    1a84:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1a86:	00 81       	ld	r16, Z
	eor T0, M0
    1a88:	40 27       	eor	r20, r16
	eor T1, M0
    1a8a:	50 27       	eor	r21, r16
	eor T3, M0 
    1a8c:	70 27       	eor	r23, r16
	mov r28, ST23
    1a8e:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1a90:	08 81       	ld	r16, Y
	eor T3, M0
    1a92:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1a94:	90 27       	eor	r25, r16

	mov ST30, T0
    1a96:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1a98:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1a9a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1a9c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1a9e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1aa0:	22 2e       	mov	r2, r18
	mov ST12, T2
    1aa2:	66 2e       	mov	r6, r22
	mov ST23, M3
    1aa4:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1aa6:	0d 91       	ld	r16, X+
    1aa8:	00 26       	eor	r0, r16
    1aaa:	0d 91       	ld	r16, X+
    1aac:	10 26       	eor	r1, r16
    1aae:	0d 91       	ld	r16, X+
    1ab0:	20 26       	eor	r2, r16
    1ab2:	0d 91       	ld	r16, X+
    1ab4:	30 26       	eor	r3, r16
    1ab6:	0d 91       	ld	r16, X+
    1ab8:	40 26       	eor	r4, r16
    1aba:	0d 91       	ld	r16, X+
    1abc:	50 26       	eor	r5, r16
    1abe:	0d 91       	ld	r16, X+
    1ac0:	60 26       	eor	r6, r16
    1ac2:	0d 91       	ld	r16, X+
    1ac4:	70 26       	eor	r7, r16
    1ac6:	0d 91       	ld	r16, X+
    1ac8:	80 26       	eor	r8, r16
    1aca:	0d 91       	ld	r16, X+
    1acc:	90 26       	eor	r9, r16
    1ace:	0d 91       	ld	r16, X+
    1ad0:	a0 26       	eor	r10, r16
    1ad2:	0d 91       	ld	r16, X+
    1ad4:	b0 26       	eor	r11, r16
    1ad6:	0d 91       	ld	r16, X+
    1ad8:	c0 26       	eor	r12, r16
    1ada:	0d 91       	ld	r16, X+
    1adc:	d0 26       	eor	r13, r16
    1ade:	0d 91       	ld	r16, X+
    1ae0:	e0 26       	eor	r14, r16
    1ae2:	0d 91       	ld	r16, X+
    1ae4:	f0 26       	eor	r15, r16
	
	//8 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1ae6:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1ae8:	10 81       	ld	r17, Z
	mov M2, M1
    1aea:	21 2f       	mov	r18, r17
	mov M3, M2 
    1aec:	32 2f       	mov	r19, r18
	mov r28, ST00
    1aee:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1af0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1af2:	30 27       	eor	r19, r16

	mov r30, ST11
    1af4:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1af6:	40 81       	ld	r20, Z
	eor M0, T0
    1af8:	04 27       	eor	r16, r20
	eor M2, T0
    1afa:	24 27       	eor	r18, r20
	eor M3, T0 
    1afc:	34 27       	eor	r19, r20
	mov r28, ST11
    1afe:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1b00:	48 81       	ld	r20, Y
	eor M0, T0
    1b02:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1b04:	14 27       	eor	r17, r20

	mov r30, ST22
    1b06:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1b08:	40 81       	ld	r20, Z
	eor M0, T0
    1b0a:	04 27       	eor	r16, r20
	eor M1, T0
    1b0c:	14 27       	eor	r17, r20
	eor M3, T0
    1b0e:	34 27       	eor	r19, r20
	mov r28, ST22
    1b10:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1b12:	48 81       	ld	r20, Y
	eor M1, T0
    1b14:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1b16:	24 27       	eor	r18, r20

	mov r30, ST33
    1b18:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1b1a:	40 81       	ld	r20, Z
	eor M0, T0
    1b1c:	04 27       	eor	r16, r20
	eor M1, T0
    1b1e:	14 27       	eor	r17, r20
	eor M2, T0 
    1b20:	24 27       	eor	r18, r20
	mov r28, ST33
    1b22:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1b24:	48 81       	ld	r20, Y
	eor M2, T0
    1b26:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1b28:	34 27       	eor	r19, r20

	mov ST00, M0
    1b2a:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1b2c:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1b2e:	50 81       	ld	r21, Z
	mov T2, T1
    1b30:	65 2f       	mov	r22, r21
	mov T3, T2 
    1b32:	76 2f       	mov	r23, r22
	mov r28, ST10
    1b34:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1b36:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1b38:	74 27       	eor	r23, r20

	mov r30, ST21
    1b3a:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1b3c:	00 81       	ld	r16, Z
	eor T0, M0
    1b3e:	40 27       	eor	r20, r16
	eor T2, M0
    1b40:	60 27       	eor	r22, r16
	eor T3, M0 
    1b42:	70 27       	eor	r23, r16
	mov r28, ST21
    1b44:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1b46:	08 81       	ld	r16, Y
	eor T0, M0
    1b48:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1b4a:	50 27       	eor	r21, r16

	mov r30, ST32
    1b4c:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1b4e:	00 81       	ld	r16, Z
	eor T0, M0
    1b50:	40 27       	eor	r20, r16
	eor T1, M0
    1b52:	50 27       	eor	r21, r16
	eor T3, M0 
    1b54:	70 27       	eor	r23, r16
	mov r28, ST32
    1b56:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1b58:	08 81       	ld	r16, Y
	eor T1, M0
    1b5a:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1b5c:	60 27       	eor	r22, r16

	mov r30, ST03
    1b5e:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1b60:	00 81       	ld	r16, Z
	eor T0, M0
    1b62:	40 27       	eor	r20, r16
	eor T1, M0
    1b64:	50 27       	eor	r21, r16
	eor T2, M0 
    1b66:	60 27       	eor	r22, r16
	mov r28, ST03
    1b68:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1b6a:	08 81       	ld	r16, Y
	eor T2, M0
    1b6c:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1b6e:	70 27       	eor	r23, r16

	mov ST10, T0
    1b70:	44 2e       	mov	r4, r20
	mov ST11, T1
    1b72:	55 2e       	mov	r5, r21
	mov ST03, M3
    1b74:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1b76:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1b78:	40 81       	ld	r20, Z
	mov T1, T0
    1b7a:	54 2f       	mov	r21, r20
	mov M3, T1 
    1b7c:	35 2f       	mov	r19, r21
	mov r28, ST20
    1b7e:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1b80:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1b82:	30 27       	eor	r19, r16

	mov r30, ST31
    1b84:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1b86:	90 81       	ld	r25, Z
	eor M0, r25
    1b88:	09 27       	eor	r16, r25
	eor T1, r25
    1b8a:	59 27       	eor	r21, r25
	eor M3, r25
    1b8c:	39 27       	eor	r19, r25
	mov r28, ST31
    1b8e:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1b90:	98 81       	ld	r25, Y
	eor M0, r25
    1b92:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1b94:	49 27       	eor	r20, r25

	mov r30, ST02
    1b96:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1b98:	90 81       	ld	r25, Z
	eor M0, r25
    1b9a:	09 27       	eor	r16, r25
	eor T0, r25
    1b9c:	49 27       	eor	r20, r25
	eor M3, r25
    1b9e:	39 27       	eor	r19, r25
	mov r28, ST02
    1ba0:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1ba2:	98 81       	ld	r25, Y
	eor T0, r25
    1ba4:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1ba6:	59 27       	eor	r21, r25

	mov r30, ST13
    1ba8:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1baa:	90 81       	ld	r25, Z
	eor M0, r25
    1bac:	09 27       	eor	r16, r25
	eor T0, r25
    1bae:	49 27       	eor	r20, r25
	eor T1, r25 
    1bb0:	59 27       	eor	r21, r25
	mov r28, ST13
    1bb2:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1bb4:	98 81       	ld	r25, Y
	eor T1, r25
    1bb6:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1bb8:	39 27       	eor	r19, r25

	mov ST20, M0
    1bba:	80 2e       	mov	r8, r16
	mov ST21, T0
    1bbc:	94 2e       	mov	r9, r20
	mov ST22, T1
    1bbe:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1bc0:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1bc2:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1bc4:	50 81       	ld	r21, Z
	mov T3, T1
    1bc6:	75 2f       	mov	r23, r21
	mov r25, T3 
    1bc8:	97 2f       	mov	r25, r23
	mov r28, ST30
    1bca:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1bcc:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1bce:	94 27       	eor	r25, r20

	mov r30, ST01
    1bd0:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1bd2:	00 81       	ld	r16, Z
	eor T0, M0
    1bd4:	40 27       	eor	r20, r16
	eor T3, M0
    1bd6:	70 27       	eor	r23, r16
	eor r25, M0 
    1bd8:	90 27       	eor	r25, r16
	mov r28, ST01
    1bda:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1bdc:	08 81       	ld	r16, Y
	eor T0, M0
    1bde:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1be0:	50 27       	eor	r21, r16

	mov r30, ST12
    1be2:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1be4:	00 81       	ld	r16, Z
	eor T0, M0
    1be6:	40 27       	eor	r20, r16
	eor T1, M0
    1be8:	50 27       	eor	r21, r16
	eor r25, M0 
    1bea:	90 27       	eor	r25, r16
	mov r28, ST12
    1bec:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1bee:	08 81       	ld	r16, Y
	eor T1, M0
    1bf0:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1bf2:	70 27       	eor	r23, r16

	mov r30, ST23
    1bf4:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1bf6:	00 81       	ld	r16, Z
	eor T0, M0
    1bf8:	40 27       	eor	r20, r16
	eor T1, M0
    1bfa:	50 27       	eor	r21, r16
	eor T3, M0 
    1bfc:	70 27       	eor	r23, r16
	mov r28, ST23
    1bfe:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1c00:	08 81       	ld	r16, Y
	eor T3, M0
    1c02:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1c04:	90 27       	eor	r25, r16

	mov ST30, T0
    1c06:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1c08:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1c0a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1c0c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1c0e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1c10:	22 2e       	mov	r2, r18
	mov ST12, T2
    1c12:	66 2e       	mov	r6, r22
	mov ST23, M3
    1c14:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1c16:	0d 91       	ld	r16, X+
    1c18:	00 26       	eor	r0, r16
    1c1a:	0d 91       	ld	r16, X+
    1c1c:	10 26       	eor	r1, r16
    1c1e:	0d 91       	ld	r16, X+
    1c20:	20 26       	eor	r2, r16
    1c22:	0d 91       	ld	r16, X+
    1c24:	30 26       	eor	r3, r16
    1c26:	0d 91       	ld	r16, X+
    1c28:	40 26       	eor	r4, r16
    1c2a:	0d 91       	ld	r16, X+
    1c2c:	50 26       	eor	r5, r16
    1c2e:	0d 91       	ld	r16, X+
    1c30:	60 26       	eor	r6, r16
    1c32:	0d 91       	ld	r16, X+
    1c34:	70 26       	eor	r7, r16
    1c36:	0d 91       	ld	r16, X+
    1c38:	80 26       	eor	r8, r16
    1c3a:	0d 91       	ld	r16, X+
    1c3c:	90 26       	eor	r9, r16
    1c3e:	0d 91       	ld	r16, X+
    1c40:	a0 26       	eor	r10, r16
    1c42:	0d 91       	ld	r16, X+
    1c44:	b0 26       	eor	r11, r16
    1c46:	0d 91       	ld	r16, X+
    1c48:	c0 26       	eor	r12, r16
    1c4a:	0d 91       	ld	r16, X+
    1c4c:	d0 26       	eor	r13, r16
    1c4e:	0d 91       	ld	r16, X+
    1c50:	e0 26       	eor	r14, r16
    1c52:	0d 91       	ld	r16, X+
    1c54:	f0 26       	eor	r15, r16
	
	//9 Round------------------------------------------------------------------------------------------
	
	/* Shift Row and Subbyte , Mixcolumns */
	//! 1번째 열 시작
	mov r30, ST00 
    1c56:	e0 2d       	mov	r30, r0
	ld  M1, Z 
    1c58:	10 81       	ld	r17, Z
	mov M2, M1
    1c5a:	21 2f       	mov	r18, r17
	mov M3, M2 
    1c5c:	32 2f       	mov	r19, r18
	mov r28, ST00
    1c5e:	c0 2d       	mov	r28, r0
	ld  M0, Y
    1c60:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1c62:	30 27       	eor	r19, r16

	mov r30, ST11
    1c64:	e5 2d       	mov	r30, r5
	ld  T0, Z
    1c66:	40 81       	ld	r20, Z
	eor M0, T0
    1c68:	04 27       	eor	r16, r20
	eor M2, T0
    1c6a:	24 27       	eor	r18, r20
	eor M3, T0 
    1c6c:	34 27       	eor	r19, r20
	mov r28, ST11
    1c6e:	c5 2d       	mov	r28, r5
	ld  T0, Y
    1c70:	48 81       	ld	r20, Y
	eor M0, T0
    1c72:	04 27       	eor	r16, r20
	eor M1, T0 ;3, 2, 2, 1 완료
    1c74:	14 27       	eor	r17, r20

	mov r30, ST22
    1c76:	ea 2d       	mov	r30, r10
	ld  T0, Z
    1c78:	40 81       	ld	r20, Z
	eor M0, T0
    1c7a:	04 27       	eor	r16, r20
	eor M1, T0
    1c7c:	14 27       	eor	r17, r20
	eor M3, T0
    1c7e:	34 27       	eor	r19, r20
	mov r28, ST22
    1c80:	ca 2d       	mov	r28, r10
	ld  T0, Y
    1c82:	48 81       	ld	r20, Y
	eor M1, T0
    1c84:	14 27       	eor	r17, r20
	eor M2, T0 ;1, 3, 2, 1 완료
    1c86:	24 27       	eor	r18, r20

	mov r30, ST33
    1c88:	ef 2d       	mov	r30, r15
	ld  T0, Z
    1c8a:	40 81       	ld	r20, Z
	eor M0, T0
    1c8c:	04 27       	eor	r16, r20
	eor M1, T0
    1c8e:	14 27       	eor	r17, r20
	eor M2, T0 
    1c90:	24 27       	eor	r18, r20
	mov r28, ST33
    1c92:	cf 2d       	mov	r28, r15
	ld  T0, Y
    1c94:	48 81       	ld	r20, Y
	eor M2, T0
    1c96:	24 27       	eor	r18, r20
	eor M3, T0 ;1, 1, 3, 2 완료
    1c98:	34 27       	eor	r19, r20

	mov ST00, M0
    1c9a:	00 2e       	mov	r0, r16
	//! 1번째 열 완료

	//! 2번째 열 시작
	mov r30, ST10 
    1c9c:	e4 2d       	mov	r30, r4
	ld  T1, Z 
    1c9e:	50 81       	ld	r21, Z
	mov T2, T1
    1ca0:	65 2f       	mov	r22, r21
	mov T3, T2 
    1ca2:	76 2f       	mov	r23, r22
	mov r28, ST10
    1ca4:	c4 2d       	mov	r28, r4
	ld  T0, Y
    1ca6:	48 81       	ld	r20, Y
	eor T3, T0 ; 2, 1, 1, 3 완료
    1ca8:	74 27       	eor	r23, r20

	mov r30, ST21
    1caa:	e9 2d       	mov	r30, r9
	ld  M0, Z
    1cac:	00 81       	ld	r16, Z
	eor T0, M0
    1cae:	40 27       	eor	r20, r16
	eor T2, M0
    1cb0:	60 27       	eor	r22, r16
	eor T3, M0 
    1cb2:	70 27       	eor	r23, r16
	mov r28, ST21
    1cb4:	c9 2d       	mov	r28, r9
	ld  M0, Y
    1cb6:	08 81       	ld	r16, Y
	eor T0, M0
    1cb8:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1cba:	50 27       	eor	r21, r16

	mov r30, ST32
    1cbc:	ee 2d       	mov	r30, r14
	ld  M0, Z
    1cbe:	00 81       	ld	r16, Z
	eor T0, M0
    1cc0:	40 27       	eor	r20, r16
	eor T1, M0
    1cc2:	50 27       	eor	r21, r16
	eor T3, M0 
    1cc4:	70 27       	eor	r23, r16
	mov r28, ST32
    1cc6:	ce 2d       	mov	r28, r14
	ld  M0, Y
    1cc8:	08 81       	ld	r16, Y
	eor T1, M0
    1cca:	50 27       	eor	r21, r16
	eor T2, M0 ;1, 3, 2, 1 완료
    1ccc:	60 27       	eor	r22, r16

	mov r30, ST03
    1cce:	e3 2d       	mov	r30, r3
	ld  M0, Z
    1cd0:	00 81       	ld	r16, Z
	eor T0, M0
    1cd2:	40 27       	eor	r20, r16
	eor T1, M0
    1cd4:	50 27       	eor	r21, r16
	eor T2, M0 
    1cd6:	60 27       	eor	r22, r16
	mov r28, ST03
    1cd8:	c3 2d       	mov	r28, r3
	ld  M0, Y
    1cda:	08 81       	ld	r16, Y
	eor T2, M0
    1cdc:	60 27       	eor	r22, r16
	eor T3, M0 ;1, 1, 3, 2 완료
    1cde:	70 27       	eor	r23, r16

	mov ST10, T0
    1ce0:	44 2e       	mov	r4, r20
	mov ST11, T1
    1ce2:	55 2e       	mov	r5, r21
	mov ST03, M3
    1ce4:	33 2e       	mov	r3, r19
	//! 2번째 열 완료

	//! 3번째 열 시작
	mov r30, ST20 
    1ce6:	e8 2d       	mov	r30, r8
	ld  T0, Z 
    1ce8:	40 81       	ld	r20, Z
	mov T1, T0
    1cea:	54 2f       	mov	r21, r20
	mov M3, T1 
    1cec:	35 2f       	mov	r19, r21
	mov r28, ST20
    1cee:	c8 2d       	mov	r28, r8
	ld  M0, Y
    1cf0:	08 81       	ld	r16, Y
	eor M3, M0 ; 2, 1, 1, 3 완료
    1cf2:	30 27       	eor	r19, r16

	mov r30, ST31
    1cf4:	ed 2d       	mov	r30, r13
	ld  r25, Z
    1cf6:	90 81       	ld	r25, Z
	eor M0, r25
    1cf8:	09 27       	eor	r16, r25
	eor T1, r25
    1cfa:	59 27       	eor	r21, r25
	eor M3, r25
    1cfc:	39 27       	eor	r19, r25
	mov r28, ST31
    1cfe:	cd 2d       	mov	r28, r13
	ld  r25, Y
    1d00:	98 81       	ld	r25, Y
	eor M0, r25
    1d02:	09 27       	eor	r16, r25
	eor T0, r25 ;3, 2, 2, 1 완료
    1d04:	49 27       	eor	r20, r25

	mov r30, ST02
    1d06:	e2 2d       	mov	r30, r2
	ld  r25, Z
    1d08:	90 81       	ld	r25, Z
	eor M0, r25
    1d0a:	09 27       	eor	r16, r25
	eor T0, r25
    1d0c:	49 27       	eor	r20, r25
	eor M3, r25
    1d0e:	39 27       	eor	r19, r25
	mov r28, ST02
    1d10:	c2 2d       	mov	r28, r2
	ld  r25, Y
    1d12:	98 81       	ld	r25, Y
	eor T0, r25
    1d14:	49 27       	eor	r20, r25
	eor T1, r25;1, 3, 2, 1 완료
    1d16:	59 27       	eor	r21, r25

	mov r30, ST13
    1d18:	e7 2d       	mov	r30, r7
	ld  r25, Z
    1d1a:	90 81       	ld	r25, Z
	eor M0, r25
    1d1c:	09 27       	eor	r16, r25
	eor T0, r25
    1d1e:	49 27       	eor	r20, r25
	eor T1, r25 
    1d20:	59 27       	eor	r21, r25
	mov r28, ST13
    1d22:	c7 2d       	mov	r28, r7
	ld  r25, Y
    1d24:	98 81       	ld	r25, Y
	eor T1, r25
    1d26:	59 27       	eor	r21, r25
	eor M3, r25 ;1, 1, 3, 2 완료
    1d28:	39 27       	eor	r19, r25

	mov ST20, M0
    1d2a:	80 2e       	mov	r8, r16
	mov ST21, T0
    1d2c:	94 2e       	mov	r9, r20
	mov ST22, T1
    1d2e:	a5 2e       	mov	r10, r21
	mov ST13, T3
    1d30:	77 2e       	mov	r7, r23
	//! 3번째 열 완료



	//! 4번째 열 시작
	mov r30, ST30 
    1d32:	ec 2d       	mov	r30, r12
	ld  T1, Z 
    1d34:	50 81       	ld	r21, Z
	mov T3, T1
    1d36:	75 2f       	mov	r23, r21
	mov r25, T3 
    1d38:	97 2f       	mov	r25, r23
	mov r28, ST30
    1d3a:	cc 2d       	mov	r28, r12
	ld  T0, Y
    1d3c:	48 81       	ld	r20, Y
	eor r25, T0 ; 2, 1, 1, 3 완료
    1d3e:	94 27       	eor	r25, r20

	mov r30, ST01
    1d40:	e1 2d       	mov	r30, r1
	ld  M0, Z
    1d42:	00 81       	ld	r16, Z
	eor T0, M0
    1d44:	40 27       	eor	r20, r16
	eor T3, M0
    1d46:	70 27       	eor	r23, r16
	eor r25, M0 
    1d48:	90 27       	eor	r25, r16
	mov r28, ST01
    1d4a:	c1 2d       	mov	r28, r1
	ld  M0, Y
    1d4c:	08 81       	ld	r16, Y
	eor T0, M0
    1d4e:	40 27       	eor	r20, r16
	eor T1, M0 ;3, 2, 2, 1 완료
    1d50:	50 27       	eor	r21, r16

	mov r30, ST12
    1d52:	e6 2d       	mov	r30, r6
	ld  M0, Z
    1d54:	00 81       	ld	r16, Z
	eor T0, M0
    1d56:	40 27       	eor	r20, r16
	eor T1, M0
    1d58:	50 27       	eor	r21, r16
	eor r25, M0 
    1d5a:	90 27       	eor	r25, r16
	mov r28, ST12
    1d5c:	c6 2d       	mov	r28, r6
	ld  M0, Y
    1d5e:	08 81       	ld	r16, Y
	eor T1, M0
    1d60:	50 27       	eor	r21, r16
	eor T3, M0 ;1, 3, 2, 1 완료
    1d62:	70 27       	eor	r23, r16

	mov r30, ST23
    1d64:	eb 2d       	mov	r30, r11
	ld  M0, Z
    1d66:	00 81       	ld	r16, Z
	eor T0, M0
    1d68:	40 27       	eor	r20, r16
	eor T1, M0
    1d6a:	50 27       	eor	r21, r16
	eor T3, M0 
    1d6c:	70 27       	eor	r23, r16
	mov r28, ST23
    1d6e:	cb 2d       	mov	r28, r11
	ld  M0, Y
    1d70:	08 81       	ld	r16, Y
	eor T3, M0
    1d72:	70 27       	eor	r23, r16
	eor r25, M0 ;1, 1, 3, 2 완료
    1d74:	90 27       	eor	r25, r16

	mov ST30, T0
    1d76:	c4 2e       	mov	r12, r20
	mov ST31, T1
    1d78:	d5 2e       	mov	r13, r21
	mov ST32, T3
    1d7a:	e7 2e       	mov	r14, r23
	mov ST33, r25
    1d7c:	f9 2e       	mov	r15, r25
	mov ST01, M1
    1d7e:	11 2e       	mov	r1, r17
	mov ST02, M2
    1d80:	22 2e       	mov	r2, r18
	mov ST12, T2
    1d82:	66 2e       	mov	r6, r22
	mov ST23, M3
    1d84:	b3 2e       	mov	r11, r19
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1d86:	0d 91       	ld	r16, X+
    1d88:	00 26       	eor	r0, r16
    1d8a:	0d 91       	ld	r16, X+
    1d8c:	10 26       	eor	r1, r16
    1d8e:	0d 91       	ld	r16, X+
    1d90:	20 26       	eor	r2, r16
    1d92:	0d 91       	ld	r16, X+
    1d94:	30 26       	eor	r3, r16
    1d96:	0d 91       	ld	r16, X+
    1d98:	40 26       	eor	r4, r16
    1d9a:	0d 91       	ld	r16, X+
    1d9c:	50 26       	eor	r5, r16
    1d9e:	0d 91       	ld	r16, X+
    1da0:	60 26       	eor	r6, r16
    1da2:	0d 91       	ld	r16, X+
    1da4:	70 26       	eor	r7, r16
    1da6:	0d 91       	ld	r16, X+
    1da8:	80 26       	eor	r8, r16
    1daa:	0d 91       	ld	r16, X+
    1dac:	90 26       	eor	r9, r16
    1dae:	0d 91       	ld	r16, X+
    1db0:	a0 26       	eor	r10, r16
    1db2:	0d 91       	ld	r16, X+
    1db4:	b0 26       	eor	r11, r16
    1db6:	0d 91       	ld	r16, X+
    1db8:	c0 26       	eor	r12, r16
    1dba:	0d 91       	ld	r16, X+
    1dbc:	d0 26       	eor	r13, r16
    1dbe:	0d 91       	ld	r16, X+
    1dc0:	e0 26       	eor	r14, r16
    1dc2:	0d 91       	ld	r16, X+
    1dc4:	f0 26       	eor	r15, r16
	


	// 10 Round--------------------------------------------------------------------------------------------
	// Shift Row + Subbyte
	mov r30, ST00
    1dc6:	e0 2d       	mov	r30, r0
	ld ST00, Z
    1dc8:	00 80       	ld	r0, Z
	mov r30, ST10
    1dca:	e4 2d       	mov	r30, r4
	ld ST10, Z
    1dcc:	40 80       	ld	r4, Z
	mov r30, ST20
    1dce:	e8 2d       	mov	r30, r8
	ld ST20, Z
    1dd0:	80 80       	ld	r8, Z
	mov r30, ST30
    1dd2:	ec 2d       	mov	r30, r12
	ld ST30, Z
    1dd4:	c0 80       	ld	r12, Z

	mov r30, ST01
    1dd6:	e1 2d       	mov	r30, r1
	ld T0, Z
    1dd8:	40 81       	ld	r20, Z
	mov r30, ST11
    1dda:	e5 2d       	mov	r30, r5
	ld ST01, Z
    1ddc:	10 80       	ld	r1, Z
	mov r30, ST21
    1dde:	e9 2d       	mov	r30, r9
	ld ST11, Z
    1de0:	50 80       	ld	r5, Z
	mov r30, ST31
    1de2:	ed 2d       	mov	r30, r13
	ld ST21, Z
    1de4:	90 80       	ld	r9, Z
	mov ST31, T0
    1de6:	d4 2e       	mov	r13, r20

	mov r30, ST02
    1de8:	e2 2d       	mov	r30, r2
	ld T0, Z
    1dea:	40 81       	ld	r20, Z
	mov r30, ST12
    1dec:	e6 2d       	mov	r30, r6
	ld T1, Z
    1dee:	50 81       	ld	r21, Z
	mov r30, ST22
    1df0:	ea 2d       	mov	r30, r10
	ld ST02, Z
    1df2:	20 80       	ld	r2, Z
	mov r30, ST32
    1df4:	ee 2d       	mov	r30, r14
	ld ST12, Z
    1df6:	60 80       	ld	r6, Z
	mov ST22, T0
    1df8:	a4 2e       	mov	r10, r20
	mov ST32, T1
    1dfa:	e5 2e       	mov	r14, r21

	mov r30, ST03
    1dfc:	e3 2d       	mov	r30, r3
	ld T0, Z
    1dfe:	40 81       	ld	r20, Z
	mov r30, ST33
    1e00:	ef 2d       	mov	r30, r15
	ld  ST03, Z
    1e02:	30 80       	ld	r3, Z
	mov r30, ST23
    1e04:	eb 2d       	mov	r30, r11
	ld ST33, Z
    1e06:	f0 80       	ld	r15, Z
	mov r30, ST13
    1e08:	e7 2d       	mov	r30, r7
	ld ST23, Z
    1e0a:	b0 80       	ld	r11, Z
	mov ST13, T0
    1e0c:	74 2e       	mov	r7, r20
	.irp row, 0, 1, 2, 3
		.irp col, 0, 1, 2, 3
			ld r16, X+
			eor ST\row\col, r16
		.endr
	.endr
    1e0e:	0d 91       	ld	r16, X+
    1e10:	00 26       	eor	r0, r16
    1e12:	0d 91       	ld	r16, X+
    1e14:	10 26       	eor	r1, r16
    1e16:	0d 91       	ld	r16, X+
    1e18:	20 26       	eor	r2, r16
    1e1a:	0d 91       	ld	r16, X+
    1e1c:	30 26       	eor	r3, r16
    1e1e:	0d 91       	ld	r16, X+
    1e20:	40 26       	eor	r4, r16
    1e22:	0d 91       	ld	r16, X+
    1e24:	50 26       	eor	r5, r16
    1e26:	0d 91       	ld	r16, X+
    1e28:	60 26       	eor	r6, r16
    1e2a:	0d 91       	ld	r16, X+
    1e2c:	70 26       	eor	r7, r16
    1e2e:	0d 91       	ld	r16, X+
    1e30:	80 26       	eor	r8, r16
    1e32:	0d 91       	ld	r16, X+
    1e34:	90 26       	eor	r9, r16
    1e36:	0d 91       	ld	r16, X+
    1e38:	a0 26       	eor	r10, r16
    1e3a:	0d 91       	ld	r16, X+
    1e3c:	b0 26       	eor	r11, r16
    1e3e:	0d 91       	ld	r16, X+
    1e40:	c0 26       	eor	r12, r16
    1e42:	0d 91       	ld	r16, X+
    1e44:	d0 26       	eor	r13, r16
    1e46:	0d 91       	ld	r16, X+
    1e48:	e0 26       	eor	r14, r16
    1e4a:	0d 91       	ld	r16, X+
    1e4c:	f0 26       	eor	r15, r16

	//ST
	pop r21
    1e4e:	5f 91       	pop	r21
	pop r20
    1e50:	4f 91       	pop	r20
	pop r27
    1e52:	bf 91       	pop	r27
	pop r26
    1e54:	af 91       	pop	r26
	pop r31
    1e56:	ff 91       	pop	r31
	pop r30
    1e58:	ef 91       	pop	r30
	.irp row, 0, 1, 2, 3
			.irp col, 0, 1, 2, 3
			st Z+, ST\row\col
		.endr
	.endr
    1e5a:	01 92       	st	Z+, r0
    1e5c:	11 92       	st	Z+, r1
    1e5e:	21 92       	st	Z+, r2
    1e60:	31 92       	st	Z+, r3
    1e62:	41 92       	st	Z+, r4
    1e64:	51 92       	st	Z+, r5
    1e66:	61 92       	st	Z+, r6
    1e68:	71 92       	st	Z+, r7
    1e6a:	81 92       	st	Z+, r8
    1e6c:	91 92       	st	Z+, r9
    1e6e:	a1 92       	st	Z+, r10
    1e70:	b1 92       	st	Z+, r11
    1e72:	c1 92       	st	Z+, r12
    1e74:	d1 92       	st	Z+, r13
    1e76:	e1 92       	st	Z+, r14
    1e78:	f1 92       	st	Z+, r15
	pop r29
    1e7a:	df 91       	pop	r29
	pop r28
    1e7c:	cf 91       	pop	r28

	pop_range 0, 19
    1e7e:	3f 91       	pop	r19
    1e80:	2f 91       	pop	r18
    1e82:	1f 91       	pop	r17
    1e84:	0f 91       	pop	r16
    1e86:	ff 90       	pop	r15
    1e88:	ef 90       	pop	r14
    1e8a:	df 90       	pop	r13
    1e8c:	cf 90       	pop	r12
    1e8e:	bf 90       	pop	r11
    1e90:	af 90       	pop	r10
    1e92:	9f 90       	pop	r9
    1e94:	8f 90       	pop	r8
    1e96:	7f 90       	pop	r7
    1e98:	6f 90       	pop	r6
    1e9a:	5f 90       	pop	r5
    1e9c:	4f 90       	pop	r4
    1e9e:	3f 90       	pop	r3
    1ea0:	2f 90       	pop	r2
    1ea2:	1f 90       	pop	r1
    1ea4:	0f 90       	pop	r0
	ret
    1ea6:	08 95       	ret

00001ea8 <aes256_init>:
﻿#include "avr-asm-macros.S"

.global aes256_init
aes256_init:
	movw r20, r22
    1ea8:	ab 01       	movw	r20, r22
	ldi r23, hi8(256)
    1eaa:	71 e0       	ldi	r23, 0x01	; 1
	ldi r22, lo8(256)
    1eac:	60 e0       	ldi	r22, 0x00	; 0
	rjmp aes_init
    1eae:	07 c0       	rjmp	.+14     	; 0x1ebe <aes_init>

00001eb0 <aes192_init>:
	
.global aes192_init
aes192_init:
	movw r20, r22
    1eb0:	ab 01       	movw	r20, r22
	ldi r23, hi8(192)
    1eb2:	70 e0       	ldi	r23, 0x00	; 0
	ldi r22, lo8(192)
    1eb4:	60 ec       	ldi	r22, 0xC0	; 192
	rjmp aes_init
    1eb6:	03 c0       	rjmp	.+6      	; 0x1ebe <aes_init>

00001eb8 <aes128_init>:
	
.global aes128_init
aes128_init:
	movw r20, r22
    1eb8:	ab 01       	movw	r20, r22
	clr r23
    1eba:	77 27       	eor	r23, r23
	ldi r22, 128
    1ebc:	60 e8       	ldi	r22, 0x80	; 128

00001ebe <aes_init>:
 * param keysize_b: r22:r23
 * param ctx:       r20:r21
 */
.global aes_init
aes_init:
	push_range 14, 17
    1ebe:	ef 92       	push	r14
    1ec0:	ff 92       	push	r15
    1ec2:	0f 93       	push	r16
    1ec4:	1f 93       	push	r17
	push r28
    1ec6:	cf 93       	push	r28
	push r29
    1ec8:	df 93       	push	r29
	movw r30, r20
    1eca:	fa 01       	movw	r30, r20
	movw r28, r20
    1ecc:	ea 01       	movw	r28, r20
	movw r26, r24
    1ece:	dc 01       	movw	r26, r24
	lsr r23
    1ed0:	76 95       	lsr	r23
	ror r22
    1ed2:	67 95       	ror	r22
	lsr r22
    1ed4:	66 95       	lsr	r22
	lsr r22 /* r22 contains keysize_b/8 */
    1ed6:	66 95       	lsr	r22
	mov C1, r22
    1ed8:	26 2f       	mov	r18, r22

1:	/* copy key to ctx */ 
	ld r0, X+
    1eda:	0d 90       	ld	r0, X+
	st Z+, r0
    1edc:	01 92       	st	Z+, r0
	dec C1
    1ede:	2a 95       	dec	r18
	brne 1b
    1ee0:	e1 f7       	brne	.-8      	; 0x1eda <aes_init+0x1c>
	
	lsr NK
    1ee2:	66 95       	lsr	r22
	lsr NK
    1ee4:	66 95       	lsr	r22
	bst NK,3 /* set T if NK==8 */
    1ee6:	63 fb       	bst	r22, 3
	mov NEXT_NK, NK
    1ee8:	36 2f       	mov	r19, r22
	mov HI, NK
    1eea:	76 2f       	mov	r23, r22
	subi HI, -7
    1eec:	79 5f       	subi	r23, 0xF9	; 249
	lsl HI
    1eee:	77 0f       	add	r23, r23
	lsl HI
    1ef0:	77 0f       	add	r23, r23
	movw r26, r30
    1ef2:	df 01       	movw	r26, r30
	sbiw r26, 4
    1ef4:	14 97       	sbiw	r26, 0x04	; 4
	mov C1, NK
    1ef6:	26 2f       	mov	r18, r22
	ldi r30, lo8(aes_sbox)
    1ef8:	e0 e0       	ldi	r30, 0x00	; 0
	ldi r31, hi8(aes_sbox)
    1efa:	f0 e2       	ldi	r31, 0x20	; 32
	movw SBOX_SAVE0, r30
    1efc:	7f 01       	movw	r14, r30
	ldi XRC, 1
    1efe:	11 e0       	ldi	r17, 0x01	; 1
1:	
	ld T0, X+
    1f00:	4d 91       	ld	r20, X+
	ld T1, X+
    1f02:	5d 91       	ld	r21, X+
	ld T2, X+
    1f04:	8d 91       	ld	r24, X+
	ld T3, X+
    1f06:	9d 91       	ld	r25, X+
	cp NEXT_NK, C1
    1f08:	32 17       	cp	r19, r18
	breq 2f 
    1f0a:	b1 f0       	breq	.+44     	; 0x1f38 <aes_init+0x7a>
	brtc 5f
    1f0c:	5e f5       	brtc	.+86     	; 0x1f64 <aes_init+0xa6>
	mov r16, C1
    1f0e:	02 2f       	mov	r16, r18
	andi r16, 0x07
    1f10:	07 70       	andi	r16, 0x07	; 7
	cpi r16, 0x04
    1f12:	04 30       	cpi	r16, 0x04	; 4
	brne 5f
    1f14:	39 f5       	brne	.+78     	; 0x1f64 <aes_init+0xa6>
	movw r30, SBOX_SAVE0
    1f16:	f7 01       	movw	r30, r14
	add r30, T0
    1f18:	e4 0f       	add	r30, r20
	adc r31, r1
    1f1a:	f1 1d       	adc	r31, r1
	lpm T0, Z
    1f1c:	44 91       	lpm	r20, Z
	movw r30, SBOX_SAVE0
    1f1e:	f7 01       	movw	r30, r14
	add r30, T1
    1f20:	e5 0f       	add	r30, r21
	adc r31, r1
    1f22:	f1 1d       	adc	r31, r1
	lpm T1, Z
    1f24:	54 91       	lpm	r21, Z
	movw r30, SBOX_SAVE0
    1f26:	f7 01       	movw	r30, r14
	add r30, T2
    1f28:	e8 0f       	add	r30, r24
	adc r31, r1
    1f2a:	f1 1d       	adc	r31, r1
	lpm T2, Z
    1f2c:	84 91       	lpm	r24, Z
	movw r30, SBOX_SAVE0
    1f2e:	f7 01       	movw	r30, r14
	add r30, T3
    1f30:	e9 0f       	add	r30, r25
	adc r31, r1
    1f32:	f1 1d       	adc	r31, r1
	lpm T3, Z
    1f34:	94 91       	lpm	r25, Z
	rjmp 5f
    1f36:	16 c0       	rjmp	.+44     	; 0x1f64 <aes_init+0xa6>
2:
	add NEXT_NK, NK
    1f38:	36 0f       	add	r19, r22
	movw r30, SBOX_SAVE0
    1f3a:	f7 01       	movw	r30, r14
	add r30, T0
    1f3c:	e4 0f       	add	r30, r20
	adc r31, r1
    1f3e:	f1 1d       	adc	r31, r1
	lpm r16, Z
    1f40:	04 91       	lpm	r16, Z
	movw r30, SBOX_SAVE0
    1f42:	f7 01       	movw	r30, r14
	add r30, T1
    1f44:	e5 0f       	add	r30, r21
	adc r31, r1
    1f46:	f1 1d       	adc	r31, r1
	lpm T0, Z
    1f48:	44 91       	lpm	r20, Z
	movw r30, SBOX_SAVE0
    1f4a:	f7 01       	movw	r30, r14
	add r30, T2
    1f4c:	e8 0f       	add	r30, r24
	adc r31, r1
    1f4e:	f1 1d       	adc	r31, r1
	lpm T1, Z
    1f50:	54 91       	lpm	r21, Z
	movw r30, SBOX_SAVE0
    1f52:	f7 01       	movw	r30, r14
	add r30, T3
    1f54:	e9 0f       	add	r30, r25
	adc r31, r1
    1f56:	f1 1d       	adc	r31, r1
	lpm T2, Z
    1f58:	84 91       	lpm	r24, Z
	mov T3, r16
    1f5a:	90 2f       	mov	r25, r16
	eor T0, XRC
    1f5c:	41 27       	eor	r20, r17
	lsl XRC
    1f5e:	11 0f       	add	r17, r17
	brcc 3f
    1f60:	08 f4       	brcc	.+2      	; 0x1f64 <aes_init+0xa6>
	ldi XRC, 0x1b
    1f62:	1b e1       	ldi	r17, 0x1B	; 27
3:
5:	
	movw r30, r26
    1f64:	fd 01       	movw	r30, r26

	ld r0, Y+
    1f66:	09 90       	ld	r0, Y+
	eor r0, T0
    1f68:	04 26       	eor	r0, r20
	st Z+, r0 
    1f6a:	01 92       	st	Z+, r0
	ld r0, Y+
    1f6c:	09 90       	ld	r0, Y+
	eor r0 ,T1
    1f6e:	05 26       	eor	r0, r21
	st Z+, r0
    1f70:	01 92       	st	Z+, r0
	ld r0, Y+
    1f72:	09 90       	ld	r0, Y+
	eor r0, T2
    1f74:	08 26       	eor	r0, r24
	st Z+, r0
    1f76:	01 92       	st	Z+, r0
	ld r0, Y+
    1f78:	09 90       	ld	r0, Y+
	eor r0, T3
    1f7a:	09 26       	eor	r0, r25
	st Z+, r0
    1f7c:	01 92       	st	Z+, r0
	st Z+, T1
	st Z+, T2
	st Z+, T3
*/		
	
	inc C1
    1f7e:	23 95       	inc	r18
	cp C1, HI
    1f80:	27 17       	cp	r18, r23
	breq 6f
    1f82:	09 f0       	breq	.+2      	; 0x1f86 <aes_init+0xc8>
	rjmp 1b
    1f84:	bd cf       	rjmp	.-134    	; 0x1f00 <aes_init+0x42>
6:	
	
	clt
    1f86:	e8 94       	clt
	pop r29
    1f88:	df 91       	pop	r29
	pop r28
    1f8a:	cf 91       	pop	r28
	pop_range 14, 17
    1f8c:	1f 91       	pop	r17
    1f8e:	0f 91       	pop	r16
    1f90:	ff 90       	pop	r15
    1f92:	ef 90       	pop	r14
    1f94:	08 95       	ret
	...

00002000 <aes_sbox>:
    2000:	63 7c       	andi	r22, 0xC3	; 195
    2002:	77 7b       	andi	r23, 0xB7	; 183
    2004:	f2 6b       	ori	r31, 0xB2	; 178
    2006:	6f c5       	rjmp	.+2782   	; 0x2ae6 <generate_Random+0xea>
    2008:	30 01       	movw	r6, r0
    200a:	67 2b       	or	r22, r23
    200c:	fe d7       	rcall	.+4092   	; 0x300a <generate_Random+0x60e>
    200e:	ab 76       	andi	r26, 0x6B	; 107
    2010:	ca 82       	std	Y+2, r12	; 0x02
    2012:	c9 7d       	andi	r28, 0xD9	; 217
    2014:	fa 59       	subi	r31, 0x9A	; 154
    2016:	47 f0       	brie	.+16     	; 0x2028 <aes_sbox+0x28>
    2018:	ad d4       	rcall	.+2394   	; 0x2974 <Reseed_Function+0x60>
    201a:	a2 af       	std	Z+58, r26	; 0x3a
    201c:	9c a4       	ldd	r9, Y+44	; 0x2c
    201e:	72 c0       	rjmp	.+228    	; 0x2104 <derived_function+0x4>
    2020:	b7 fd       	sbrc	r27, 7
    2022:	93 26       	eor	r9, r19
    2024:	36 3f       	cpi	r19, 0xF6	; 246
    2026:	f7 cc       	rjmp	.-1554   	; 0x1a16 <__stack+0x917>
    2028:	34 a5       	ldd	r19, Z+44	; 0x2c
    202a:	e5 f1       	brhs	.+120    	; 0x20a4 <aes_sbox+0xa4>
    202c:	71 d8       	rcall	.-3870   	; 0x1110 <__stack+0x11>
    202e:	31 15       	cp	r19, r1
    2030:	04 c7       	rjmp	.+3592   	; 0x2e3a <generate_Random+0x43e>
    2032:	23 c3       	rjmp	.+1606   	; 0x267a <update+0xa>
    2034:	18 96       	adiw	r26, 0x08	; 8
    2036:	05 9a       	sbi	0x00, 5	; 0
    2038:	07 12       	cpse	r0, r23
    203a:	80 e2       	ldi	r24, 0x20	; 32
    203c:	eb 27       	eor	r30, r27
    203e:	b2 75       	andi	r27, 0x52	; 82
    2040:	09 83       	std	Y+1, r16	; 0x01
    2042:	2c 1a       	sub	r2, r28
    2044:	1b 6e       	ori	r17, 0xEB	; 235
    2046:	5a a0       	ldd	r5, Y+34	; 0x22
    2048:	52 3b       	cpi	r21, 0xB2	; 178
    204a:	d6 b3       	in	r29, 0x16	; 22
    204c:	29 e3       	ldi	r18, 0x39	; 57
    204e:	2f 84       	ldd	r2, Y+15	; 0x0f
    2050:	53 d1       	rcall	.+678    	; 0x22f8 <derived_function+0x1f8>
    2052:	00 ed       	ldi	r16, 0xD0	; 208
    2054:	20 fc       	sbrc	r2, 0
    2056:	b1 5b       	subi	r27, 0xB1	; 177
    2058:	6a cb       	rjmp	.-2348   	; 0x172e <__stack+0x62f>
    205a:	be 39       	cpi	r27, 0x9E	; 158
    205c:	4a 4c       	sbci	r20, 0xCA	; 202
    205e:	58 cf       	rjmp	.-336    	; 0x1f10 <aes_init+0x52>
    2060:	d0 ef       	ldi	r29, 0xF0	; 240
    2062:	aa fb       	.word	0xfbaa	; ????
    2064:	43 4d       	sbci	r20, 0xD3	; 211
    2066:	33 85       	ldd	r19, Z+11	; 0x0b
    2068:	45 f9       	bld	r20, 5
    206a:	02 7f       	andi	r16, 0xF2	; 242
    206c:	50 3c       	cpi	r21, 0xC0	; 192
    206e:	9f a8       	ldd	r9, Y+55	; 0x37
    2070:	51 a3       	std	Z+33, r21	; 0x21
    2072:	40 8f       	std	Z+24, r20	; 0x18
    2074:	92 9d       	mul	r25, r2
    2076:	38 f5       	brcc	.+78     	; 0x20c6 <aes_sbox+0xc6>
    2078:	bc b6       	in	r11, 0x3c	; 60
    207a:	da 21       	and	r29, r10
    207c:	10 ff       	sbrs	r17, 0
    207e:	f3 d2       	rcall	.+1510   	; 0x2666 <derived_function+0x566>
    2080:	cd 0c       	add	r12, r13
    2082:	13 ec       	ldi	r17, 0xC3	; 195
    2084:	5f 97       	sbiw	r26, 0x1f	; 31
    2086:	44 17       	cp	r20, r20
    2088:	c4 a7       	std	Z+44, r28	; 0x2c
    208a:	7e 3d       	cpi	r23, 0xDE	; 222
    208c:	64 5d       	subi	r22, 0xD4	; 212
    208e:	19 73       	andi	r17, 0x39	; 57
    2090:	60 81       	ld	r22, Z
    2092:	4f dc       	rcall	.-1890   	; 0x1932 <__stack+0x833>
    2094:	22 2a       	or	r2, r18
    2096:	90 88       	ldd	r9, Z+16	; 0x10
    2098:	46 ee       	ldi	r20, 0xE6	; 230
    209a:	b8 14       	cp	r11, r8
    209c:	de 5e       	subi	r29, 0xEE	; 238
    209e:	0b db       	rcall	.-2538   	; 0x16b6 <__stack+0x5b7>
    20a0:	e0 32       	cpi	r30, 0x20	; 32
    20a2:	3a 0a       	sbc	r3, r26
    20a4:	49 06       	cpc	r4, r25
    20a6:	24 5c       	subi	r18, 0xC4	; 196
    20a8:	c2 d3       	rcall	.+1924   	; 0x282e <update+0x1be>
    20aa:	ac 62       	ori	r26, 0x2C	; 44
    20ac:	91 95       	neg	r25
    20ae:	e4 79       	andi	r30, 0x94	; 148
    20b0:	e7 c8       	rjmp	.-3634   	; 0x1280 <__stack+0x181>
    20b2:	37 6d       	ori	r19, 0xD7	; 215
    20b4:	8d d5       	rcall	.+2842   	; 0x2bd0 <generate_Random+0x1d4>
    20b6:	4e a9       	ldd	r20, Y+54	; 0x36
    20b8:	6c 56       	subi	r22, 0x6C	; 108
    20ba:	f4 ea       	ldi	r31, 0xA4	; 164
    20bc:	65 7a       	andi	r22, 0xA5	; 165
    20be:	ae 08       	sbc	r10, r14
    20c0:	ba 78       	andi	r27, 0x8A	; 138
    20c2:	25 2e       	mov	r2, r21
    20c4:	1c a6       	std	Y+44, r1	; 0x2c
    20c6:	b4 c6       	rjmp	.+3432   	; 0x2e30 <generate_Random+0x434>
    20c8:	e8 dd       	rcall	.-1072   	; 0x1c9a <__stack+0xb9b>
    20ca:	74 1f       	adc	r23, r20
    20cc:	4b bd       	out	0x2b, r20	; 43
    20ce:	8b 8a       	std	Y+19, r8	; 0x13
    20d0:	70 3e       	cpi	r23, 0xE0	; 224
    20d2:	b5 66       	ori	r27, 0x65	; 101
    20d4:	48 03       	fmul	r20, r16
    20d6:	f6 0e       	add	r15, r22
    20d8:	61 35       	cpi	r22, 0x51	; 81
    20da:	57 b9       	out	0x07, r21	; 7
    20dc:	86 c1       	rjmp	.+780    	; 0x23ea <derived_function+0x2ea>
    20de:	1d 9e       	mul	r1, r29
    20e0:	e1 f8       	bld	r14, 1
    20e2:	98 11       	cpse	r25, r8
    20e4:	69 d9       	rcall	.-3374   	; 0x13b8 <__stack+0x2b9>
    20e6:	8e 94 9b 1e 	call	0x203d36	; 0x203d36 <__TEXT_REGION_LENGTH__+0x1e3d36>
    20ea:	87 e9       	ldi	r24, 0x97	; 151
    20ec:	ce 55       	subi	r28, 0x5E	; 94
    20ee:	28 df       	rcall	.-432    	; 0x1f40 <aes_init+0x82>
    20f0:	8c a1       	ldd	r24, Y+36	; 0x24
    20f2:	89 0d       	add	r24, r9
    20f4:	bf e6       	ldi	r27, 0x6F	; 111
    20f6:	42 68       	ori	r20, 0x82	; 130
    20f8:	41 99       	sbic	0x08, 1	; 8
    20fa:	2d 0f       	add	r18, r29
    20fc:	b0 54       	subi	r27, 0x40	; 64
    20fe:	bb 16       	cp	r11, r27

00002100 <derived_function>:
	{
		src[cnt_i] = 0x00;
	}
}
void derived_function(u8 *input_data, u8 *seed, u8 *input_len)
{
    2100:	2f 92       	push	r2
    2102:	3f 92       	push	r3
    2104:	4f 92       	push	r4
    2106:	5f 92       	push	r5
    2108:	6f 92       	push	r6
    210a:	7f 92       	push	r7
    210c:	8f 92       	push	r8
    210e:	9f 92       	push	r9
    2110:	af 92       	push	r10
    2112:	bf 92       	push	r11
    2114:	cf 92       	push	r12
    2116:	df 92       	push	r13
    2118:	ef 92       	push	r14
    211a:	ff 92       	push	r15
    211c:	0f 93       	push	r16
    211e:	1f 93       	push	r17
    2120:	cf 93       	push	r28
    2122:	df 93       	push	r29
    2124:	cd b7       	in	r28, 0x3d	; 61
    2126:	de b7       	in	r29, 0x3e	; 62
    2128:	c6 54       	subi	r28, 0x46	; 70
    212a:	d1 40       	sbci	r29, 0x01	; 1
    212c:	0f b6       	in	r0, 0x3f	; 63
    212e:	f8 94       	cli
    2130:	de bf       	out	0x3e, r29	; 62
    2132:	0f be       	out	0x3f, r0	; 63
    2134:	cd bf       	out	0x3d, r28	; 61
    2136:	8c 01       	movw	r16, r24
    2138:	3b 01       	movw	r6, r22
    213a:	7a 01       	movw	r14, r20
	volatile char cnt_i = 0;
    213c:	cb 5b       	subi	r28, 0xBB	; 187
    213e:	de 4f       	sbci	r29, 0xFE	; 254
    2140:	18 82       	st	Y, r1
    2142:	c5 54       	subi	r28, 0x45	; 69
    2144:	d1 40       	sbci	r29, 0x01	; 1
	volatile char cnt_j = 0;
    2146:	cc 5b       	subi	r28, 0xBC	; 188
    2148:	de 4f       	sbci	r29, 0xFE	; 254
    214a:	18 82       	st	Y, r1
    214c:	c4 54       	subi	r28, 0x44	; 68
    214e:	d1 40       	sbci	r29, 0x01	; 1
	volatile char cnt_k = 0;
    2150:	cd 5b       	subi	r28, 0xBD	; 189
    2152:	de 4f       	sbci	r29, 0xFE	; 254
    2154:	18 82       	st	Y, r1
    2156:	c3 54       	subi	r28, 0x43	; 67
    2158:	d1 40       	sbci	r29, 0x01	; 1
	volatile u8 len = 25 + *input_len;
    215a:	da 01       	movw	r26, r20
    215c:	8c 91       	ld	r24, X
    215e:	87 5e       	subi	r24, 0xE7	; 231
    2160:	ce 5b       	subi	r28, 0xBE	; 190
    2162:	de 4f       	sbci	r29, 0xFE	; 254
    2164:	88 83       	st	Y, r24
    2166:	c2 54       	subi	r28, 0x42	; 66
    2168:	d1 40       	sbci	r29, 0x01	; 1
	volatile u8 temp = len % BLOCK_SIZE;
    216a:	ce 5b       	subi	r28, 0xBE	; 190
    216c:	de 4f       	sbci	r29, 0xFE	; 254
    216e:	88 81       	ld	r24, Y
    2170:	c2 54       	subi	r28, 0x42	; 66
    2172:	d1 40       	sbci	r29, 0x01	; 1
    2174:	8f 70       	andi	r24, 0x0F	; 15
    2176:	cf 5b       	subi	r28, 0xBF	; 191
    2178:	de 4f       	sbci	r29, 0xFE	; 254
    217a:	88 83       	st	Y, r24
    217c:	c1 54       	subi	r28, 0x41	; 65
    217e:	d1 40       	sbci	r29, 0x01	; 1
	u8 CBC_KEY[16] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};
    2180:	80 e1       	ldi	r24, 0x10	; 16
    2182:	e6 e0       	ldi	r30, 0x06	; 6
    2184:	f3 e0       	ldi	r31, 0x03	; 3
    2186:	de 01       	movw	r26, r28
    2188:	af 5c       	subi	r26, 0xCF	; 207
    218a:	be 4f       	sbci	r27, 0xFE	; 254
    218c:	01 90       	ld	r0, Z+
    218e:	0d 92       	st	X+, r0
    2190:	8a 95       	dec	r24
    2192:	e1 f7       	brne	.-8      	; 0x218c <derived_function+0x8c>
	u8 chain_value[16] = {0x00};
    2194:	5e 01       	movw	r10, r28
    2196:	bf ed       	ldi	r27, 0xDF	; 223
    2198:	ab 1a       	sub	r10, r27
    219a:	be ef       	ldi	r27, 0xFE	; 254
    219c:	bb 0a       	sbc	r11, r27
    219e:	80 e1       	ldi	r24, 0x10	; 16
    21a0:	f5 01       	movw	r30, r10
    21a2:	11 92       	st	Z+, r1
    21a4:	8a 95       	dec	r24
    21a6:	e9 f7       	brne	.-6      	; 0x21a2 <derived_function+0xa2>
	u8 seed_temp[SEED_LEN] = {0x00};
	u8 KEYandV[LEN_SEED][BLOCK_SIZE] = {0x00};
    21a8:	1e 01       	movw	r2, r28
    21aa:	f1 ed       	ldi	r31, 0xD1	; 209
    21ac:	2f 0e       	add	r2, r31
    21ae:	31 1c       	adc	r3, r1
    21b0:	80 e3       	ldi	r24, 0x30	; 48
    21b2:	d1 01       	movw	r26, r2
    21b4:	1d 92       	st	X+, r1
    21b6:	8a 95       	dec	r24
    21b8:	e9 f7       	brne	.-6      	; 0x21b4 <derived_function+0xb4>
#if KEY_BIT == 128
	aes128_ctx_t aes_test;
	aes128_init(CBC_KEY, &aes_test);
#elif KEY_BIT == 192
	aes192_ctx_t aes_test;
	aes192_init(CBC_KEY, &aes_test);
    21ba:	be 01       	movw	r22, r28
    21bc:	6f 5f       	subi	r22, 0xFF	; 255
    21be:	7f 4f       	sbci	r23, 0xFF	; 255
    21c0:	ce 01       	movw	r24, r28
    21c2:	8f 5c       	subi	r24, 0xCF	; 207
    21c4:	9e 4f       	sbci	r25, 0xFE	; 254
    21c6:	74 de       	rcall	.-792    	; 0x1eb0 <aes192_init>

#else //KEY_BIT ==256
	aes256_ctx_t aes_test;
	aes256_init(CBC_KEY, &aes_test);
#endif
	if (temp != 0)
    21c8:	cf 5b       	subi	r28, 0xBF	; 191
    21ca:	de 4f       	sbci	r29, 0xFE	; 254
    21cc:	88 81       	ld	r24, Y
    21ce:	c1 54       	subi	r28, 0x41	; 65
    21d0:	d1 40       	sbci	r29, 0x01	; 1
    21d2:	88 23       	and	r24, r24
    21d4:	89 f0       	breq	.+34     	; 0x21f8 <derived_function+0xf8>
		len += BLOCK_SIZE - temp;
    21d6:	cf 5b       	subi	r28, 0xBF	; 191
    21d8:	de 4f       	sbci	r29, 0xFE	; 254
    21da:	98 81       	ld	r25, Y
    21dc:	c1 54       	subi	r28, 0x41	; 65
    21de:	d1 40       	sbci	r29, 0x01	; 1
    21e0:	ce 5b       	subi	r28, 0xBE	; 190
    21e2:	de 4f       	sbci	r29, 0xFE	; 254
    21e4:	88 81       	ld	r24, Y
    21e6:	c2 54       	subi	r28, 0x42	; 66
    21e8:	d1 40       	sbci	r29, 0x01	; 1
    21ea:	89 1b       	sub	r24, r25
    21ec:	80 5f       	subi	r24, 0xF0	; 240
    21ee:	ce 5b       	subi	r28, 0xBE	; 190
    21f0:	de 4f       	sbci	r29, 0xFE	; 254
    21f2:	88 83       	st	Y, r24
    21f4:	c2 54       	subi	r28, 0x42	; 66
    21f6:	d1 40       	sbci	r29, 0x01	; 1

	u8 *in = (u8 *)calloc(len, sizeof(u8));
    21f8:	ce 5b       	subi	r28, 0xBE	; 190
    21fa:	de 4f       	sbci	r29, 0xFE	; 254
    21fc:	88 81       	ld	r24, Y
    21fe:	c2 54       	subi	r28, 0x42	; 66
    2200:	d1 40       	sbci	r29, 0x01	; 1
    2202:	61 e0       	ldi	r22, 0x01	; 1
    2204:	70 e0       	ldi	r23, 0x00	; 0
    2206:	90 e0       	ldi	r25, 0x00	; 0
    2208:	0e 94 fa 1a 	call	0x35f4	; 0x35f4 <calloc>
    220c:	2c 01       	movw	r4, r24
	in[19] = *input_len;
    220e:	f7 01       	movw	r30, r14
    2210:	20 81       	ld	r18, Z
    2212:	dc 01       	movw	r26, r24
    2214:	53 96       	adiw	r26, 0x13	; 19
    2216:	2c 93       	st	X, r18
    2218:	53 97       	sbiw	r26, 0x13	; 19
	in[23] = N_DF;
    221a:	88 e2       	ldi	r24, 0x28	; 40
    221c:	57 96       	adiw	r26, 0x17	; 23
    221e:	8c 93       	st	X, r24
	for (cnt_i = 24; cnt_i < 24 + *input_len; cnt_i++)
    2220:	88 e1       	ldi	r24, 0x18	; 24
    2222:	cb 5b       	subi	r28, 0xBB	; 187
    2224:	de 4f       	sbci	r29, 0xFE	; 254
    2226:	88 83       	st	Y, r24
    2228:	c5 54       	subi	r28, 0x45	; 69
    222a:	d1 40       	sbci	r29, 0x01	; 1
    222c:	30 e0       	ldi	r19, 0x00	; 0
    222e:	29 5e       	subi	r18, 0xE9	; 233
    2230:	3f 4f       	sbci	r19, 0xFF	; 255
    2232:	cb 5b       	subi	r28, 0xBB	; 187
    2234:	de 4f       	sbci	r29, 0xFE	; 254
    2236:	88 81       	ld	r24, Y
    2238:	c5 54       	subi	r28, 0x45	; 69
    223a:	d1 40       	sbci	r29, 0x01	; 1
    223c:	90 e0       	ldi	r25, 0x00	; 0
    223e:	28 17       	cp	r18, r24
    2240:	39 07       	cpc	r19, r25
    2242:	54 f1       	brlt	.+84     	; 0x2298 <derived_function+0x198>
	{
		if(input_data == NULL)
    2244:	01 15       	cp	r16, r1
    2246:	11 05       	cpc	r17, r1
    2248:	99 f0       	breq	.+38     	; 0x2270 <derived_function+0x170>
		continue;
		in[cnt_i] = input_data[cnt_i - 24];
    224a:	cb 5b       	subi	r28, 0xBB	; 187
    224c:	de 4f       	sbci	r29, 0xFE	; 254
    224e:	98 81       	ld	r25, Y
    2250:	c5 54       	subi	r28, 0x45	; 69
    2252:	d1 40       	sbci	r29, 0x01	; 1
    2254:	cb 5b       	subi	r28, 0xBB	; 187
    2256:	de 4f       	sbci	r29, 0xFE	; 254
    2258:	88 81       	ld	r24, Y
    225a:	c5 54       	subi	r28, 0x45	; 69
    225c:	d1 40       	sbci	r29, 0x01	; 1
    225e:	d2 01       	movw	r26, r4
    2260:	a9 0f       	add	r26, r25
    2262:	b1 1d       	adc	r27, r1
    2264:	f8 01       	movw	r30, r16
    2266:	e8 0f       	add	r30, r24
    2268:	f1 1d       	adc	r31, r1
    226a:	78 97       	sbiw	r30, 0x18	; 24
    226c:	80 81       	ld	r24, Z
    226e:	8c 93       	st	X, r24
		len += BLOCK_SIZE - temp;

	u8 *in = (u8 *)calloc(len, sizeof(u8));
	in[19] = *input_len;
	in[23] = N_DF;
	for (cnt_i = 24; cnt_i < 24 + *input_len; cnt_i++)
    2270:	cb 5b       	subi	r28, 0xBB	; 187
    2272:	de 4f       	sbci	r29, 0xFE	; 254
    2274:	88 81       	ld	r24, Y
    2276:	c5 54       	subi	r28, 0x45	; 69
    2278:	d1 40       	sbci	r29, 0x01	; 1
    227a:	8f 5f       	subi	r24, 0xFF	; 255
    227c:	cb 5b       	subi	r28, 0xBB	; 187
    227e:	de 4f       	sbci	r29, 0xFE	; 254
    2280:	88 83       	st	Y, r24
    2282:	c5 54       	subi	r28, 0x45	; 69
    2284:	d1 40       	sbci	r29, 0x01	; 1
    2286:	cb 5b       	subi	r28, 0xBB	; 187
    2288:	de 4f       	sbci	r29, 0xFE	; 254
    228a:	88 81       	ld	r24, Y
    228c:	c5 54       	subi	r28, 0x45	; 69
    228e:	d1 40       	sbci	r29, 0x01	; 1
    2290:	90 e0       	ldi	r25, 0x00	; 0
    2292:	28 17       	cp	r18, r24
    2294:	39 07       	cpc	r19, r25
    2296:	b4 f6       	brge	.-84     	; 0x2244 <derived_function+0x144>
	{
		if(input_data == NULL)
		continue;
		in[cnt_i] = input_data[cnt_i - 24];
	}
	in[cnt_i] = 0x80;
    2298:	cb 5b       	subi	r28, 0xBB	; 187
    229a:	de 4f       	sbci	r29, 0xFE	; 254
    229c:	88 81       	ld	r24, Y
    229e:	c5 54       	subi	r28, 0x45	; 69
    22a0:	d1 40       	sbci	r29, 0x01	; 1
    22a2:	f2 01       	movw	r30, r4
    22a4:	e8 0f       	add	r30, r24
    22a6:	f1 1d       	adc	r31, r1
    22a8:	80 e8       	ldi	r24, 0x80	; 128
    22aa:	80 83       	st	Z, r24
	len = len/16;
    22ac:	ce 5b       	subi	r28, 0xBE	; 190
    22ae:	de 4f       	sbci	r29, 0xFE	; 254
    22b0:	88 81       	ld	r24, Y
    22b2:	c2 54       	subi	r28, 0x42	; 66
    22b4:	d1 40       	sbci	r29, 0x01	; 1
    22b6:	82 95       	swap	r24
    22b8:	8f 70       	andi	r24, 0x0F	; 15
    22ba:	ce 5b       	subi	r28, 0xBE	; 190
    22bc:	de 4f       	sbci	r29, 0xFE	; 254
    22be:	88 83       	st	Y, r24
    22c0:	c2 54       	subi	r28, 0x42	; 66
    22c2:	d1 40       	sbci	r29, 0x01	; 1
	u8 state[16] = {0x00};
    22c4:	6e 01       	movw	r12, r28
    22c6:	bf ee       	ldi	r27, 0xEF	; 239
    22c8:	cb 1a       	sub	r12, r27
    22ca:	be ef       	ldi	r27, 0xFE	; 254
    22cc:	db 0a       	sbc	r13, r27
    22ce:	80 e1       	ldi	r24, 0x10	; 16
    22d0:	f6 01       	movw	r30, r12
    22d2:	11 92       	st	Z+, r1
    22d4:	8a 95       	dec	r24
    22d6:	e9 f7       	brne	.-6      	; 0x22d2 <derived_function+0x1d2>
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
    22d8:	cc 5b       	subi	r28, 0xBC	; 188
    22da:	de 4f       	sbci	r29, 0xFE	; 254
    22dc:	18 82       	st	Y, r1
    22de:	c4 54       	subi	r28, 0x44	; 68
    22e0:	d1 40       	sbci	r29, 0x01	; 1
    22e2:	cc 5b       	subi	r28, 0xBC	; 188
    22e4:	de 4f       	sbci	r29, 0xFE	; 254
    22e6:	88 81       	ld	r24, Y
    22e8:	c4 54       	subi	r28, 0x44	; 68
    22ea:	d1 40       	sbci	r29, 0x01	; 1
    22ec:	83 30       	cpi	r24, 0x03	; 3
    22ee:	08 f0       	brcs	.+2      	; 0x22f2 <derived_function+0x1f2>
    22f0:	a4 c0       	rjmp	.+328    	; 0x243a <derived_function+0x33a>
    22f2:	f2 01       	movw	r30, r4
    22f4:	83 81       	ldd	r24, Z+3	; 0x03
    22f6:	8f 5f       	subi	r24, 0xFF	; 255
    22f8:	ca 5b       	subi	r28, 0xBA	; 186
    22fa:	de 4f       	sbci	r29, 0xFE	; 254
    22fc:	88 83       	st	Y, r24
    22fe:	c6 54       	subi	r28, 0x46	; 70
    2300:	d1 40       	sbci	r29, 0x01	; 1
    2302:	90 e0       	ldi	r25, 0x00	; 0
    2304:	76 01       	movw	r14, r12
    2306:	f0 e1       	ldi	r31, 0x10	; 16
    2308:	ef 0e       	add	r14, r31
    230a:	f1 1c       	adc	r15, r1
    230c:	45 01       	movw	r8, r10
    230e:	20 e1       	ldi	r18, 0x10	; 16
    2310:	82 0e       	add	r8, r18
    2312:	91 1c       	adc	r9, r1
	{
		for (cnt_i = 0; cnt_i < len; cnt_i++)
    2314:	cb 5b       	subi	r28, 0xBB	; 187
    2316:	de 4f       	sbci	r29, 0xFE	; 254
    2318:	18 82       	st	Y, r1
    231a:	c5 54       	subi	r28, 0x45	; 69
    231c:	d1 40       	sbci	r29, 0x01	; 1
    231e:	cb 5b       	subi	r28, 0xBB	; 187
    2320:	de 4f       	sbci	r29, 0xFE	; 254
    2322:	28 81       	ld	r18, Y
    2324:	c5 54       	subi	r28, 0x45	; 69
    2326:	d1 40       	sbci	r29, 0x01	; 1
    2328:	ce 5b       	subi	r28, 0xBE	; 190
    232a:	de 4f       	sbci	r29, 0xFE	; 254
    232c:	88 81       	ld	r24, Y
    232e:	c2 54       	subi	r28, 0x42	; 66
    2330:	d1 40       	sbci	r29, 0x01	; 1
    2332:	28 17       	cp	r18, r24
    2334:	08 f0       	brcs	.+2      	; 0x2338 <derived_function+0x238>
    2336:	46 c0       	rjmp	.+140    	; 0x23c4 <derived_function+0x2c4>
		{
			set_state(state, in, 16 * cnt_i);
    2338:	cb 5b       	subi	r28, 0xBB	; 187
    233a:	de 4f       	sbci	r29, 0xFE	; 254
    233c:	88 81       	ld	r24, Y
    233e:	c5 54       	subi	r28, 0x45	; 69
    2340:	d1 40       	sbci	r29, 0x01	; 1
    2342:	82 95       	swap	r24
    2344:	80 7f       	andi	r24, 0xF0	; 240
    2346:	d2 01       	movw	r26, r4
    2348:	a8 0f       	add	r26, r24
    234a:	b1 1d       	adc	r27, r1
    234c:	86 01       	movw	r16, r12
    234e:	f6 01       	movw	r30, r12
}
void set_state(u8 *drc, u8 *src, char start)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[start + cnt_i];
    2350:	8d 91       	ld	r24, X+
    2352:	81 93       	st	Z+, r24
		drc[cnt_i] ^= src[cnt_i];
	}
}
void set_state(u8 *drc, u8 *src, char start)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2354:	ee 15       	cp	r30, r14
    2356:	ff 05       	cpc	r31, r15
    2358:	d9 f7       	brne	.-10     	; 0x2350 <derived_function+0x250>
    235a:	d5 01       	movw	r26, r10
    235c:	11 96       	adiw	r26, 0x01	; 1
    235e:	f6 01       	movw	r30, r12
    2360:	01 c0       	rjmp	.+2      	; 0x2364 <derived_function+0x264>
    2362:	9d 91       	ld	r25, X+

void XoR(u8 *drc, u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < len; cnt_i++)
	{
		drc[cnt_i] ^= src[cnt_i];
    2364:	80 81       	ld	r24, Z
    2366:	89 27       	eor	r24, r25
    2368:	81 93       	st	Z+, r24
*/
#include "ctr_drbg.h"

void XoR(u8 *drc, u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < len; cnt_i++)
    236a:	ee 15       	cp	r30, r14
    236c:	ff 05       	cpc	r31, r15
    236e:	c9 f7       	brne	.-14     	; 0x2362 <derived_function+0x262>
			set_state(state, in, 16 * cnt_i);
			XoR(state, chain_value, BLOCK_SIZE);
#if KEY_BIT == 128
			aes128_enc_CBC_asm(state, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(state, &aes_test);
    2370:	be 01       	movw	r22, r28
    2372:	6f 5f       	subi	r22, 0xFF	; 255
    2374:	7f 4f       	sbci	r23, 0xFF	; 255
    2376:	c6 01       	movw	r24, r12
    2378:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
    237c:	f5 01       	movw	r30, r10
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    237e:	d8 01       	movw	r26, r16
    2380:	8d 91       	ld	r24, X+
    2382:	8d 01       	movw	r16, r26
    2384:	81 93       	st	Z+, r24
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2386:	ae 15       	cp	r26, r14
    2388:	bf 05       	cpc	r27, r15
    238a:	c9 f7       	brne	.-14     	; 0x237e <derived_function+0x27e>
	in[cnt_i] = 0x80;
	len = len/16;
	u8 state[16] = {0x00};
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
	{
		for (cnt_i = 0; cnt_i < len; cnt_i++)
    238c:	cb 5b       	subi	r28, 0xBB	; 187
    238e:	de 4f       	sbci	r29, 0xFE	; 254
    2390:	88 81       	ld	r24, Y
    2392:	c5 54       	subi	r28, 0x45	; 69
    2394:	d1 40       	sbci	r29, 0x01	; 1
    2396:	8f 5f       	subi	r24, 0xFF	; 255
    2398:	cb 5b       	subi	r28, 0xBB	; 187
    239a:	de 4f       	sbci	r29, 0xFE	; 254
    239c:	88 83       	st	Y, r24
    239e:	c5 54       	subi	r28, 0x45	; 69
    23a0:	d1 40       	sbci	r29, 0x01	; 1
    23a2:	cb 5b       	subi	r28, 0xBB	; 187
    23a4:	de 4f       	sbci	r29, 0xFE	; 254
    23a6:	98 81       	ld	r25, Y
    23a8:	c5 54       	subi	r28, 0x45	; 69
    23aa:	d1 40       	sbci	r29, 0x01	; 1
    23ac:	ce 5b       	subi	r28, 0xBE	; 190
    23ae:	de 4f       	sbci	r29, 0xFE	; 254
    23b0:	88 81       	ld	r24, Y
    23b2:	c2 54       	subi	r28, 0x42	; 66
    23b4:	d1 40       	sbci	r29, 0x01	; 1
    23b6:	98 17       	cp	r25, r24
    23b8:	18 f4       	brcc	.+6      	; 0x23c0 <derived_function+0x2c0>
    23ba:	f5 01       	movw	r30, r10
    23bc:	90 81       	ld	r25, Z
    23be:	bc cf       	rjmp	.-136    	; 0x2338 <derived_function+0x238>
    23c0:	d5 01       	movw	r26, r10
    23c2:	9c 91       	ld	r25, X
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(state, &aes_test);
#endif
			copy(chain_value, state);
		}
		copy_state(KEYandV, chain_value, cnt_j);
    23c4:	cc 5b       	subi	r28, 0xBC	; 188
    23c6:	de 4f       	sbci	r29, 0xFE	; 254
    23c8:	88 81       	ld	r24, Y
    23ca:	c4 54       	subi	r28, 0x44	; 68
    23cc:	d1 40       	sbci	r29, 0x01	; 1
    23ce:	d1 01       	movw	r26, r2
    23d0:	e0 e1       	ldi	r30, 0x10	; 16
    23d2:	8e 9f       	mul	r24, r30
    23d4:	a0 0d       	add	r26, r0
    23d6:	b1 1d       	adc	r27, r1
    23d8:	11 24       	eor	r1, r1
    23da:	f5 01       	movw	r30, r10
    23dc:	31 96       	adiw	r30, 0x01	; 1
    23de:	01 c0       	rjmp	.+2      	; 0x23e2 <derived_function+0x2e2>
    23e0:	91 91       	ld	r25, Z+
}
void copy_state(u8 drc[LEN_SEED][BLOCK_SIZE], u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[len][cnt_i] = src[cnt_i];
    23e2:	9d 93       	st	X+, r25
		drc[cnt_i] = src[start + cnt_i];
	}
}
void copy_state(u8 drc[LEN_SEED][BLOCK_SIZE], u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    23e4:	8e 16       	cp	r8, r30
    23e6:	9f 06       	cpc	r9, r31
    23e8:	d9 f7       	brne	.-10     	; 0x23e0 <derived_function+0x2e0>
    23ea:	f5 01       	movw	r30, r10
}
void clear(u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < len; cnt_i++)
	{
		src[cnt_i] = 0x00;
    23ec:	11 92       	st	Z+, r1
		drc[cnt_i] = src[cnt_i];
	}
}
void clear(u8 *src, char len)
{
	for (char cnt_i = 0; cnt_i < len; cnt_i++)
    23ee:	8e 16       	cp	r8, r30
    23f0:	9f 06       	cpc	r9, r31
    23f2:	e1 f7       	brne	.-8      	; 0x23ec <derived_function+0x2ec>
#endif
			copy(chain_value, state);
		}
		copy_state(KEYandV, chain_value, cnt_j);
		clear(chain_value, BLOCK_SIZE);
		in[3]++;
    23f4:	ca 5b       	subi	r28, 0xBA	; 186
    23f6:	de 4f       	sbci	r29, 0xFE	; 254
    23f8:	e8 81       	ld	r30, Y
    23fa:	c6 54       	subi	r28, 0x46	; 70
    23fc:	d1 40       	sbci	r29, 0x01	; 1
    23fe:	d2 01       	movw	r26, r4
    2400:	13 96       	adiw	r26, 0x03	; 3
    2402:	ec 93       	st	X, r30
		in[cnt_i] = input_data[cnt_i - 24];
	}
	in[cnt_i] = 0x80;
	len = len/16;
	u8 state[16] = {0x00};
	for (cnt_j = 0; cnt_j < LEN_SEED; cnt_j++)
    2404:	cc 5b       	subi	r28, 0xBC	; 188
    2406:	de 4f       	sbci	r29, 0xFE	; 254
    2408:	88 81       	ld	r24, Y
    240a:	c4 54       	subi	r28, 0x44	; 68
    240c:	d1 40       	sbci	r29, 0x01	; 1
    240e:	8f 5f       	subi	r24, 0xFF	; 255
    2410:	cc 5b       	subi	r28, 0xBC	; 188
    2412:	de 4f       	sbci	r29, 0xFE	; 254
    2414:	88 83       	st	Y, r24
    2416:	c4 54       	subi	r28, 0x44	; 68
    2418:	d1 40       	sbci	r29, 0x01	; 1
    241a:	cc 5b       	subi	r28, 0xBC	; 188
    241c:	de 4f       	sbci	r29, 0xFE	; 254
    241e:	88 81       	ld	r24, Y
    2420:	c4 54       	subi	r28, 0x44	; 68
    2422:	d1 40       	sbci	r29, 0x01	; 1
    2424:	ef 5f       	subi	r30, 0xFF	; 255
    2426:	ca 5b       	subi	r28, 0xBA	; 186
    2428:	de 4f       	sbci	r29, 0xFE	; 254
    242a:	e8 83       	st	Y, r30
    242c:	c6 54       	subi	r28, 0x46	; 70
    242e:	d1 40       	sbci	r29, 0x01	; 1
    2430:	83 30       	cpi	r24, 0x03	; 3
    2432:	18 f4       	brcc	.+6      	; 0x243a <derived_function+0x33a>
    2434:	d5 01       	movw	r26, r10
    2436:	9c 91       	ld	r25, X
    2438:	6d cf       	rjmp	.-294    	; 0x2314 <derived_function+0x214>
		}
		copy_state(KEYandV, chain_value, cnt_j);
		clear(chain_value, BLOCK_SIZE);
		in[3]++;
	}
	free(in);
    243a:	c2 01       	movw	r24, r4
    243c:	0e 94 ac 1b 	call	0x3758	; 0x3758 <free>

	//! step2
	u8 key[16] = {0x00};
    2440:	ce 01       	movw	r24, r28
    2442:	8f 5f       	subi	r24, 0xFF	; 255
    2444:	9e 4f       	sbci	r25, 0xFE	; 254
    2446:	20 e1       	ldi	r18, 0x10	; 16
    2448:	dc 01       	movw	r26, r24
    244a:	1d 92       	st	X+, r1
    244c:	2a 95       	dec	r18
    244e:	e9 f7       	brne	.-6      	; 0x244a <derived_function+0x34a>
	len = KEY_BIT/8;
    2450:	28 e1       	ldi	r18, 0x18	; 24
    2452:	ce 5b       	subi	r28, 0xBE	; 190
    2454:	de 4f       	sbci	r29, 0xFE	; 254
    2456:	28 83       	st	Y, r18
    2458:	c2 54       	subi	r28, 0x42	; 66
    245a:	d1 40       	sbci	r29, 0x01	; 1
	for (cnt_i = 0; cnt_i < len; cnt_i++)
    245c:	cb 5b       	subi	r28, 0xBB	; 187
    245e:	de 4f       	sbci	r29, 0xFE	; 254
    2460:	18 82       	st	Y, r1
    2462:	c5 54       	subi	r28, 0x45	; 69
    2464:	d1 40       	sbci	r29, 0x01	; 1
    2466:	cb 5b       	subi	r28, 0xBB	; 187
    2468:	de 4f       	sbci	r29, 0xFE	; 254
    246a:	28 81       	ld	r18, Y
    246c:	c5 54       	subi	r28, 0x45	; 69
    246e:	d1 40       	sbci	r29, 0x01	; 1
    2470:	ce 5b       	subi	r28, 0xBE	; 190
    2472:	de 4f       	sbci	r29, 0xFE	; 254
    2474:	38 81       	ld	r19, Y
    2476:	c2 54       	subi	r28, 0x42	; 66
    2478:	d1 40       	sbci	r29, 0x01	; 1
    247a:	23 17       	cp	r18, r19
    247c:	58 f5       	brcc	.+86     	; 0x24d4 <derived_function+0x3d4>
	{
		key[cnt_i] = *(KEYandV + cnt_i);
    247e:	cb 5b       	subi	r28, 0xBB	; 187
    2480:	de 4f       	sbci	r29, 0xFE	; 254
    2482:	38 81       	ld	r19, Y
    2484:	c5 54       	subi	r28, 0x45	; 69
    2486:	d1 40       	sbci	r29, 0x01	; 1
    2488:	cb 5b       	subi	r28, 0xBB	; 187
    248a:	de 4f       	sbci	r29, 0xFE	; 254
    248c:	28 81       	ld	r18, Y
    248e:	c5 54       	subi	r28, 0x45	; 69
    2490:	d1 40       	sbci	r29, 0x01	; 1
    2492:	fc 01       	movw	r30, r24
    2494:	e3 0f       	add	r30, r19
    2496:	f1 1d       	adc	r31, r1
    2498:	a1 01       	movw	r20, r2
    249a:	60 e1       	ldi	r22, 0x10	; 16
    249c:	26 9f       	mul	r18, r22
    249e:	40 0d       	add	r20, r0
    24a0:	51 1d       	adc	r21, r1
    24a2:	11 24       	eor	r1, r1
    24a4:	40 83       	st	Z, r20
	free(in);

	//! step2
	u8 key[16] = {0x00};
	len = KEY_BIT/8;
	for (cnt_i = 0; cnt_i < len; cnt_i++)
    24a6:	cb 5b       	subi	r28, 0xBB	; 187
    24a8:	de 4f       	sbci	r29, 0xFE	; 254
    24aa:	28 81       	ld	r18, Y
    24ac:	c5 54       	subi	r28, 0x45	; 69
    24ae:	d1 40       	sbci	r29, 0x01	; 1
    24b0:	2f 5f       	subi	r18, 0xFF	; 255
    24b2:	cb 5b       	subi	r28, 0xBB	; 187
    24b4:	de 4f       	sbci	r29, 0xFE	; 254
    24b6:	28 83       	st	Y, r18
    24b8:	c5 54       	subi	r28, 0x45	; 69
    24ba:	d1 40       	sbci	r29, 0x01	; 1
    24bc:	cb 5b       	subi	r28, 0xBB	; 187
    24be:	de 4f       	sbci	r29, 0xFE	; 254
    24c0:	38 81       	ld	r19, Y
    24c2:	c5 54       	subi	r28, 0x45	; 69
    24c4:	d1 40       	sbci	r29, 0x01	; 1
    24c6:	ce 5b       	subi	r28, 0xBE	; 190
    24c8:	de 4f       	sbci	r29, 0xFE	; 254
    24ca:	28 81       	ld	r18, Y
    24cc:	c2 54       	subi	r28, 0x42	; 66
    24ce:	d1 40       	sbci	r29, 0x01	; 1
    24d0:	32 17       	cp	r19, r18
    24d2:	a8 f2       	brcs	.-86     	; 0x247e <derived_function+0x37e>
	{
		key[cnt_i] = *(KEYandV + cnt_i);
	}
	for (cnt_j = cnt_i; cnt_j < BLOCK_SIZE; cnt_j++)
    24d4:	cb 5b       	subi	r28, 0xBB	; 187
    24d6:	de 4f       	sbci	r29, 0xFE	; 254
    24d8:	28 81       	ld	r18, Y
    24da:	c5 54       	subi	r28, 0x45	; 69
    24dc:	d1 40       	sbci	r29, 0x01	; 1
    24de:	cc 5b       	subi	r28, 0xBC	; 188
    24e0:	de 4f       	sbci	r29, 0xFE	; 254
    24e2:	28 83       	st	Y, r18
    24e4:	c4 54       	subi	r28, 0x44	; 68
    24e6:	d1 40       	sbci	r29, 0x01	; 1
    24e8:	cc 5b       	subi	r28, 0xBC	; 188
    24ea:	de 4f       	sbci	r29, 0xFE	; 254
    24ec:	28 81       	ld	r18, Y
    24ee:	c4 54       	subi	r28, 0x44	; 68
    24f0:	d1 40       	sbci	r29, 0x01	; 1
    24f2:	20 31       	cpi	r18, 0x10	; 16
    24f4:	80 f5       	brcc	.+96     	; 0x2556 <derived_function+0x456>
	{
		state[cnt_j] = *(KEYandV + cnt_i + cnt_j);
    24f6:	cc 5b       	subi	r28, 0xBC	; 188
    24f8:	de 4f       	sbci	r29, 0xFE	; 254
    24fa:	38 81       	ld	r19, Y
    24fc:	c4 54       	subi	r28, 0x44	; 68
    24fe:	d1 40       	sbci	r29, 0x01	; 1
    2500:	cb 5b       	subi	r28, 0xBB	; 187
    2502:	de 4f       	sbci	r29, 0xFE	; 254
    2504:	48 81       	ld	r20, Y
    2506:	c5 54       	subi	r28, 0x45	; 69
    2508:	d1 40       	sbci	r29, 0x01	; 1
    250a:	cc 5b       	subi	r28, 0xBC	; 188
    250c:	de 4f       	sbci	r29, 0xFE	; 254
    250e:	28 81       	ld	r18, Y
    2510:	c4 54       	subi	r28, 0x44	; 68
    2512:	d1 40       	sbci	r29, 0x01	; 1
    2514:	f6 01       	movw	r30, r12
    2516:	e3 0f       	add	r30, r19
    2518:	f1 1d       	adc	r31, r1
    251a:	30 e0       	ldi	r19, 0x00	; 0
    251c:	24 0f       	add	r18, r20
    251e:	31 1d       	adc	r19, r1
    2520:	22 95       	swap	r18
    2522:	32 95       	swap	r19
    2524:	30 7f       	andi	r19, 0xF0	; 240
    2526:	32 27       	eor	r19, r18
    2528:	20 7f       	andi	r18, 0xF0	; 240
    252a:	32 27       	eor	r19, r18
    252c:	22 0d       	add	r18, r2
    252e:	33 1d       	adc	r19, r3
    2530:	20 83       	st	Z, r18
	len = KEY_BIT/8;
	for (cnt_i = 0; cnt_i < len; cnt_i++)
	{
		key[cnt_i] = *(KEYandV + cnt_i);
	}
	for (cnt_j = cnt_i; cnt_j < BLOCK_SIZE; cnt_j++)
    2532:	cc 5b       	subi	r28, 0xBC	; 188
    2534:	de 4f       	sbci	r29, 0xFE	; 254
    2536:	28 81       	ld	r18, Y
    2538:	c4 54       	subi	r28, 0x44	; 68
    253a:	d1 40       	sbci	r29, 0x01	; 1
    253c:	2f 5f       	subi	r18, 0xFF	; 255
    253e:	cc 5b       	subi	r28, 0xBC	; 188
    2540:	de 4f       	sbci	r29, 0xFE	; 254
    2542:	28 83       	st	Y, r18
    2544:	c4 54       	subi	r28, 0x44	; 68
    2546:	d1 40       	sbci	r29, 0x01	; 1
    2548:	cc 5b       	subi	r28, 0xBC	; 188
    254a:	de 4f       	sbci	r29, 0xFE	; 254
    254c:	28 81       	ld	r18, Y
    254e:	c4 54       	subi	r28, 0x44	; 68
    2550:	d1 40       	sbci	r29, 0x01	; 1
    2552:	20 31       	cpi	r18, 0x10	; 16
    2554:	80 f2       	brcs	.-96     	; 0x24f6 <derived_function+0x3f6>
	}

#if KEY_BIT == 128
	aes128_init(key, &aes_test);
#elif KEY_BIT == 192
	aes192_init(key, &aes_test);
    2556:	be 01       	movw	r22, r28
    2558:	6f 5f       	subi	r22, 0xFF	; 255
    255a:	7f 4f       	sbci	r23, 0xFF	; 255
    255c:	a9 dc       	rcall	.-1710   	; 0x1eb0 <aes192_init>
#else //KEY_BIT ==256
	aes256_init(key, &aes_test);
#endif
	for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    255e:	cb 5b       	subi	r28, 0xBB	; 187
    2560:	de 4f       	sbci	r29, 0xFE	; 254
    2562:	18 82       	st	Y, r1
    2564:	c5 54       	subi	r28, 0x45	; 69
    2566:	d1 40       	sbci	r29, 0x01	; 1
    2568:	cb 5b       	subi	r28, 0xBB	; 187
    256a:	de 4f       	sbci	r29, 0xFE	; 254
    256c:	88 81       	ld	r24, Y
    256e:	c5 54       	subi	r28, 0x45	; 69
    2570:	d1 40       	sbci	r29, 0x01	; 1
    2572:	83 30       	cpi	r24, 0x03	; 3
    2574:	08 f0       	brcs	.+2      	; 0x2578 <derived_function+0x478>
    2576:	62 c0       	rjmp	.+196    	; 0x263c <derived_function+0x53c>
	{
#if KEY_BIT == 128
		aes128_enc_CBC_asm(state, &aes_test);
#elif KEY_BIT == 192
		aes192_enc_CBC_asm(state, &aes_test);
    2578:	be 01       	movw	r22, r28
    257a:	6f 5f       	subi	r22, 0xFF	; 255
    257c:	7f 4f       	sbci	r23, 0xFF	; 255
    257e:	c6 01       	movw	r24, r12
    2580:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
		aes256_enc_CBC_asm(state, &aes_test);
#endif

		for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2584:	cc 5b       	subi	r28, 0xBC	; 188
    2586:	de 4f       	sbci	r29, 0xFE	; 254
    2588:	18 82       	st	Y, r1
    258a:	c4 54       	subi	r28, 0x44	; 68
    258c:	d1 40       	sbci	r29, 0x01	; 1
    258e:	cc 5b       	subi	r28, 0xBC	; 188
    2590:	de 4f       	sbci	r29, 0xFE	; 254
    2592:	88 81       	ld	r24, Y
    2594:	c4 54       	subi	r28, 0x44	; 68
    2596:	d1 40       	sbci	r29, 0x01	; 1
    2598:	80 31       	cpi	r24, 0x10	; 16
    259a:	98 f0       	brcs	.+38     	; 0x25c2 <derived_function+0x4c2>
    259c:	3c c0       	rjmp	.+120    	; 0x2616 <derived_function+0x516>
    259e:	cc 5b       	subi	r28, 0xBC	; 188
    25a0:	de 4f       	sbci	r29, 0xFE	; 254
    25a2:	88 81       	ld	r24, Y
    25a4:	c4 54       	subi	r28, 0x44	; 68
    25a6:	d1 40       	sbci	r29, 0x01	; 1
    25a8:	8f 5f       	subi	r24, 0xFF	; 255
    25aa:	cc 5b       	subi	r28, 0xBC	; 188
    25ac:	de 4f       	sbci	r29, 0xFE	; 254
    25ae:	88 83       	st	Y, r24
    25b0:	c4 54       	subi	r28, 0x44	; 68
    25b2:	d1 40       	sbci	r29, 0x01	; 1
    25b4:	cc 5b       	subi	r28, 0xBC	; 188
    25b6:	de 4f       	sbci	r29, 0xFE	; 254
    25b8:	88 81       	ld	r24, Y
    25ba:	c4 54       	subi	r28, 0x44	; 68
    25bc:	d1 40       	sbci	r29, 0x01	; 1
    25be:	80 31       	cpi	r24, 0x10	; 16
    25c0:	50 f5       	brcc	.+84     	; 0x2616 <derived_function+0x516>
		{
			seed[cnt_i * 16 + cnt_j] = state[cnt_j];
    25c2:	cb 5b       	subi	r28, 0xBB	; 187
    25c4:	de 4f       	sbci	r29, 0xFE	; 254
    25c6:	28 81       	ld	r18, Y
    25c8:	c5 54       	subi	r28, 0x45	; 69
    25ca:	d1 40       	sbci	r29, 0x01	; 1
    25cc:	cc 5b       	subi	r28, 0xBC	; 188
    25ce:	de 4f       	sbci	r29, 0xFE	; 254
    25d0:	98 81       	ld	r25, Y
    25d2:	c4 54       	subi	r28, 0x44	; 68
    25d4:	d1 40       	sbci	r29, 0x01	; 1
    25d6:	cc 5b       	subi	r28, 0xBC	; 188
    25d8:	de 4f       	sbci	r29, 0xFE	; 254
    25da:	88 81       	ld	r24, Y
    25dc:	c4 54       	subi	r28, 0x44	; 68
    25de:	d1 40       	sbci	r29, 0x01	; 1
    25e0:	f3 01       	movw	r30, r6
    25e2:	a0 e1       	ldi	r26, 0x10	; 16
    25e4:	2a 9f       	mul	r18, r26
    25e6:	e0 0d       	add	r30, r0
    25e8:	f1 1d       	adc	r31, r1
    25ea:	11 24       	eor	r1, r1
    25ec:	e9 0f       	add	r30, r25
    25ee:	f1 1d       	adc	r31, r1
    25f0:	d6 01       	movw	r26, r12
    25f2:	a8 0f       	add	r26, r24
    25f4:	b1 1d       	adc	r27, r1
    25f6:	8c 91       	ld	r24, X
    25f8:	80 83       	st	Z, r24
			if ((KEY_BIT == 192) && (cnt_i == 2) && (cnt_j == 7))
    25fa:	cb 5b       	subi	r28, 0xBB	; 187
    25fc:	de 4f       	sbci	r29, 0xFE	; 254
    25fe:	88 81       	ld	r24, Y
    2600:	c5 54       	subi	r28, 0x45	; 69
    2602:	d1 40       	sbci	r29, 0x01	; 1
    2604:	82 30       	cpi	r24, 0x02	; 2
    2606:	59 f6       	brne	.-106    	; 0x259e <derived_function+0x49e>
    2608:	cc 5b       	subi	r28, 0xBC	; 188
    260a:	de 4f       	sbci	r29, 0xFE	; 254
    260c:	88 81       	ld	r24, Y
    260e:	c4 54       	subi	r28, 0x44	; 68
    2610:	d1 40       	sbci	r29, 0x01	; 1
    2612:	87 30       	cpi	r24, 0x07	; 7
    2614:	21 f6       	brne	.-120    	; 0x259e <derived_function+0x49e>
#elif KEY_BIT == 192
	aes192_init(key, &aes_test);
#else //KEY_BIT ==256
	aes256_init(key, &aes_test);
#endif
	for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2616:	cb 5b       	subi	r28, 0xBB	; 187
    2618:	de 4f       	sbci	r29, 0xFE	; 254
    261a:	88 81       	ld	r24, Y
    261c:	c5 54       	subi	r28, 0x45	; 69
    261e:	d1 40       	sbci	r29, 0x01	; 1
    2620:	8f 5f       	subi	r24, 0xFF	; 255
    2622:	cb 5b       	subi	r28, 0xBB	; 187
    2624:	de 4f       	sbci	r29, 0xFE	; 254
    2626:	88 83       	st	Y, r24
    2628:	c5 54       	subi	r28, 0x45	; 69
    262a:	d1 40       	sbci	r29, 0x01	; 1
    262c:	cb 5b       	subi	r28, 0xBB	; 187
    262e:	de 4f       	sbci	r29, 0xFE	; 254
    2630:	88 81       	ld	r24, Y
    2632:	c5 54       	subi	r28, 0x45	; 69
    2634:	d1 40       	sbci	r29, 0x01	; 1
    2636:	83 30       	cpi	r24, 0x03	; 3
    2638:	08 f4       	brcc	.+2      	; 0x263c <derived_function+0x53c>
    263a:	9e cf       	rjmp	.-196    	; 0x2578 <derived_function+0x478>
			if ((KEY_BIT == 192) && (cnt_i == 2) && (cnt_j == 7))
				break;
		}
	}
	
}
    263c:	ca 5b       	subi	r28, 0xBA	; 186
    263e:	de 4f       	sbci	r29, 0xFE	; 254
    2640:	0f b6       	in	r0, 0x3f	; 63
    2642:	f8 94       	cli
    2644:	de bf       	out	0x3e, r29	; 62
    2646:	0f be       	out	0x3f, r0	; 63
    2648:	cd bf       	out	0x3d, r28	; 61
    264a:	df 91       	pop	r29
    264c:	cf 91       	pop	r28
    264e:	1f 91       	pop	r17
    2650:	0f 91       	pop	r16
    2652:	ff 90       	pop	r15
    2654:	ef 90       	pop	r14
    2656:	df 90       	pop	r13
    2658:	cf 90       	pop	r12
    265a:	bf 90       	pop	r11
    265c:	af 90       	pop	r10
    265e:	9f 90       	pop	r9
    2660:	8f 90       	pop	r8
    2662:	7f 90       	pop	r7
    2664:	6f 90       	pop	r6
    2666:	5f 90       	pop	r5
    2668:	4f 90       	pop	r4
    266a:	3f 90       	pop	r3
    266c:	2f 90       	pop	r2
    266e:	08 95       	ret

00002670 <update>:

void update(st_state *state, u8 *seed)
{
    2670:	af 92       	push	r10
    2672:	bf 92       	push	r11
    2674:	cf 92       	push	r12
    2676:	df 92       	push	r13
    2678:	ef 92       	push	r14
    267a:	ff 92       	push	r15
    267c:	0f 93       	push	r16
    267e:	1f 93       	push	r17
    2680:	cf 93       	push	r28
    2682:	df 93       	push	r29
    2684:	cd b7       	in	r28, 0x3d	; 61
    2686:	de b7       	in	r29, 0x3e	; 62
    2688:	c7 50       	subi	r28, 0x07	; 7
    268a:	d1 40       	sbci	r29, 0x01	; 1
    268c:	0f b6       	in	r0, 0x3f	; 63
    268e:	f8 94       	cli
    2690:	de bf       	out	0x3e, r29	; 62
    2692:	0f be       	out	0x3f, r0	; 63
    2694:	cd bf       	out	0x3d, r28	; 61
    2696:	7c 01       	movw	r14, r24
    2698:	6b 01       	movw	r12, r22
	volatile char cnt_i, cnt_j, cnt_k = 0;
    269a:	cb 5f       	subi	r28, 0xFB	; 251
    269c:	de 4f       	sbci	r29, 0xFE	; 254
    269e:	18 82       	st	Y, r1
    26a0:	c5 50       	subi	r28, 0x05	; 5
    26a2:	d1 40       	sbci	r29, 0x01	; 1
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
    26a4:	8e 01       	movw	r16, r28
    26a6:	0f 52       	subi	r16, 0x2F	; 47
    26a8:	1f 4f       	sbci	r17, 0xFF	; 255
    26aa:	88 e2       	ldi	r24, 0x28	; 40
    26ac:	f8 01       	movw	r30, r16
    26ae:	11 92       	st	Z+, r1
    26b0:	8a 95       	dec	r24
    26b2:	e9 f7       	brne	.-6      	; 0x26ae <update+0x3e>
	u8 temp2[12] = {0x00};
    26b4:	5e 01       	movw	r10, r28
    26b6:	f9 ef       	ldi	r31, 0xF9	; 249
    26b8:	af 0e       	add	r10, r31
    26ba:	b1 1c       	adc	r11, r1
    26bc:	8c e0       	ldi	r24, 0x0C	; 12
    26be:	f5 01       	movw	r30, r10
    26c0:	11 92       	st	Z+, r1
    26c2:	8a 95       	dec	r24
    26c4:	e9 f7       	brne	.-6      	; 0x26c0 <update+0x50>
	cnt_j = KEY_BIT/8;
    26c6:	88 e1       	ldi	r24, 0x18	; 24
    26c8:	ca 5f       	subi	r28, 0xFA	; 250
    26ca:	de 4f       	sbci	r29, 0xFE	; 254
    26cc:	88 83       	st	Y, r24
    26ce:	c6 50       	subi	r28, 0x06	; 6
    26d0:	d1 40       	sbci	r29, 0x01	; 1

	for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
    26d2:	c9 5f       	subi	r28, 0xF9	; 249
    26d4:	de 4f       	sbci	r29, 0xFE	; 254
    26d6:	18 82       	st	Y, r1
    26d8:	c7 50       	subi	r28, 0x07	; 7
    26da:	d1 40       	sbci	r29, 0x01	; 1
    26dc:	c9 5f       	subi	r28, 0xF9	; 249
    26de:	de 4f       	sbci	r29, 0xFE	; 254
    26e0:	98 81       	ld	r25, Y
    26e2:	c7 50       	subi	r28, 0x07	; 7
    26e4:	d1 40       	sbci	r29, 0x01	; 1
    26e6:	ca 5f       	subi	r28, 0xFA	; 250
    26e8:	de 4f       	sbci	r29, 0xFE	; 254
    26ea:	88 81       	ld	r24, Y
    26ec:	c6 50       	subi	r28, 0x06	; 6
    26ee:	d1 40       	sbci	r29, 0x01	; 1
    26f0:	98 17       	cp	r25, r24
    26f2:	08 f5       	brcc	.+66     	; 0x2736 <update+0xc6>
	{
		key[cnt_i] = state->key[cnt_i];
    26f4:	c9 5f       	subi	r28, 0xF9	; 249
    26f6:	de 4f       	sbci	r29, 0xFE	; 254
    26f8:	88 81       	ld	r24, Y
    26fa:	c7 50       	subi	r28, 0x07	; 7
    26fc:	d1 40       	sbci	r29, 0x01	; 1
    26fe:	c9 5f       	subi	r28, 0xF9	; 249
    2700:	de 4f       	sbci	r29, 0xFE	; 254
    2702:	88 81       	ld	r24, Y
    2704:	c7 50       	subi	r28, 0x07	; 7
    2706:	d1 40       	sbci	r29, 0x01	; 1
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
	u8 temp2[12] = {0x00};
	cnt_j = KEY_BIT/8;

	for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
    2708:	c9 5f       	subi	r28, 0xF9	; 249
    270a:	de 4f       	sbci	r29, 0xFE	; 254
    270c:	88 81       	ld	r24, Y
    270e:	c7 50       	subi	r28, 0x07	; 7
    2710:	d1 40       	sbci	r29, 0x01	; 1
    2712:	8f 5f       	subi	r24, 0xFF	; 255
    2714:	c9 5f       	subi	r28, 0xF9	; 249
    2716:	de 4f       	sbci	r29, 0xFE	; 254
    2718:	88 83       	st	Y, r24
    271a:	c7 50       	subi	r28, 0x07	; 7
    271c:	d1 40       	sbci	r29, 0x01	; 1
    271e:	c9 5f       	subi	r28, 0xF9	; 249
    2720:	de 4f       	sbci	r29, 0xFE	; 254
    2722:	98 81       	ld	r25, Y
    2724:	c7 50       	subi	r28, 0x07	; 7
    2726:	d1 40       	sbci	r29, 0x01	; 1
    2728:	ca 5f       	subi	r28, 0xFA	; 250
    272a:	de 4f       	sbci	r29, 0xFE	; 254
    272c:	88 81       	ld	r24, Y
    272e:	c6 50       	subi	r28, 0x06	; 6
    2730:	d1 40       	sbci	r29, 0x01	; 1
    2732:	98 17       	cp	r25, r24
    2734:	f8 f2       	brcs	.-66     	; 0x26f4 <update+0x84>
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
    2736:	d7 01       	movw	r26, r14
    2738:	58 96       	adiw	r26, 0x18	; 24
    273a:	f8 01       	movw	r30, r16
    273c:	98 01       	movw	r18, r16
    273e:	20 5f       	subi	r18, 0xF0	; 240
    2740:	3f 4f       	sbci	r19, 0xFF	; 255
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    2742:	8d 91       	ld	r24, X+
    2744:	81 93       	st	Z+, r24
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2746:	e2 17       	cp	r30, r18
    2748:	f3 07       	cpc	r31, r19
    274a:	d9 f7       	brne	.-10     	; 0x2742 <update+0xd2>
	for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    274c:	c9 5f       	subi	r28, 0xF9	; 249
    274e:	de 4f       	sbci	r29, 0xFE	; 254
    2750:	18 82       	st	Y, r1
    2752:	c7 50       	subi	r28, 0x07	; 7
    2754:	d1 40       	sbci	r29, 0x01	; 1
    2756:	c9 5f       	subi	r28, 0xF9	; 249
    2758:	de 4f       	sbci	r29, 0xFE	; 254
    275a:	88 81       	ld	r24, Y
    275c:	c7 50       	subi	r28, 0x07	; 7
    275e:	d1 40       	sbci	r29, 0x01	; 1
    2760:	80 31       	cpi	r24, 0x10	; 16
    2762:	28 f5       	brcc	.+74     	; 0x27ae <update+0x13e>
	{
		temp[cnt_i] = state->V[cnt_i];
    2764:	c9 5f       	subi	r28, 0xF9	; 249
    2766:	de 4f       	sbci	r29, 0xFE	; 254
    2768:	98 81       	ld	r25, Y
    276a:	c7 50       	subi	r28, 0x07	; 7
    276c:	d1 40       	sbci	r29, 0x01	; 1
    276e:	c9 5f       	subi	r28, 0xF9	; 249
    2770:	de 4f       	sbci	r29, 0xFE	; 254
    2772:	88 81       	ld	r24, Y
    2774:	c7 50       	subi	r28, 0x07	; 7
    2776:	d1 40       	sbci	r29, 0x01	; 1
    2778:	f8 01       	movw	r30, r16
    277a:	e9 0f       	add	r30, r25
    277c:	f1 1d       	adc	r31, r1
    277e:	d7 01       	movw	r26, r14
    2780:	a8 0f       	add	r26, r24
    2782:	b1 1d       	adc	r27, r1
    2784:	58 96       	adiw	r26, 0x18	; 24
    2786:	8c 91       	ld	r24, X
    2788:	80 83       	st	Z, r24
	for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    278a:	c9 5f       	subi	r28, 0xF9	; 249
    278c:	de 4f       	sbci	r29, 0xFE	; 254
    278e:	88 81       	ld	r24, Y
    2790:	c7 50       	subi	r28, 0x07	; 7
    2792:	d1 40       	sbci	r29, 0x01	; 1
    2794:	8f 5f       	subi	r24, 0xFF	; 255
    2796:	c9 5f       	subi	r28, 0xF9	; 249
    2798:	de 4f       	sbci	r29, 0xFE	; 254
    279a:	88 83       	st	Y, r24
    279c:	c7 50       	subi	r28, 0x07	; 7
    279e:	d1 40       	sbci	r29, 0x01	; 1
    27a0:	c9 5f       	subi	r28, 0xF9	; 249
    27a2:	de 4f       	sbci	r29, 0xFE	; 254
    27a4:	88 81       	ld	r24, Y
    27a6:	c7 50       	subi	r28, 0x07	; 7
    27a8:	d1 40       	sbci	r29, 0x01	; 1
    27aa:	80 31       	cpi	r24, 0x10	; 16
    27ac:	d8 f2       	brcs	.-74     	; 0x2764 <update+0xf4>
	aes128_init(state->key, &aes_test);
	aes128_enc_CTR_asm(temp, &aes_test, temp2);

#elif KEY_BIT == 192
	aes192_ctx_t aes_test;
	aes192_init(state->key, &aes_test);
    27ae:	be 01       	movw	r22, r28
    27b0:	6f 5f       	subi	r22, 0xFF	; 255
    27b2:	7f 4f       	sbci	r23, 0xFF	; 255
    27b4:	c7 01       	movw	r24, r14
    27b6:	7c db       	rcall	.-2312   	; 0x1eb0 <aes192_init>
	aes128_enc_CTR_asm(temp, &aes_test, temp2);
    27b8:	a5 01       	movw	r20, r10
    27ba:	be 01       	movw	r22, r28
    27bc:	6f 5f       	subi	r22, 0xFF	; 255
    27be:	7f 4f       	sbci	r23, 0xFF	; 255
    27c0:	c8 01       	movw	r24, r16
    27c2:	0e 94 87 01 	call	0x30e	; 0x30e <aes128_enc_CTR_asm>
#else //key_bit ==256
	aes256_ctx_t aes_test;
	aes256_init(state->key, &aes_test);
	aes128_enc_CTR_asm(temp, &aes_test, temp2);
#endif
	cnt_j =  SEED_LEN - BLOCK_SIZE;
    27c6:	88 e1       	ldi	r24, 0x18	; 24
    27c8:	ca 5f       	subi	r28, 0xFA	; 250
    27ca:	de 4f       	sbci	r29, 0xFE	; 254
    27cc:	88 83       	st	Y, r24
    27ce:	c6 50       	subi	r28, 0x06	; 6
    27d0:	d1 40       	sbci	r29, 0x01	; 1
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
    27d2:	c9 5f       	subi	r28, 0xF9	; 249
    27d4:	de 4f       	sbci	r29, 0xFE	; 254
    27d6:	18 82       	st	Y, r1
    27d8:	c7 50       	subi	r28, 0x07	; 7
    27da:	d1 40       	sbci	r29, 0x01	; 1
    27dc:	c9 5f       	subi	r28, 0xF9	; 249
    27de:	de 4f       	sbci	r29, 0xFE	; 254
    27e0:	98 81       	ld	r25, Y
    27e2:	c7 50       	subi	r28, 0x07	; 7
    27e4:	d1 40       	sbci	r29, 0x01	; 1
    27e6:	ca 5f       	subi	r28, 0xFA	; 250
    27e8:	de 4f       	sbci	r29, 0xFE	; 254
    27ea:	88 81       	ld	r24, Y
    27ec:	c6 50       	subi	r28, 0x06	; 6
    27ee:	d1 40       	sbci	r29, 0x01	; 1
    27f0:	98 17       	cp	r25, r24
    27f2:	a8 f5       	brcc	.+106    	; 0x285e <update+0x1ee>
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    27f4:	c9 5f       	subi	r28, 0xF9	; 249
    27f6:	de 4f       	sbci	r29, 0xFE	; 254
    27f8:	98 81       	ld	r25, Y
    27fa:	c7 50       	subi	r28, 0x07	; 7
    27fc:	d1 40       	sbci	r29, 0x01	; 1
    27fe:	c9 5f       	subi	r28, 0xF9	; 249
    2800:	de 4f       	sbci	r29, 0xFE	; 254
    2802:	28 81       	ld	r18, Y
    2804:	c7 50       	subi	r28, 0x07	; 7
    2806:	d1 40       	sbci	r29, 0x01	; 1
    2808:	c9 5f       	subi	r28, 0xF9	; 249
    280a:	de 4f       	sbci	r29, 0xFE	; 254
    280c:	88 81       	ld	r24, Y
    280e:	c7 50       	subi	r28, 0x07	; 7
    2810:	d1 40       	sbci	r29, 0x01	; 1
    2812:	b7 01       	movw	r22, r14
    2814:	69 0f       	add	r22, r25
    2816:	71 1d       	adc	r23, r1
    2818:	a6 01       	movw	r20, r12
    281a:	48 0f       	add	r20, r24
    281c:	51 1d       	adc	r21, r1
    281e:	d8 01       	movw	r26, r16
    2820:	a2 0f       	add	r26, r18
    2822:	b1 1d       	adc	r27, r1
    2824:	fa 01       	movw	r30, r20
    2826:	90 81       	ld	r25, Z
    2828:	8c 91       	ld	r24, X
    282a:	89 27       	eor	r24, r25
    282c:	fb 01       	movw	r30, r22
    282e:	80 83       	st	Z, r24
	aes256_ctx_t aes_test;
	aes256_init(state->key, &aes_test);
	aes128_enc_CTR_asm(temp, &aes_test, temp2);
#endif
	cnt_j =  SEED_LEN - BLOCK_SIZE;
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
    2830:	c9 5f       	subi	r28, 0xF9	; 249
    2832:	de 4f       	sbci	r29, 0xFE	; 254
    2834:	88 81       	ld	r24, Y
    2836:	c7 50       	subi	r28, 0x07	; 7
    2838:	d1 40       	sbci	r29, 0x01	; 1
    283a:	8f 5f       	subi	r24, 0xFF	; 255
    283c:	c9 5f       	subi	r28, 0xF9	; 249
    283e:	de 4f       	sbci	r29, 0xFE	; 254
    2840:	88 83       	st	Y, r24
    2842:	c7 50       	subi	r28, 0x07	; 7
    2844:	d1 40       	sbci	r29, 0x01	; 1
    2846:	c9 5f       	subi	r28, 0xF9	; 249
    2848:	de 4f       	sbci	r29, 0xFE	; 254
    284a:	98 81       	ld	r25, Y
    284c:	c7 50       	subi	r28, 0x07	; 7
    284e:	d1 40       	sbci	r29, 0x01	; 1
    2850:	ca 5f       	subi	r28, 0xFA	; 250
    2852:	de 4f       	sbci	r29, 0xFE	; 254
    2854:	88 81       	ld	r24, Y
    2856:	c6 50       	subi	r28, 0x06	; 6
    2858:	d1 40       	sbci	r29, 0x01	; 1
    285a:	98 17       	cp	r25, r24
    285c:	58 f2       	brcs	.-106    	; 0x27f4 <update+0x184>
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
	}
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    285e:	c9 5f       	subi	r28, 0xF9	; 249
    2860:	de 4f       	sbci	r29, 0xFE	; 254
    2862:	18 82       	st	Y, r1
    2864:	c7 50       	subi	r28, 0x07	; 7
    2866:	d1 40       	sbci	r29, 0x01	; 1
    2868:	c9 5f       	subi	r28, 0xF9	; 249
    286a:	de 4f       	sbci	r29, 0xFE	; 254
    286c:	88 81       	ld	r24, Y
    286e:	c7 50       	subi	r28, 0x07	; 7
    2870:	d1 40       	sbci	r29, 0x01	; 1
    2872:	80 31       	cpi	r24, 0x10	; 16
    2874:	e8 f5       	brcc	.+122    	; 0x28f0 <update+0x280>
	{
		state->V[cnt_i] = temp[cnt_j + cnt_i] ^ seed[cnt_j + cnt_i];
    2876:	c9 5f       	subi	r28, 0xF9	; 249
    2878:	de 4f       	sbci	r29, 0xFE	; 254
    287a:	28 81       	ld	r18, Y
    287c:	c7 50       	subi	r28, 0x07	; 7
    287e:	d1 40       	sbci	r29, 0x01	; 1
    2880:	ca 5f       	subi	r28, 0xFA	; 250
    2882:	de 4f       	sbci	r29, 0xFE	; 254
    2884:	98 81       	ld	r25, Y
    2886:	c6 50       	subi	r28, 0x06	; 6
    2888:	d1 40       	sbci	r29, 0x01	; 1
    288a:	c9 5f       	subi	r28, 0xF9	; 249
    288c:	de 4f       	sbci	r29, 0xFE	; 254
    288e:	88 81       	ld	r24, Y
    2890:	c7 50       	subi	r28, 0x07	; 7
    2892:	d1 40       	sbci	r29, 0x01	; 1
    2894:	ca 5f       	subi	r28, 0xFA	; 250
    2896:	de 4f       	sbci	r29, 0xFE	; 254
    2898:	58 81       	ld	r21, Y
    289a:	c6 50       	subi	r28, 0x06	; 6
    289c:	d1 40       	sbci	r29, 0x01	; 1
    289e:	c9 5f       	subi	r28, 0xF9	; 249
    28a0:	de 4f       	sbci	r29, 0xFE	; 254
    28a2:	48 81       	ld	r20, Y
    28a4:	c7 50       	subi	r28, 0x07	; 7
    28a6:	d1 40       	sbci	r29, 0x01	; 1
    28a8:	b7 01       	movw	r22, r14
    28aa:	62 0f       	add	r22, r18
    28ac:	71 1d       	adc	r23, r1
    28ae:	d6 01       	movw	r26, r12
    28b0:	a5 0f       	add	r26, r21
    28b2:	b1 1d       	adc	r27, r1
    28b4:	a4 0f       	add	r26, r20
    28b6:	b1 1d       	adc	r27, r1
    28b8:	f8 01       	movw	r30, r16
    28ba:	e9 0f       	add	r30, r25
    28bc:	f1 1d       	adc	r31, r1
    28be:	e8 0f       	add	r30, r24
    28c0:	f1 1d       	adc	r31, r1
    28c2:	9c 91       	ld	r25, X
    28c4:	80 81       	ld	r24, Z
    28c6:	89 27       	eor	r24, r25
    28c8:	fb 01       	movw	r30, r22
    28ca:	80 8f       	std	Z+24, r24	; 0x18
	cnt_j =  SEED_LEN - BLOCK_SIZE;
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
	{
		state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
	}
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    28cc:	c9 5f       	subi	r28, 0xF9	; 249
    28ce:	de 4f       	sbci	r29, 0xFE	; 254
    28d0:	88 81       	ld	r24, Y
    28d2:	c7 50       	subi	r28, 0x07	; 7
    28d4:	d1 40       	sbci	r29, 0x01	; 1
    28d6:	8f 5f       	subi	r24, 0xFF	; 255
    28d8:	c9 5f       	subi	r28, 0xF9	; 249
    28da:	de 4f       	sbci	r29, 0xFE	; 254
    28dc:	88 83       	st	Y, r24
    28de:	c7 50       	subi	r28, 0x07	; 7
    28e0:	d1 40       	sbci	r29, 0x01	; 1
    28e2:	c9 5f       	subi	r28, 0xF9	; 249
    28e4:	de 4f       	sbci	r29, 0xFE	; 254
    28e6:	88 81       	ld	r24, Y
    28e8:	c7 50       	subi	r28, 0x07	; 7
    28ea:	d1 40       	sbci	r29, 0x01	; 1
    28ec:	80 31       	cpi	r24, 0x10	; 16
    28ee:	18 f2       	brcs	.-122    	; 0x2876 <update+0x206>
	{
		state->V[cnt_i] = temp[cnt_j + cnt_i] ^ seed[cnt_j + cnt_i];
	}
}
    28f0:	c9 5f       	subi	r28, 0xF9	; 249
    28f2:	de 4f       	sbci	r29, 0xFE	; 254
    28f4:	0f b6       	in	r0, 0x3f	; 63
    28f6:	f8 94       	cli
    28f8:	de bf       	out	0x3e, r29	; 62
    28fa:	0f be       	out	0x3f, r0	; 63
    28fc:	cd bf       	out	0x3d, r28	; 61
    28fe:	df 91       	pop	r29
    2900:	cf 91       	pop	r28
    2902:	1f 91       	pop	r17
    2904:	0f 91       	pop	r16
    2906:	ff 90       	pop	r15
    2908:	ef 90       	pop	r14
    290a:	df 90       	pop	r13
    290c:	cf 90       	pop	r12
    290e:	bf 90       	pop	r11
    2910:	af 90       	pop	r10
    2912:	08 95       	ret

00002914 <Reseed_Function>:
	}
	state->Reseed_counter++;
}

void Reseed_Function(st_state *state, u8 *re_Entrophy, u8 *re_add_data, st_len *len)
{
    2914:	8f 92       	push	r8
    2916:	9f 92       	push	r9
    2918:	af 92       	push	r10
    291a:	bf 92       	push	r11
    291c:	cf 92       	push	r12
    291e:	df 92       	push	r13
    2920:	ef 92       	push	r14
    2922:	ff 92       	push	r15
    2924:	0f 93       	push	r16
    2926:	1f 93       	push	r17
    2928:	cf 93       	push	r28
    292a:	df 93       	push	r29
    292c:	cd b7       	in	r28, 0x3d	; 61
    292e:	de b7       	in	r29, 0x3e	; 62
    2930:	aa 97       	sbiw	r28, 0x2a	; 42
    2932:	0f b6       	in	r0, 0x3f	; 63
    2934:	f8 94       	cli
    2936:	de bf       	out	0x3e, r29	; 62
    2938:	0f be       	out	0x3f, r0	; 63
    293a:	cd bf       	out	0x3d, r28	; 61
    293c:	5c 01       	movw	r10, r24
    293e:	7b 01       	movw	r14, r22
	volatile char cnt_i = 0;
    2940:	1a a6       	std	Y+42, r1	; 0x2a
	u8 len2 = len->re_adddata + len->re_Entrophy;
    2942:	f9 01       	movw	r30, r18
    2944:	82 80       	ldd	r8, Z+2	; 0x02
    2946:	91 80       	ldd	r9, Z+1	; 0x01
    2948:	98 0c       	add	r9, r8
    294a:	99 a6       	std	Y+41, r9	; 0x29
	u8 *input_data = (u8 *)calloc(len2, sizeof(u8));
    294c:	61 e0       	ldi	r22, 0x01	; 1
    294e:	70 e0       	ldi	r23, 0x00	; 0
    2950:	89 2d       	mov	r24, r9
    2952:	90 e0       	ldi	r25, 0x00	; 0
    2954:	4f d6       	rcall	.+3230   	; 0x35f4 <calloc>
    2956:	8c 01       	movw	r16, r24
	u8 seed[SEED_LEN] = {0x00};
    2958:	ce 01       	movw	r24, r28
    295a:	01 96       	adiw	r24, 0x01	; 1
    295c:	6c 01       	movw	r12, r24
    295e:	88 e2       	ldi	r24, 0x28	; 40
    2960:	f6 01       	movw	r30, r12
    2962:	11 92       	st	Z+, r1
    2964:	8a 95       	dec	r24
    2966:	e9 f7       	brne	.-6      	; 0x2962 <Reseed_Function+0x4e>
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
    2968:	1a a6       	std	Y+42, r1	; 0x2a
    296a:	8a a5       	ldd	r24, Y+42	; 0x2a
    296c:	88 15       	cp	r24, r8
    296e:	80 f4       	brcc	.+32     	; 0x2990 <Reseed_Function+0x7c>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
    2970:	9a a5       	ldd	r25, Y+42	; 0x2a
    2972:	8a a5       	ldd	r24, Y+42	; 0x2a
    2974:	f8 01       	movw	r30, r16
    2976:	e9 0f       	add	r30, r25
    2978:	f1 1d       	adc	r31, r1
    297a:	d7 01       	movw	r26, r14
    297c:	a8 0f       	add	r26, r24
    297e:	b1 1d       	adc	r27, r1
    2980:	8c 91       	ld	r24, X
    2982:	80 83       	st	Z, r24
{
	volatile char cnt_i = 0;
	u8 len2 = len->re_adddata + len->re_Entrophy;
	u8 *input_data = (u8 *)calloc(len2, sizeof(u8));
	u8 seed[SEED_LEN] = {0x00};
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
    2984:	8a a5       	ldd	r24, Y+42	; 0x2a
    2986:	8f 5f       	subi	r24, 0xFF	; 255
    2988:	8a a7       	std	Y+42, r24	; 0x2a
    298a:	8a a5       	ldd	r24, Y+42	; 0x2a
    298c:	88 15       	cp	r24, r8
    298e:	80 f3       	brcs	.-32     	; 0x2970 <Reseed_Function+0x5c>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
	}
	for (cnt_i = len->re_Entrophy; cnt_i < len2; cnt_i++)
    2990:	8a a6       	std	Y+42, r8	; 0x2a
    2992:	8a a5       	ldd	r24, Y+42	; 0x2a
    2994:	89 15       	cp	r24, r9
    2996:	a0 f4       	brcc	.+40     	; 0x29c0 <Reseed_Function+0xac>
    2998:	88 2d       	mov	r24, r8
    299a:	90 e0       	ldi	r25, 0x00	; 0
	{
		input_data[cnt_i] = re_Entrophy[cnt_i - len->re_Entrophy];
    299c:	2a a5       	ldd	r18, Y+42	; 0x2a
    299e:	ea a5       	ldd	r30, Y+42	; 0x2a
    29a0:	d8 01       	movw	r26, r16
    29a2:	a2 0f       	add	r26, r18
    29a4:	b1 1d       	adc	r27, r1
    29a6:	f0 e0       	ldi	r31, 0x00	; 0
    29a8:	e8 1b       	sub	r30, r24
    29aa:	f9 0b       	sbc	r31, r25
    29ac:	ee 0d       	add	r30, r14
    29ae:	ff 1d       	adc	r31, r15
    29b0:	20 81       	ld	r18, Z
    29b2:	2c 93       	st	X, r18
	u8 seed[SEED_LEN] = {0x00};
	for (cnt_i = 0; cnt_i < len->re_Entrophy; cnt_i++)
	{
		input_data[cnt_i] = re_Entrophy[cnt_i];
	}
	for (cnt_i = len->re_Entrophy; cnt_i < len2; cnt_i++)
    29b4:	2a a5       	ldd	r18, Y+42	; 0x2a
    29b6:	2f 5f       	subi	r18, 0xFF	; 255
    29b8:	2a a7       	std	Y+42, r18	; 0x2a
    29ba:	2a a5       	ldd	r18, Y+42	; 0x2a
    29bc:	29 15       	cp	r18, r9
    29be:	70 f3       	brcs	.-36     	; 0x299c <Reseed_Function+0x88>
	{
		input_data[cnt_i] = re_Entrophy[cnt_i - len->re_Entrophy];
	}
	derived_function(input_data, seed, &len2);
    29c0:	ae 01       	movw	r20, r28
    29c2:	47 5d       	subi	r20, 0xD7	; 215
    29c4:	5f 4f       	sbci	r21, 0xFF	; 255
    29c6:	b6 01       	movw	r22, r12
    29c8:	c8 01       	movw	r24, r16
    29ca:	9a db       	rcall	.-2252   	; 0x2100 <derived_function>
	update(state, seed);
    29cc:	b6 01       	movw	r22, r12
    29ce:	c5 01       	movw	r24, r10
	free(input_data);
    29d0:	4f de       	rcall	.-866    	; 0x2670 <update>
    29d2:	c8 01       	movw	r24, r16
    29d4:	c1 d6       	rcall	.+3458   	; 0x3758 <free>
}
    29d6:	aa 96       	adiw	r28, 0x2a	; 42
    29d8:	0f b6       	in	r0, 0x3f	; 63
    29da:	f8 94       	cli
    29dc:	de bf       	out	0x3e, r29	; 62
    29de:	0f be       	out	0x3f, r0	; 63
    29e0:	cd bf       	out	0x3d, r28	; 61
    29e2:	df 91       	pop	r29
    29e4:	cf 91       	pop	r28
    29e6:	1f 91       	pop	r17
    29e8:	0f 91       	pop	r16
    29ea:	ff 90       	pop	r15
    29ec:	ef 90       	pop	r14
    29ee:	df 90       	pop	r13
    29f0:	cf 90       	pop	r12
    29f2:	bf 90       	pop	r11
    29f4:	af 90       	pop	r10
    29f6:	9f 90       	pop	r9
    29f8:	8f 90       	pop	r8
    29fa:	08 95       	ret

000029fc <generate_Random>:
		state->V[cnt_i] = temp[cnt_j + cnt_i] ^ seed[cnt_j + cnt_i];
	}
}

void generate_Random(st_state *state, u8 *random, u8 *add_data, u8 *re_Entrophy, u8 *re_add_data, st_len *LEN)
{
    29fc:	2f 92       	push	r2
    29fe:	3f 92       	push	r3
    2a00:	4f 92       	push	r4
    2a02:	5f 92       	push	r5
    2a04:	6f 92       	push	r6
    2a06:	7f 92       	push	r7
    2a08:	8f 92       	push	r8
    2a0a:	9f 92       	push	r9
    2a0c:	af 92       	push	r10
    2a0e:	bf 92       	push	r11
    2a10:	cf 92       	push	r12
    2a12:	df 92       	push	r13
    2a14:	ef 92       	push	r14
    2a16:	ff 92       	push	r15
    2a18:	0f 93       	push	r16
    2a1a:	1f 93       	push	r17
    2a1c:	cf 93       	push	r28
    2a1e:	df 93       	push	r29
    2a20:	cd b7       	in	r28, 0x3d	; 61
    2a22:	de b7       	in	r29, 0x3e	; 62
    2a24:	c9 57       	subi	r28, 0x79	; 121
    2a26:	d1 40       	sbci	r29, 0x01	; 1
    2a28:	0f b6       	in	r0, 0x3f	; 63
    2a2a:	f8 94       	cli
    2a2c:	de bf       	out	0x3e, r29	; 62
    2a2e:	0f be       	out	0x3f, r0	; 63
    2a30:	cd bf       	out	0x3d, r28	; 61
    2a32:	4c 01       	movw	r8, r24
    2a34:	5b 01       	movw	r10, r22
    2a36:	2a 01       	movw	r4, r20
    2a38:	cc 58       	subi	r28, 0x8C	; 140
    2a3a:	de 4f       	sbci	r29, 0xFE	; 254
    2a3c:	39 83       	std	Y+1, r19	; 0x01
    2a3e:	28 83       	st	Y, r18
    2a40:	c4 57       	subi	r28, 0x74	; 116
    2a42:	d1 40       	sbci	r29, 0x01	; 1
    2a44:	ca 58       	subi	r28, 0x8A	; 138
    2a46:	de 4f       	sbci	r29, 0xFE	; 254
    2a48:	19 83       	std	Y+1, r17	; 0x01
    2a4a:	08 83       	st	Y, r16
    2a4c:	c6 57       	subi	r28, 0x76	; 118
    2a4e:	d1 40       	sbci	r29, 0x01	; 1

	volatile char cnt_i = 0, cnt_j = 0, cnt_k = 0;
    2a50:	cd 58       	subi	r28, 0x8D	; 141
    2a52:	de 4f       	sbci	r29, 0xFE	; 254
    2a54:	18 82       	st	Y, r1
    2a56:	c3 57       	subi	r28, 0x73	; 115
    2a58:	d1 40       	sbci	r29, 0x01	; 1
    2a5a:	ce 58       	subi	r28, 0x8E	; 142
    2a5c:	de 4f       	sbci	r29, 0xFE	; 254
    2a5e:	18 82       	st	Y, r1
    2a60:	c2 57       	subi	r28, 0x72	; 114
    2a62:	d1 40       	sbci	r29, 0x01	; 1
    2a64:	cf 58       	subi	r28, 0x8F	; 143
    2a66:	de 4f       	sbci	r29, 0xFE	; 254
    2a68:	18 82       	st	Y, r1
    2a6a:	c1 57       	subi	r28, 0x71	; 113
    2a6c:	d1 40       	sbci	r29, 0x01	; 1
	u8 round_key[16 * 17] = {0x00};
	u8 a_data[16] = {0x00};
    2a6e:	1e 01       	movw	r2, r28
    2a70:	2f e9       	ldi	r18, 0x9F	; 159
    2a72:	22 1a       	sub	r2, r18
    2a74:	2e ef       	ldi	r18, 0xFE	; 254
    2a76:	32 0a       	sbc	r3, r18
    2a78:	80 e1       	ldi	r24, 0x10	; 16
    2a7a:	d1 01       	movw	r26, r2
    2a7c:	1d 92       	st	X+, r1
    2a7e:	8a 95       	dec	r24
    2a80:	e9 f7       	brne	.-6      	; 0x2a7c <generate_Random+0x80>
	u8 seed[SEED_LEN] = {0x00};
    2a82:	3e 01       	movw	r6, r28
    2a84:	bf ed       	ldi	r27, 0xDF	; 223
    2a86:	6b 1a       	sub	r6, r27
    2a88:	be ef       	ldi	r27, 0xFE	; 254
    2a8a:	7b 0a       	sbc	r7, r27
    2a8c:	88 e2       	ldi	r24, 0x28	; 40
    2a8e:	f3 01       	movw	r30, r6
    2a90:	28 2f       	mov	r18, r24
    2a92:	11 92       	st	Z+, r1
    2a94:	2a 95       	dec	r18
    2a96:	e9 f7       	brne	.-6      	; 0x2a92 <generate_Random+0x96>
	u8 key[KEY_BIT / 8] = {0x00};
    2a98:	ae 01       	movw	r20, r28
    2a9a:	47 5b       	subi	r20, 0xB7	; 183
    2a9c:	5e 4f       	sbci	r21, 0xFE	; 254
    2a9e:	c8 58       	subi	r28, 0x88	; 136
    2aa0:	de 4f       	sbci	r29, 0xFE	; 254
    2aa2:	59 83       	std	Y+1, r21	; 0x01
    2aa4:	48 83       	st	Y, r20
    2aa6:	c8 57       	subi	r28, 0x78	; 120
    2aa8:	d1 40       	sbci	r29, 0x01	; 1
    2aaa:	98 e1       	ldi	r25, 0x18	; 24
    2aac:	da 01       	movw	r26, r20
    2aae:	e9 2f       	mov	r30, r25
    2ab0:	1d 92       	st	X+, r1
    2ab2:	ea 95       	dec	r30
    2ab4:	e9 f7       	brne	.-6      	; 0x2ab0 <generate_Random+0xb4>
	u8 temp[SEED_LEN] = {0x00};
    2ab6:	6e 01       	movw	r12, r28
    2ab8:	f9 ef       	ldi	r31, 0xF9	; 249
    2aba:	cf 0e       	add	r12, r31
    2abc:	d1 1c       	adc	r13, r1
    2abe:	d6 01       	movw	r26, r12
    2ac0:	e8 2f       	mov	r30, r24
    2ac2:	1d 92       	st	X+, r1
    2ac4:	ea 95       	dec	r30
    2ac6:	e9 f7       	brne	.-6      	; 0x2ac2 <generate_Random+0xc6>
	u8 result[SEED_LEN] = {0x00};
    2ac8:	8e 01       	movw	r16, r28
    2aca:	0f 52       	subi	r16, 0x2F	; 47
    2acc:	1f 4f       	sbci	r17, 0xFF	; 255
    2ace:	d8 01       	movw	r26, r16
    2ad0:	1d 92       	st	X+, r1
    2ad2:	8a 95       	dec	r24
    2ad4:	e9 f7       	brne	.-6      	; 0x2ad0 <generate_Random+0xd4>
	cnt_j = KEY_BIT / 8;
    2ad6:	ce 58       	subi	r28, 0x8E	; 142
    2ad8:	de 4f       	sbci	r29, 0xFE	; 254
    2ada:	98 83       	st	Y, r25
    2adc:	c2 57       	subi	r28, 0x72	; 114
    2ade:	d1 40       	sbci	r29, 0x01	; 1
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
    2ae0:	cd 58       	subi	r28, 0x8D	; 141
    2ae2:	de 4f       	sbci	r29, 0xFE	; 254
    2ae4:	18 82       	st	Y, r1
    2ae6:	c3 57       	subi	r28, 0x73	; 115
    2ae8:	d1 40       	sbci	r29, 0x01	; 1
    2aea:	cd 58       	subi	r28, 0x8D	; 141
    2aec:	de 4f       	sbci	r29, 0xFE	; 254
    2aee:	98 81       	ld	r25, Y
    2af0:	c3 57       	subi	r28, 0x73	; 115
    2af2:	d1 40       	sbci	r29, 0x01	; 1
    2af4:	ce 58       	subi	r28, 0x8E	; 142
    2af6:	de 4f       	sbci	r29, 0xFE	; 254
    2af8:	88 81       	ld	r24, Y
    2afa:	c2 57       	subi	r28, 0x72	; 114
    2afc:	d1 40       	sbci	r29, 0x01	; 1
    2afe:	98 17       	cp	r25, r24
    2b00:	68 f5       	brcc	.+90     	; 0x2b5c <generate_Random+0x160>
	{
		key[cnt_i] = state->key[cnt_i];
    2b02:	cd 58       	subi	r28, 0x8D	; 141
    2b04:	de 4f       	sbci	r29, 0xFE	; 254
    2b06:	98 81       	ld	r25, Y
    2b08:	c3 57       	subi	r28, 0x73	; 115
    2b0a:	d1 40       	sbci	r29, 0x01	; 1
    2b0c:	cd 58       	subi	r28, 0x8D	; 141
    2b0e:	de 4f       	sbci	r29, 0xFE	; 254
    2b10:	88 81       	ld	r24, Y
    2b12:	c3 57       	subi	r28, 0x73	; 115
    2b14:	d1 40       	sbci	r29, 0x01	; 1
    2b16:	e9 e4       	ldi	r30, 0x49	; 73
    2b18:	f1 e0       	ldi	r31, 0x01	; 1
    2b1a:	ec 0f       	add	r30, r28
    2b1c:	fd 1f       	adc	r31, r29
    2b1e:	e9 0f       	add	r30, r25
    2b20:	f1 1d       	adc	r31, r1
    2b22:	94 01       	movw	r18, r8
    2b24:	28 0f       	add	r18, r24
    2b26:	31 1d       	adc	r19, r1
    2b28:	d9 01       	movw	r26, r18
    2b2a:	8c 91       	ld	r24, X
    2b2c:	80 83       	st	Z, r24
	u8 seed[SEED_LEN] = {0x00};
	u8 key[KEY_BIT / 8] = {0x00};
	u8 temp[SEED_LEN] = {0x00};
	u8 result[SEED_LEN] = {0x00};
	cnt_j = KEY_BIT / 8;
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
    2b2e:	cd 58       	subi	r28, 0x8D	; 141
    2b30:	de 4f       	sbci	r29, 0xFE	; 254
    2b32:	88 81       	ld	r24, Y
    2b34:	c3 57       	subi	r28, 0x73	; 115
    2b36:	d1 40       	sbci	r29, 0x01	; 1
    2b38:	8f 5f       	subi	r24, 0xFF	; 255
    2b3a:	cd 58       	subi	r28, 0x8D	; 141
    2b3c:	de 4f       	sbci	r29, 0xFE	; 254
    2b3e:	88 83       	st	Y, r24
    2b40:	c3 57       	subi	r28, 0x73	; 115
    2b42:	d1 40       	sbci	r29, 0x01	; 1
    2b44:	cd 58       	subi	r28, 0x8D	; 141
    2b46:	de 4f       	sbci	r29, 0xFE	; 254
    2b48:	98 81       	ld	r25, Y
    2b4a:	c3 57       	subi	r28, 0x73	; 115
    2b4c:	d1 40       	sbci	r29, 0x01	; 1
    2b4e:	ce 58       	subi	r28, 0x8E	; 142
    2b50:	de 4f       	sbci	r29, 0xFE	; 254
    2b52:	88 81       	ld	r24, Y
    2b54:	c2 57       	subi	r28, 0x72	; 114
    2b56:	d1 40       	sbci	r29, 0x01	; 1
    2b58:	98 17       	cp	r25, r24
    2b5a:	98 f2       	brcs	.-90     	; 0x2b02 <generate_Random+0x106>
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
    2b5c:	c4 01       	movw	r24, r8
    2b5e:	48 96       	adiw	r24, 0x18	; 24
    2b60:	f6 01       	movw	r30, r12
    2b62:	96 01       	movw	r18, r12
    2b64:	20 5f       	subi	r18, 0xF0	; 240
    2b66:	3f 4f       	sbci	r19, 0xFF	; 255
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
	{
		drc[cnt_i] = src[cnt_i];
    2b68:	dc 01       	movw	r26, r24
    2b6a:	4d 91       	ld	r20, X+
    2b6c:	cd 01       	movw	r24, r26
    2b6e:	41 93       	st	Z+, r20
		drc[len][cnt_i] = src[cnt_i];
	}
}
void copy(u8 *drc, u8 *src)
{
	for (char cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2b70:	2e 17       	cp	r18, r30
    2b72:	3f 07       	cpc	r19, r31
    2b74:	c9 f7       	brne	.-14     	; 0x2b68 <generate_Random+0x16c>
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2b76:	cd 58       	subi	r28, 0x8D	; 141
    2b78:	de 4f       	sbci	r29, 0xFE	; 254
    2b7a:	18 82       	st	Y, r1
    2b7c:	c3 57       	subi	r28, 0x73	; 115
    2b7e:	d1 40       	sbci	r29, 0x01	; 1
    2b80:	cd 58       	subi	r28, 0x8D	; 141
    2b82:	de 4f       	sbci	r29, 0xFE	; 254
    2b84:	88 81       	ld	r24, Y
    2b86:	c3 57       	subi	r28, 0x73	; 115
    2b88:	d1 40       	sbci	r29, 0x01	; 1
    2b8a:	80 31       	cpi	r24, 0x10	; 16
    2b8c:	60 f5       	brcc	.+88     	; 0x2be6 <generate_Random+0x1ea>
	{
		result[cnt_i] = state->V[(cnt_j) + cnt_i];
    2b8e:	cd 58       	subi	r28, 0x8D	; 141
    2b90:	de 4f       	sbci	r29, 0xFE	; 254
    2b92:	88 81       	ld	r24, Y
    2b94:	c3 57       	subi	r28, 0x73	; 115
    2b96:	d1 40       	sbci	r29, 0x01	; 1
    2b98:	ce 58       	subi	r28, 0x8E	; 142
    2b9a:	de 4f       	sbci	r29, 0xFE	; 254
    2b9c:	38 81       	ld	r19, Y
    2b9e:	c2 57       	subi	r28, 0x72	; 114
    2ba0:	d1 40       	sbci	r29, 0x01	; 1
    2ba2:	cd 58       	subi	r28, 0x8D	; 141
    2ba4:	de 4f       	sbci	r29, 0xFE	; 254
    2ba6:	28 81       	ld	r18, Y
    2ba8:	c3 57       	subi	r28, 0x73	; 115
    2baa:	d1 40       	sbci	r29, 0x01	; 1
    2bac:	a8 01       	movw	r20, r16
    2bae:	48 0f       	add	r20, r24
    2bb0:	51 1d       	adc	r21, r1
    2bb2:	f4 01       	movw	r30, r8
    2bb4:	e3 0f       	add	r30, r19
    2bb6:	f1 1d       	adc	r31, r1
    2bb8:	e2 0f       	add	r30, r18
    2bba:	f1 1d       	adc	r31, r1
    2bbc:	20 8d       	ldd	r18, Z+24	; 0x18
    2bbe:	da 01       	movw	r26, r20
    2bc0:	2c 93       	st	X, r18
	for (cnt_i = 0; cnt_i <cnt_j; cnt_i++)
	{
		key[cnt_i] = state->key[cnt_i];
	}
	copy(temp, state->V);
	for (cnt_i = 0; cnt_i < BLOCK_SIZE; cnt_i++)
    2bc2:	cd 58       	subi	r28, 0x8D	; 141
    2bc4:	de 4f       	sbci	r29, 0xFE	; 254
    2bc6:	98 81       	ld	r25, Y
    2bc8:	c3 57       	subi	r28, 0x73	; 115
    2bca:	d1 40       	sbci	r29, 0x01	; 1
    2bcc:	9f 5f       	subi	r25, 0xFF	; 255
    2bce:	cd 58       	subi	r28, 0x8D	; 141
    2bd0:	de 4f       	sbci	r29, 0xFE	; 254
    2bd2:	98 83       	st	Y, r25
    2bd4:	c3 57       	subi	r28, 0x73	; 115
    2bd6:	d1 40       	sbci	r29, 0x01	; 1
    2bd8:	cd 58       	subi	r28, 0x8D	; 141
    2bda:	de 4f       	sbci	r29, 0xFE	; 254
    2bdc:	88 81       	ld	r24, Y
    2bde:	c3 57       	subi	r28, 0x73	; 115
    2be0:	d1 40       	sbci	r29, 0x01	; 1
    2be2:	80 31       	cpi	r24, 0x10	; 16
    2be4:	a0 f2       	brcs	.-88     	; 0x2b8e <generate_Random+0x192>
#if KEY_BIT == 128
	aes128_ctx_t aes_test;
	aes128_init(key, &aes_test);
#elif KEY_BIT == 192
	aes192_ctx_t aes_test;
	aes192_init(key, &aes_test);
    2be6:	be 01       	movw	r22, r28
    2be8:	6f 5f       	subi	r22, 0xFF	; 255
    2bea:	7f 4f       	sbci	r23, 0xFF	; 255
    2bec:	ce 01       	movw	r24, r28
    2bee:	87 5b       	subi	r24, 0xB7	; 183
    2bf0:	9e 4f       	sbci	r25, 0xFE	; 254
    2bf2:	5e d9       	rcall	.-3396   	; 0x1eb0 <aes192_init>
#else //KEY_BIT ==256
	aes256_ctx_t aes_test;
	aes256_init(key, &aes_test);
#endif

	if (state->prediction_flag == TRUE)
    2bf4:	f4 01       	movw	r30, r8
    2bf6:	81 a5       	ldd	r24, Z+41	; 0x29
    2bf8:	81 30       	cpi	r24, 0x01	; 1
    2bfa:	09 f4       	brne	.+2      	; 0x2bfe <generate_Random+0x202>
    2bfc:	6d c1       	rjmp	.+730    	; 0x2ed8 <generate_Random+0x4dc>
		}
	}

	else if (add_data != NULL)
	{
		derived_function(add_data, seed, &(LEN->general_len));
    2bfe:	a7 01       	movw	r20, r14
		{
			state->V[cnt_i] = temp[16 + cnt_i] ^ seed[16 + cnt_i];
		}
	}

	else if (add_data != NULL)
    2c00:	41 14       	cp	r4, r1
    2c02:	51 04       	cpc	r5, r1
    2c04:	09 f4       	brne	.+2      	; 0x2c08 <generate_Random+0x20c>
    2c06:	b7 c2       	rjmp	.+1390   	; 0x3176 <generate_Random+0x77a>
	{
		derived_function(add_data, seed, &(LEN->general_len));
    2c08:	4c 5f       	subi	r20, 0xFC	; 252
    2c0a:	5f 4f       	sbci	r21, 0xFF	; 255
    2c0c:	b3 01       	movw	r22, r6
    2c0e:	c2 01       	movw	r24, r4
    2c10:	77 da       	rcall	.-2834   	; 0x2100 <derived_function>
		update(state, seed);
    2c12:	b3 01       	movw	r22, r6
    2c14:	c4 01       	movw	r24, r8
    2c16:	2c dd       	rcall	.-1448   	; 0x2670 <update>
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2c18:	cd 58       	subi	r28, 0x8D	; 141
    2c1a:	de 4f       	sbci	r29, 0xFE	; 254
    2c1c:	18 82       	st	Y, r1
    2c1e:	c3 57       	subi	r28, 0x73	; 115
    2c20:	d1 40       	sbci	r29, 0x01	; 1
    2c22:	cd 58       	subi	r28, 0x8D	; 141
    2c24:	de 4f       	sbci	r29, 0xFE	; 254
    2c26:	88 81       	ld	r24, Y
    2c28:	c3 57       	subi	r28, 0x73	; 115
    2c2a:	d1 40       	sbci	r29, 0x01	; 1
    2c2c:	83 30       	cpi	r24, 0x03	; 3
    2c2e:	08 f0       	brcs	.+2      	; 0x2c32 <generate_Random+0x236>
    2c30:	57 c0       	rjmp	.+174    	; 0x2ce0 <generate_Random+0x2e4>
		{
			state->V[15]++;
    2c32:	f4 01       	movw	r30, r8
    2c34:	87 a1       	ldd	r24, Z+39	; 0x27
    2c36:	8f 5f       	subi	r24, 0xFF	; 255
    2c38:	87 a3       	std	Z+39, r24	; 0x27
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    2c3a:	be 01       	movw	r22, r28
    2c3c:	6f 5f       	subi	r22, 0xFF	; 255
    2c3e:	7f 4f       	sbci	r23, 0xFF	; 255
    2c40:	c8 01       	movw	r24, r16
    2c42:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2c46:	ce 58       	subi	r28, 0x8E	; 142
    2c48:	de 4f       	sbci	r29, 0xFE	; 254
    2c4a:	18 82       	st	Y, r1
    2c4c:	c2 57       	subi	r28, 0x72	; 114
    2c4e:	d1 40       	sbci	r29, 0x01	; 1
    2c50:	ce 58       	subi	r28, 0x8E	; 142
    2c52:	de 4f       	sbci	r29, 0xFE	; 254
    2c54:	88 81       	ld	r24, Y
    2c56:	c2 57       	subi	r28, 0x72	; 114
    2c58:	d1 40       	sbci	r29, 0x01	; 1
    2c5a:	80 31       	cpi	r24, 0x10	; 16
    2c5c:	70 f5       	brcc	.+92     	; 0x2cba <generate_Random+0x2be>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    2c5e:	cd 58       	subi	r28, 0x8D	; 141
    2c60:	de 4f       	sbci	r29, 0xFE	; 254
    2c62:	28 81       	ld	r18, Y
    2c64:	c3 57       	subi	r28, 0x73	; 115
    2c66:	d1 40       	sbci	r29, 0x01	; 1
    2c68:	ce 58       	subi	r28, 0x8E	; 142
    2c6a:	de 4f       	sbci	r29, 0xFE	; 254
    2c6c:	98 81       	ld	r25, Y
    2c6e:	c2 57       	subi	r28, 0x72	; 114
    2c70:	d1 40       	sbci	r29, 0x01	; 1
    2c72:	ce 58       	subi	r28, 0x8E	; 142
    2c74:	de 4f       	sbci	r29, 0xFE	; 254
    2c76:	88 81       	ld	r24, Y
    2c78:	c2 57       	subi	r28, 0x72	; 114
    2c7a:	d1 40       	sbci	r29, 0x01	; 1
    2c7c:	f5 01       	movw	r30, r10
    2c7e:	30 e1       	ldi	r19, 0x10	; 16
    2c80:	23 9f       	mul	r18, r19
    2c82:	e0 0d       	add	r30, r0
    2c84:	f1 1d       	adc	r31, r1
    2c86:	11 24       	eor	r1, r1
    2c88:	e9 0f       	add	r30, r25
    2c8a:	f1 1d       	adc	r31, r1
    2c8c:	d8 01       	movw	r26, r16
    2c8e:	a8 0f       	add	r26, r24
    2c90:	b1 1d       	adc	r27, r1
    2c92:	8c 91       	ld	r24, X
    2c94:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2c96:	ce 58       	subi	r28, 0x8E	; 142
    2c98:	de 4f       	sbci	r29, 0xFE	; 254
    2c9a:	88 81       	ld	r24, Y
    2c9c:	c2 57       	subi	r28, 0x72	; 114
    2c9e:	d1 40       	sbci	r29, 0x01	; 1
    2ca0:	8f 5f       	subi	r24, 0xFF	; 255
    2ca2:	ce 58       	subi	r28, 0x8E	; 142
    2ca4:	de 4f       	sbci	r29, 0xFE	; 254
    2ca6:	88 83       	st	Y, r24
    2ca8:	c2 57       	subi	r28, 0x72	; 114
    2caa:	d1 40       	sbci	r29, 0x01	; 1
    2cac:	ce 58       	subi	r28, 0x8E	; 142
    2cae:	de 4f       	sbci	r29, 0xFE	; 254
    2cb0:	88 81       	ld	r24, Y
    2cb2:	c2 57       	subi	r28, 0x72	; 114
    2cb4:	d1 40       	sbci	r29, 0x01	; 1
    2cb6:	80 31       	cpi	r24, 0x10	; 16
    2cb8:	90 f2       	brcs	.-92     	; 0x2c5e <generate_Random+0x262>

	else if (add_data != NULL)
	{
		derived_function(add_data, seed, &(LEN->general_len));
		update(state, seed);
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2cba:	cd 58       	subi	r28, 0x8D	; 141
    2cbc:	de 4f       	sbci	r29, 0xFE	; 254
    2cbe:	88 81       	ld	r24, Y
    2cc0:	c3 57       	subi	r28, 0x73	; 115
    2cc2:	d1 40       	sbci	r29, 0x01	; 1
    2cc4:	8f 5f       	subi	r24, 0xFF	; 255
    2cc6:	cd 58       	subi	r28, 0x8D	; 141
    2cc8:	de 4f       	sbci	r29, 0xFE	; 254
    2cca:	88 83       	st	Y, r24
    2ccc:	c3 57       	subi	r28, 0x73	; 115
    2cce:	d1 40       	sbci	r29, 0x01	; 1
    2cd0:	cd 58       	subi	r28, 0x8D	; 141
    2cd2:	de 4f       	sbci	r29, 0xFE	; 254
    2cd4:	88 81       	ld	r24, Y
    2cd6:	c3 57       	subi	r28, 0x73	; 115
    2cd8:	d1 40       	sbci	r29, 0x01	; 1
    2cda:	83 30       	cpi	r24, 0x03	; 3
    2cdc:	08 f4       	brcc	.+2      	; 0x2ce0 <generate_Random+0x2e4>
    2cde:	a9 cf       	rjmp	.-174    	; 0x2c32 <generate_Random+0x236>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2ce0:	cd 58       	subi	r28, 0x8D	; 141
    2ce2:	de 4f       	sbci	r29, 0xFE	; 254
    2ce4:	18 82       	st	Y, r1
    2ce6:	c3 57       	subi	r28, 0x73	; 115
    2ce8:	d1 40       	sbci	r29, 0x01	; 1
    2cea:	cd 58       	subi	r28, 0x8D	; 141
    2cec:	de 4f       	sbci	r29, 0xFE	; 254
    2cee:	88 81       	ld	r24, Y
    2cf0:	c3 57       	subi	r28, 0x73	; 115
    2cf2:	d1 40       	sbci	r29, 0x01	; 1
    2cf4:	83 30       	cpi	r24, 0x03	; 3
    2cf6:	08 f0       	brcs	.+2      	; 0x2cfa <generate_Random+0x2fe>
    2cf8:	5a c0       	rjmp	.+180    	; 0x2dae <generate_Random+0x3b2>
		{
			state->V[15]++;
    2cfa:	d4 01       	movw	r26, r8
    2cfc:	97 96       	adiw	r26, 0x27	; 39
    2cfe:	8c 91       	ld	r24, X
    2d00:	97 97       	sbiw	r26, 0x27	; 39
    2d02:	8f 5f       	subi	r24, 0xFF	; 255
    2d04:	97 96       	adiw	r26, 0x27	; 39
    2d06:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    2d08:	be 01       	movw	r22, r28
    2d0a:	6f 5f       	subi	r22, 0xFF	; 255
    2d0c:	7f 4f       	sbci	r23, 0xFF	; 255
    2d0e:	c8 01       	movw	r24, r16
    2d10:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2d14:	ce 58       	subi	r28, 0x8E	; 142
    2d16:	de 4f       	sbci	r29, 0xFE	; 254
    2d18:	18 82       	st	Y, r1
    2d1a:	c2 57       	subi	r28, 0x72	; 114
    2d1c:	d1 40       	sbci	r29, 0x01	; 1
    2d1e:	ce 58       	subi	r28, 0x8E	; 142
    2d20:	de 4f       	sbci	r29, 0xFE	; 254
    2d22:	88 81       	ld	r24, Y
    2d24:	c2 57       	subi	r28, 0x72	; 114
    2d26:	d1 40       	sbci	r29, 0x01	; 1
    2d28:	80 31       	cpi	r24, 0x10	; 16
    2d2a:	70 f5       	brcc	.+92     	; 0x2d88 <generate_Random+0x38c>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    2d2c:	cd 58       	subi	r28, 0x8D	; 141
    2d2e:	de 4f       	sbci	r29, 0xFE	; 254
    2d30:	28 81       	ld	r18, Y
    2d32:	c3 57       	subi	r28, 0x73	; 115
    2d34:	d1 40       	sbci	r29, 0x01	; 1
    2d36:	ce 58       	subi	r28, 0x8E	; 142
    2d38:	de 4f       	sbci	r29, 0xFE	; 254
    2d3a:	98 81       	ld	r25, Y
    2d3c:	c2 57       	subi	r28, 0x72	; 114
    2d3e:	d1 40       	sbci	r29, 0x01	; 1
    2d40:	ce 58       	subi	r28, 0x8E	; 142
    2d42:	de 4f       	sbci	r29, 0xFE	; 254
    2d44:	88 81       	ld	r24, Y
    2d46:	c2 57       	subi	r28, 0x72	; 114
    2d48:	d1 40       	sbci	r29, 0x01	; 1
    2d4a:	f6 01       	movw	r30, r12
    2d4c:	b0 e1       	ldi	r27, 0x10	; 16
    2d4e:	2b 9f       	mul	r18, r27
    2d50:	e0 0d       	add	r30, r0
    2d52:	f1 1d       	adc	r31, r1
    2d54:	11 24       	eor	r1, r1
    2d56:	e9 0f       	add	r30, r25
    2d58:	f1 1d       	adc	r31, r1
    2d5a:	d8 01       	movw	r26, r16
    2d5c:	a8 0f       	add	r26, r24
    2d5e:	b1 1d       	adc	r27, r1
    2d60:	8c 91       	ld	r24, X
    2d62:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2d64:	ce 58       	subi	r28, 0x8E	; 142
    2d66:	de 4f       	sbci	r29, 0xFE	; 254
    2d68:	88 81       	ld	r24, Y
    2d6a:	c2 57       	subi	r28, 0x72	; 114
    2d6c:	d1 40       	sbci	r29, 0x01	; 1
    2d6e:	8f 5f       	subi	r24, 0xFF	; 255
    2d70:	ce 58       	subi	r28, 0x8E	; 142
    2d72:	de 4f       	sbci	r29, 0xFE	; 254
    2d74:	88 83       	st	Y, r24
    2d76:	c2 57       	subi	r28, 0x72	; 114
    2d78:	d1 40       	sbci	r29, 0x01	; 1
    2d7a:	ce 58       	subi	r28, 0x8E	; 142
    2d7c:	de 4f       	sbci	r29, 0xFE	; 254
    2d7e:	88 81       	ld	r24, Y
    2d80:	c2 57       	subi	r28, 0x72	; 114
    2d82:	d1 40       	sbci	r29, 0x01	; 1
    2d84:	80 31       	cpi	r24, 0x10	; 16
    2d86:	90 f2       	brcs	.-92     	; 0x2d2c <generate_Random+0x330>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2d88:	cd 58       	subi	r28, 0x8D	; 141
    2d8a:	de 4f       	sbci	r29, 0xFE	; 254
    2d8c:	88 81       	ld	r24, Y
    2d8e:	c3 57       	subi	r28, 0x73	; 115
    2d90:	d1 40       	sbci	r29, 0x01	; 1
    2d92:	8f 5f       	subi	r24, 0xFF	; 255
    2d94:	cd 58       	subi	r28, 0x8D	; 141
    2d96:	de 4f       	sbci	r29, 0xFE	; 254
    2d98:	88 83       	st	Y, r24
    2d9a:	c3 57       	subi	r28, 0x73	; 115
    2d9c:	d1 40       	sbci	r29, 0x01	; 1
    2d9e:	cd 58       	subi	r28, 0x8D	; 141
    2da0:	de 4f       	sbci	r29, 0xFE	; 254
    2da2:	88 81       	ld	r24, Y
    2da4:	c3 57       	subi	r28, 0x73	; 115
    2da6:	d1 40       	sbci	r29, 0x01	; 1
    2da8:	83 30       	cpi	r24, 0x03	; 3
    2daa:	08 f4       	brcc	.+2      	; 0x2dae <generate_Random+0x3b2>
    2dac:	a6 cf       	rjmp	.-180    	; 0x2cfa <generate_Random+0x2fe>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2dae:	cd 58       	subi	r28, 0x8D	; 141
    2db0:	de 4f       	sbci	r29, 0xFE	; 254
    2db2:	18 82       	st	Y, r1
    2db4:	c3 57       	subi	r28, 0x73	; 115
    2db6:	d1 40       	sbci	r29, 0x01	; 1
    2db8:	cd 58       	subi	r28, 0x8D	; 141
    2dba:	de 4f       	sbci	r29, 0xFE	; 254
    2dbc:	88 81       	ld	r24, Y
    2dbe:	c3 57       	subi	r28, 0x73	; 115
    2dc0:	d1 40       	sbci	r29, 0x01	; 1
    2dc2:	83 30       	cpi	r24, 0x03	; 3
    2dc4:	30 f5       	brcc	.+76     	; 0x2e12 <generate_Random+0x416>
		{
			temp[cnt_i] ^= seed[cnt_i];
    2dc6:	cd 58       	subi	r28, 0x8D	; 141
    2dc8:	de 4f       	sbci	r29, 0xFE	; 254
    2dca:	88 81       	ld	r24, Y
    2dcc:	c3 57       	subi	r28, 0x73	; 115
    2dce:	d1 40       	sbci	r29, 0x01	; 1
    2dd0:	cd 58       	subi	r28, 0x8D	; 141
    2dd2:	de 4f       	sbci	r29, 0xFE	; 254
    2dd4:	98 81       	ld	r25, Y
    2dd6:	c3 57       	subi	r28, 0x73	; 115
    2dd8:	d1 40       	sbci	r29, 0x01	; 1
    2dda:	f6 01       	movw	r30, r12
    2ddc:	e9 0f       	add	r30, r25
    2dde:	f1 1d       	adc	r31, r1
    2de0:	d3 01       	movw	r26, r6
    2de2:	a8 0f       	add	r26, r24
    2de4:	b1 1d       	adc	r27, r1
    2de6:	9c 91       	ld	r25, X
    2de8:	80 81       	ld	r24, Z
    2dea:	89 27       	eor	r24, r25
    2dec:	80 83       	st	Z, r24
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2dee:	cd 58       	subi	r28, 0x8D	; 141
    2df0:	de 4f       	sbci	r29, 0xFE	; 254
    2df2:	88 81       	ld	r24, Y
    2df4:	c3 57       	subi	r28, 0x73	; 115
    2df6:	d1 40       	sbci	r29, 0x01	; 1
    2df8:	8f 5f       	subi	r24, 0xFF	; 255
    2dfa:	cd 58       	subi	r28, 0x8D	; 141
    2dfc:	de 4f       	sbci	r29, 0xFE	; 254
    2dfe:	88 83       	st	Y, r24
    2e00:	c3 57       	subi	r28, 0x73	; 115
    2e02:	d1 40       	sbci	r29, 0x01	; 1
    2e04:	cd 58       	subi	r28, 0x8D	; 141
    2e06:	de 4f       	sbci	r29, 0xFE	; 254
    2e08:	88 81       	ld	r24, Y
    2e0a:	c3 57       	subi	r28, 0x73	; 115
    2e0c:	d1 40       	sbci	r29, 0x01	; 1
    2e0e:	83 30       	cpi	r24, 0x03	; 3
    2e10:	d0 f2       	brcs	.-76     	; 0x2dc6 <generate_Random+0x3ca>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2e12:	cd 58       	subi	r28, 0x8D	; 141
    2e14:	de 4f       	sbci	r29, 0xFE	; 254
    2e16:	18 82       	st	Y, r1
    2e18:	c3 57       	subi	r28, 0x73	; 115
    2e1a:	d1 40       	sbci	r29, 0x01	; 1
    2e1c:	cd 58       	subi	r28, 0x8D	; 141
    2e1e:	de 4f       	sbci	r29, 0xFE	; 254
    2e20:	88 81       	ld	r24, Y
    2e22:	c3 57       	subi	r28, 0x73	; 115
    2e24:	d1 40       	sbci	r29, 0x01	; 1
    2e26:	88 31       	cpi	r24, 0x18	; 24
    2e28:	78 f5       	brcc	.+94     	; 0x2e88 <generate_Random+0x48c>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    2e2a:	cd 58       	subi	r28, 0x8D	; 141
    2e2c:	de 4f       	sbci	r29, 0xFE	; 254
    2e2e:	98 81       	ld	r25, Y
    2e30:	c3 57       	subi	r28, 0x73	; 115
    2e32:	d1 40       	sbci	r29, 0x01	; 1
    2e34:	cd 58       	subi	r28, 0x8D	; 141
    2e36:	de 4f       	sbci	r29, 0xFE	; 254
    2e38:	88 81       	ld	r24, Y
    2e3a:	c3 57       	subi	r28, 0x73	; 115
    2e3c:	d1 40       	sbci	r29, 0x01	; 1
    2e3e:	cd 58       	subi	r28, 0x8D	; 141
    2e40:	de 4f       	sbci	r29, 0xFE	; 254
    2e42:	28 81       	ld	r18, Y
    2e44:	c3 57       	subi	r28, 0x73	; 115
    2e46:	d1 40       	sbci	r29, 0x01	; 1
    2e48:	b4 01       	movw	r22, r8
    2e4a:	69 0f       	add	r22, r25
    2e4c:	71 1d       	adc	r23, r1
    2e4e:	f6 01       	movw	r30, r12
    2e50:	e8 0f       	add	r30, r24
    2e52:	f1 1d       	adc	r31, r1
    2e54:	d3 01       	movw	r26, r6
    2e56:	a2 0f       	add	r26, r18
    2e58:	b1 1d       	adc	r27, r1
    2e5a:	90 81       	ld	r25, Z
    2e5c:	8c 91       	ld	r24, X
    2e5e:	89 27       	eor	r24, r25
    2e60:	db 01       	movw	r26, r22
    2e62:	8c 93       	st	X, r24
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    2e64:	cd 58       	subi	r28, 0x8D	; 141
    2e66:	de 4f       	sbci	r29, 0xFE	; 254
    2e68:	88 81       	ld	r24, Y
    2e6a:	c3 57       	subi	r28, 0x73	; 115
    2e6c:	d1 40       	sbci	r29, 0x01	; 1
    2e6e:	8f 5f       	subi	r24, 0xFF	; 255
    2e70:	cd 58       	subi	r28, 0x8D	; 141
    2e72:	de 4f       	sbci	r29, 0xFE	; 254
    2e74:	88 83       	st	Y, r24
    2e76:	c3 57       	subi	r28, 0x73	; 115
    2e78:	d1 40       	sbci	r29, 0x01	; 1
    2e7a:	cd 58       	subi	r28, 0x8D	; 141
    2e7c:	de 4f       	sbci	r29, 0xFE	; 254
    2e7e:	88 81       	ld	r24, Y
    2e80:	c3 57       	subi	r28, 0x73	; 115
    2e82:	d1 40       	sbci	r29, 0x01	; 1
    2e84:	88 31       	cpi	r24, 0x18	; 24
    2e86:	88 f2       	brcs	.-94     	; 0x2e2a <generate_Random+0x42e>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i< LEN_SEED - (KEY_BIT / 8); cnt_i++)
    2e88:	cd 58       	subi	r28, 0x8D	; 141
    2e8a:	de 4f       	sbci	r29, 0xFE	; 254
    2e8c:	18 82       	st	Y, r1
    2e8e:	c3 57       	subi	r28, 0x73	; 115
    2e90:	d1 40       	sbci	r29, 0x01	; 1
    2e92:	cd 58       	subi	r28, 0x8D	; 141
    2e94:	de 4f       	sbci	r29, 0xFE	; 254
    2e96:	88 81       	ld	r24, Y
    2e98:	c3 57       	subi	r28, 0x73	; 115
    2e9a:	d1 40       	sbci	r29, 0x01	; 1
		for (cnt_i = 0; cnt_i< cnt_j; cnt_i++)
		{
			state->V[cnt_i] = temp[16 + cnt_i] ^ seed[16 + cnt_i];
		}
	}
	state->Reseed_counter++;
    2e9c:	f4 01       	movw	r30, r8
    2e9e:	80 a5       	ldd	r24, Z+40	; 0x28
    2ea0:	8f 5f       	subi	r24, 0xFF	; 255
    2ea2:	80 a7       	std	Z+40, r24	; 0x28
}
    2ea4:	c7 58       	subi	r28, 0x87	; 135
    2ea6:	de 4f       	sbci	r29, 0xFE	; 254
    2ea8:	0f b6       	in	r0, 0x3f	; 63
    2eaa:	f8 94       	cli
    2eac:	de bf       	out	0x3e, r29	; 62
    2eae:	0f be       	out	0x3f, r0	; 63
    2eb0:	cd bf       	out	0x3d, r28	; 61
    2eb2:	df 91       	pop	r29
    2eb4:	cf 91       	pop	r28
    2eb6:	1f 91       	pop	r17
    2eb8:	0f 91       	pop	r16
    2eba:	ff 90       	pop	r15
    2ebc:	ef 90       	pop	r14
    2ebe:	df 90       	pop	r13
    2ec0:	cf 90       	pop	r12
    2ec2:	bf 90       	pop	r11
    2ec4:	af 90       	pop	r10
    2ec6:	9f 90       	pop	r9
    2ec8:	8f 90       	pop	r8
    2eca:	7f 90       	pop	r7
    2ecc:	6f 90       	pop	r6
    2ece:	5f 90       	pop	r5
    2ed0:	4f 90       	pop	r4
    2ed2:	3f 90       	pop	r3
    2ed4:	2f 90       	pop	r2
    2ed6:	08 95       	ret
	aes256_init(key, &aes_test);
#endif

	if (state->prediction_flag == TRUE)
	{
		Reseed_Function(state, re_Entrophy, re_add_data, LEN);
    2ed8:	97 01       	movw	r18, r14
    2eda:	ca 58       	subi	r28, 0x8A	; 138
    2edc:	de 4f       	sbci	r29, 0xFE	; 254
    2ede:	48 81       	ld	r20, Y
    2ee0:	59 81       	ldd	r21, Y+1	; 0x01
    2ee2:	c6 57       	subi	r28, 0x76	; 118
    2ee4:	d1 40       	sbci	r29, 0x01	; 1
    2ee6:	cc 58       	subi	r28, 0x8C	; 140
    2ee8:	de 4f       	sbci	r29, 0xFE	; 254
    2eea:	68 81       	ld	r22, Y
    2eec:	79 81       	ldd	r23, Y+1	; 0x01
    2eee:	c4 57       	subi	r28, 0x74	; 116
    2ef0:	d1 40       	sbci	r29, 0x01	; 1
    2ef2:	c4 01       	movw	r24, r8
    2ef4:	0f dd       	rcall	.-1506   	; 0x2914 <Reseed_Function>
		add_data = NULL;
		derived_function(a_data, seed, &(LEN->general_len));
    2ef6:	a7 01       	movw	r20, r14
    2ef8:	4c 5f       	subi	r20, 0xFC	; 252
    2efa:	5f 4f       	sbci	r21, 0xFF	; 255
    2efc:	b3 01       	movw	r22, r6
    2efe:	c1 01       	movw	r24, r2
    2f00:	ff d8       	rcall	.-3586   	; 0x2100 <derived_function>
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2f02:	cd 58       	subi	r28, 0x8D	; 141
    2f04:	de 4f       	sbci	r29, 0xFE	; 254
    2f06:	18 82       	st	Y, r1
    2f08:	c3 57       	subi	r28, 0x73	; 115
    2f0a:	d1 40       	sbci	r29, 0x01	; 1
    2f0c:	cd 58       	subi	r28, 0x8D	; 141
    2f0e:	de 4f       	sbci	r29, 0xFE	; 254
    2f10:	88 81       	ld	r24, Y
    2f12:	c3 57       	subi	r28, 0x73	; 115
    2f14:	d1 40       	sbci	r29, 0x01	; 1
    2f16:	83 30       	cpi	r24, 0x03	; 3
    2f18:	08 f0       	brcs	.+2      	; 0x2f1c <generate_Random+0x520>
    2f1a:	57 c0       	rjmp	.+174    	; 0x2fca <generate_Random+0x5ce>
		{
			state->V[15]++;
    2f1c:	f4 01       	movw	r30, r8
    2f1e:	87 a1       	ldd	r24, Z+39	; 0x27
    2f20:	8f 5f       	subi	r24, 0xFF	; 255
    2f22:	87 a3       	std	Z+39, r24	; 0x27
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    2f24:	be 01       	movw	r22, r28
    2f26:	6f 5f       	subi	r22, 0xFF	; 255
    2f28:	7f 4f       	sbci	r23, 0xFF	; 255
    2f2a:	c8 01       	movw	r24, r16
    2f2c:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2f30:	ce 58       	subi	r28, 0x8E	; 142
    2f32:	de 4f       	sbci	r29, 0xFE	; 254
    2f34:	18 82       	st	Y, r1
    2f36:	c2 57       	subi	r28, 0x72	; 114
    2f38:	d1 40       	sbci	r29, 0x01	; 1
    2f3a:	ce 58       	subi	r28, 0x8E	; 142
    2f3c:	de 4f       	sbci	r29, 0xFE	; 254
    2f3e:	88 81       	ld	r24, Y
    2f40:	c2 57       	subi	r28, 0x72	; 114
    2f42:	d1 40       	sbci	r29, 0x01	; 1
    2f44:	80 31       	cpi	r24, 0x10	; 16
    2f46:	70 f5       	brcc	.+92     	; 0x2fa4 <generate_Random+0x5a8>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    2f48:	cd 58       	subi	r28, 0x8D	; 141
    2f4a:	de 4f       	sbci	r29, 0xFE	; 254
    2f4c:	28 81       	ld	r18, Y
    2f4e:	c3 57       	subi	r28, 0x73	; 115
    2f50:	d1 40       	sbci	r29, 0x01	; 1
    2f52:	ce 58       	subi	r28, 0x8E	; 142
    2f54:	de 4f       	sbci	r29, 0xFE	; 254
    2f56:	98 81       	ld	r25, Y
    2f58:	c2 57       	subi	r28, 0x72	; 114
    2f5a:	d1 40       	sbci	r29, 0x01	; 1
    2f5c:	ce 58       	subi	r28, 0x8E	; 142
    2f5e:	de 4f       	sbci	r29, 0xFE	; 254
    2f60:	88 81       	ld	r24, Y
    2f62:	c2 57       	subi	r28, 0x72	; 114
    2f64:	d1 40       	sbci	r29, 0x01	; 1
    2f66:	f5 01       	movw	r30, r10
    2f68:	30 e1       	ldi	r19, 0x10	; 16
    2f6a:	23 9f       	mul	r18, r19
    2f6c:	e0 0d       	add	r30, r0
    2f6e:	f1 1d       	adc	r31, r1
    2f70:	11 24       	eor	r1, r1
    2f72:	e9 0f       	add	r30, r25
    2f74:	f1 1d       	adc	r31, r1
    2f76:	d8 01       	movw	r26, r16
    2f78:	a8 0f       	add	r26, r24
    2f7a:	b1 1d       	adc	r27, r1
    2f7c:	8c 91       	ld	r24, X
    2f7e:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2f80:	ce 58       	subi	r28, 0x8E	; 142
    2f82:	de 4f       	sbci	r29, 0xFE	; 254
    2f84:	88 81       	ld	r24, Y
    2f86:	c2 57       	subi	r28, 0x72	; 114
    2f88:	d1 40       	sbci	r29, 0x01	; 1
    2f8a:	8f 5f       	subi	r24, 0xFF	; 255
    2f8c:	ce 58       	subi	r28, 0x8E	; 142
    2f8e:	de 4f       	sbci	r29, 0xFE	; 254
    2f90:	88 83       	st	Y, r24
    2f92:	c2 57       	subi	r28, 0x72	; 114
    2f94:	d1 40       	sbci	r29, 0x01	; 1
    2f96:	ce 58       	subi	r28, 0x8E	; 142
    2f98:	de 4f       	sbci	r29, 0xFE	; 254
    2f9a:	88 81       	ld	r24, Y
    2f9c:	c2 57       	subi	r28, 0x72	; 114
    2f9e:	d1 40       	sbci	r29, 0x01	; 1
    2fa0:	80 31       	cpi	r24, 0x10	; 16
    2fa2:	90 f2       	brcs	.-92     	; 0x2f48 <generate_Random+0x54c>
	if (state->prediction_flag == TRUE)
	{
		Reseed_Function(state, re_Entrophy, re_add_data, LEN);
		add_data = NULL;
		derived_function(a_data, seed, &(LEN->general_len));
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2fa4:	cd 58       	subi	r28, 0x8D	; 141
    2fa6:	de 4f       	sbci	r29, 0xFE	; 254
    2fa8:	88 81       	ld	r24, Y
    2faa:	c3 57       	subi	r28, 0x73	; 115
    2fac:	d1 40       	sbci	r29, 0x01	; 1
    2fae:	8f 5f       	subi	r24, 0xFF	; 255
    2fb0:	cd 58       	subi	r28, 0x8D	; 141
    2fb2:	de 4f       	sbci	r29, 0xFE	; 254
    2fb4:	88 83       	st	Y, r24
    2fb6:	c3 57       	subi	r28, 0x73	; 115
    2fb8:	d1 40       	sbci	r29, 0x01	; 1
    2fba:	cd 58       	subi	r28, 0x8D	; 141
    2fbc:	de 4f       	sbci	r29, 0xFE	; 254
    2fbe:	88 81       	ld	r24, Y
    2fc0:	c3 57       	subi	r28, 0x73	; 115
    2fc2:	d1 40       	sbci	r29, 0x01	; 1
    2fc4:	83 30       	cpi	r24, 0x03	; 3
    2fc6:	08 f4       	brcc	.+2      	; 0x2fca <generate_Random+0x5ce>
    2fc8:	a9 cf       	rjmp	.-174    	; 0x2f1c <generate_Random+0x520>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    2fca:	cd 58       	subi	r28, 0x8D	; 141
    2fcc:	de 4f       	sbci	r29, 0xFE	; 254
    2fce:	18 82       	st	Y, r1
    2fd0:	c3 57       	subi	r28, 0x73	; 115
    2fd2:	d1 40       	sbci	r29, 0x01	; 1
    2fd4:	cd 58       	subi	r28, 0x8D	; 141
    2fd6:	de 4f       	sbci	r29, 0xFE	; 254
    2fd8:	88 81       	ld	r24, Y
    2fda:	c3 57       	subi	r28, 0x73	; 115
    2fdc:	d1 40       	sbci	r29, 0x01	; 1
    2fde:	83 30       	cpi	r24, 0x03	; 3
    2fe0:	08 f0       	brcs	.+2      	; 0x2fe4 <generate_Random+0x5e8>
    2fe2:	5a c0       	rjmp	.+180    	; 0x3098 <generate_Random+0x69c>
		{
			state->V[15]++;
    2fe4:	d4 01       	movw	r26, r8
    2fe6:	97 96       	adiw	r26, 0x27	; 39
    2fe8:	8c 91       	ld	r24, X
    2fea:	97 97       	sbiw	r26, 0x27	; 39
    2fec:	8f 5f       	subi	r24, 0xFF	; 255
    2fee:	97 96       	adiw	r26, 0x27	; 39
    2ff0:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    2ff2:	be 01       	movw	r22, r28
    2ff4:	6f 5f       	subi	r22, 0xFF	; 255
    2ff6:	7f 4f       	sbci	r23, 0xFF	; 255
    2ff8:	c8 01       	movw	r24, r16
    2ffa:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    2ffe:	ce 58       	subi	r28, 0x8E	; 142
    3000:	de 4f       	sbci	r29, 0xFE	; 254
    3002:	18 82       	st	Y, r1
    3004:	c2 57       	subi	r28, 0x72	; 114
    3006:	d1 40       	sbci	r29, 0x01	; 1
    3008:	ce 58       	subi	r28, 0x8E	; 142
    300a:	de 4f       	sbci	r29, 0xFE	; 254
    300c:	88 81       	ld	r24, Y
    300e:	c2 57       	subi	r28, 0x72	; 114
    3010:	d1 40       	sbci	r29, 0x01	; 1
    3012:	80 31       	cpi	r24, 0x10	; 16
    3014:	70 f5       	brcc	.+92     	; 0x3072 <generate_Random+0x676>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    3016:	cd 58       	subi	r28, 0x8D	; 141
    3018:	de 4f       	sbci	r29, 0xFE	; 254
    301a:	28 81       	ld	r18, Y
    301c:	c3 57       	subi	r28, 0x73	; 115
    301e:	d1 40       	sbci	r29, 0x01	; 1
    3020:	ce 58       	subi	r28, 0x8E	; 142
    3022:	de 4f       	sbci	r29, 0xFE	; 254
    3024:	98 81       	ld	r25, Y
    3026:	c2 57       	subi	r28, 0x72	; 114
    3028:	d1 40       	sbci	r29, 0x01	; 1
    302a:	ce 58       	subi	r28, 0x8E	; 142
    302c:	de 4f       	sbci	r29, 0xFE	; 254
    302e:	88 81       	ld	r24, Y
    3030:	c2 57       	subi	r28, 0x72	; 114
    3032:	d1 40       	sbci	r29, 0x01	; 1
    3034:	f6 01       	movw	r30, r12
    3036:	b0 e1       	ldi	r27, 0x10	; 16
    3038:	2b 9f       	mul	r18, r27
    303a:	e0 0d       	add	r30, r0
    303c:	f1 1d       	adc	r31, r1
    303e:	11 24       	eor	r1, r1
    3040:	e9 0f       	add	r30, r25
    3042:	f1 1d       	adc	r31, r1
    3044:	d8 01       	movw	r26, r16
    3046:	a8 0f       	add	r26, r24
    3048:	b1 1d       	adc	r27, r1
    304a:	8c 91       	ld	r24, X
    304c:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    304e:	ce 58       	subi	r28, 0x8E	; 142
    3050:	de 4f       	sbci	r29, 0xFE	; 254
    3052:	88 81       	ld	r24, Y
    3054:	c2 57       	subi	r28, 0x72	; 114
    3056:	d1 40       	sbci	r29, 0x01	; 1
    3058:	8f 5f       	subi	r24, 0xFF	; 255
    305a:	ce 58       	subi	r28, 0x8E	; 142
    305c:	de 4f       	sbci	r29, 0xFE	; 254
    305e:	88 83       	st	Y, r24
    3060:	c2 57       	subi	r28, 0x72	; 114
    3062:	d1 40       	sbci	r29, 0x01	; 1
    3064:	ce 58       	subi	r28, 0x8E	; 142
    3066:	de 4f       	sbci	r29, 0xFE	; 254
    3068:	88 81       	ld	r24, Y
    306a:	c2 57       	subi	r28, 0x72	; 114
    306c:	d1 40       	sbci	r29, 0x01	; 1
    306e:	80 31       	cpi	r24, 0x10	; 16
    3070:	90 f2       	brcs	.-92     	; 0x3016 <generate_Random+0x61a>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3072:	cd 58       	subi	r28, 0x8D	; 141
    3074:	de 4f       	sbci	r29, 0xFE	; 254
    3076:	88 81       	ld	r24, Y
    3078:	c3 57       	subi	r28, 0x73	; 115
    307a:	d1 40       	sbci	r29, 0x01	; 1
    307c:	8f 5f       	subi	r24, 0xFF	; 255
    307e:	cd 58       	subi	r28, 0x8D	; 141
    3080:	de 4f       	sbci	r29, 0xFE	; 254
    3082:	88 83       	st	Y, r24
    3084:	c3 57       	subi	r28, 0x73	; 115
    3086:	d1 40       	sbci	r29, 0x01	; 1
    3088:	cd 58       	subi	r28, 0x8D	; 141
    308a:	de 4f       	sbci	r29, 0xFE	; 254
    308c:	88 81       	ld	r24, Y
    308e:	c3 57       	subi	r28, 0x73	; 115
    3090:	d1 40       	sbci	r29, 0x01	; 1
    3092:	83 30       	cpi	r24, 0x03	; 3
    3094:	08 f4       	brcc	.+2      	; 0x3098 <generate_Random+0x69c>
    3096:	a6 cf       	rjmp	.-180    	; 0x2fe4 <generate_Random+0x5e8>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
    3098:	cd 58       	subi	r28, 0x8D	; 141
    309a:	de 4f       	sbci	r29, 0xFE	; 254
    309c:	18 82       	st	Y, r1
    309e:	c3 57       	subi	r28, 0x73	; 115
    30a0:	d1 40       	sbci	r29, 0x01	; 1
    30a2:	cd 58       	subi	r28, 0x8D	; 141
    30a4:	de 4f       	sbci	r29, 0xFE	; 254
    30a6:	88 81       	ld	r24, Y
    30a8:	c3 57       	subi	r28, 0x73	; 115
    30aa:	d1 40       	sbci	r29, 0x01	; 1
    30ac:	88 32       	cpi	r24, 0x28	; 40
    30ae:	30 f5       	brcc	.+76     	; 0x30fc <generate_Random+0x700>
		{
			temp[cnt_i] ^= seed[cnt_i];
    30b0:	cd 58       	subi	r28, 0x8D	; 141
    30b2:	de 4f       	sbci	r29, 0xFE	; 254
    30b4:	88 81       	ld	r24, Y
    30b6:	c3 57       	subi	r28, 0x73	; 115
    30b8:	d1 40       	sbci	r29, 0x01	; 1
    30ba:	cd 58       	subi	r28, 0x8D	; 141
    30bc:	de 4f       	sbci	r29, 0xFE	; 254
    30be:	98 81       	ld	r25, Y
    30c0:	c3 57       	subi	r28, 0x73	; 115
    30c2:	d1 40       	sbci	r29, 0x01	; 1
    30c4:	f6 01       	movw	r30, r12
    30c6:	e9 0f       	add	r30, r25
    30c8:	f1 1d       	adc	r31, r1
    30ca:	d3 01       	movw	r26, r6
    30cc:	a8 0f       	add	r26, r24
    30ce:	b1 1d       	adc	r27, r1
    30d0:	9c 91       	ld	r25, X
    30d2:	80 81       	ld	r24, Z
    30d4:	89 27       	eor	r24, r25
    30d6:	80 83       	st	Z, r24
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
    30d8:	cd 58       	subi	r28, 0x8D	; 141
    30da:	de 4f       	sbci	r29, 0xFE	; 254
    30dc:	88 81       	ld	r24, Y
    30de:	c3 57       	subi	r28, 0x73	; 115
    30e0:	d1 40       	sbci	r29, 0x01	; 1
    30e2:	8f 5f       	subi	r24, 0xFF	; 255
    30e4:	cd 58       	subi	r28, 0x8D	; 141
    30e6:	de 4f       	sbci	r29, 0xFE	; 254
    30e8:	88 83       	st	Y, r24
    30ea:	c3 57       	subi	r28, 0x73	; 115
    30ec:	d1 40       	sbci	r29, 0x01	; 1
    30ee:	cd 58       	subi	r28, 0x8D	; 141
    30f0:	de 4f       	sbci	r29, 0xFE	; 254
    30f2:	88 81       	ld	r24, Y
    30f4:	c3 57       	subi	r28, 0x73	; 115
    30f6:	d1 40       	sbci	r29, 0x01	; 1
    30f8:	88 32       	cpi	r24, 0x28	; 40
    30fa:	d0 f2       	brcs	.-76     	; 0x30b0 <generate_Random+0x6b4>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    30fc:	cd 58       	subi	r28, 0x8D	; 141
    30fe:	de 4f       	sbci	r29, 0xFE	; 254
    3100:	18 82       	st	Y, r1
    3102:	c3 57       	subi	r28, 0x73	; 115
    3104:	d1 40       	sbci	r29, 0x01	; 1
    3106:	cd 58       	subi	r28, 0x8D	; 141
    3108:	de 4f       	sbci	r29, 0xFE	; 254
    310a:	88 81       	ld	r24, Y
    310c:	c3 57       	subi	r28, 0x73	; 115
    310e:	d1 40       	sbci	r29, 0x01	; 1
    3110:	88 31       	cpi	r24, 0x18	; 24
    3112:	08 f0       	brcs	.+2      	; 0x3116 <generate_Random+0x71a>
    3114:	b9 ce       	rjmp	.-654    	; 0x2e88 <generate_Random+0x48c>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    3116:	cd 58       	subi	r28, 0x8D	; 141
    3118:	de 4f       	sbci	r29, 0xFE	; 254
    311a:	98 81       	ld	r25, Y
    311c:	c3 57       	subi	r28, 0x73	; 115
    311e:	d1 40       	sbci	r29, 0x01	; 1
    3120:	cd 58       	subi	r28, 0x8D	; 141
    3122:	de 4f       	sbci	r29, 0xFE	; 254
    3124:	88 81       	ld	r24, Y
    3126:	c3 57       	subi	r28, 0x73	; 115
    3128:	d1 40       	sbci	r29, 0x01	; 1
    312a:	cd 58       	subi	r28, 0x8D	; 141
    312c:	de 4f       	sbci	r29, 0xFE	; 254
    312e:	28 81       	ld	r18, Y
    3130:	c3 57       	subi	r28, 0x73	; 115
    3132:	d1 40       	sbci	r29, 0x01	; 1
    3134:	b4 01       	movw	r22, r8
    3136:	69 0f       	add	r22, r25
    3138:	71 1d       	adc	r23, r1
    313a:	f6 01       	movw	r30, r12
    313c:	e8 0f       	add	r30, r24
    313e:	f1 1d       	adc	r31, r1
    3140:	d3 01       	movw	r26, r6
    3142:	a2 0f       	add	r26, r18
    3144:	b1 1d       	adc	r27, r1
    3146:	90 81       	ld	r25, Z
    3148:	8c 91       	ld	r24, X
    314a:	89 27       	eor	r24, r25
    314c:	db 01       	movw	r26, r22
    314e:	8c 93       	st	X, r24
		}
		for (cnt_i = 0; cnt_i < SEED_LEN; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < KEY_BIT / 8; cnt_i++)
    3150:	cd 58       	subi	r28, 0x8D	; 141
    3152:	de 4f       	sbci	r29, 0xFE	; 254
    3154:	88 81       	ld	r24, Y
    3156:	c3 57       	subi	r28, 0x73	; 115
    3158:	d1 40       	sbci	r29, 0x01	; 1
    315a:	8f 5f       	subi	r24, 0xFF	; 255
    315c:	cd 58       	subi	r28, 0x8D	; 141
    315e:	de 4f       	sbci	r29, 0xFE	; 254
    3160:	88 83       	st	Y, r24
    3162:	c3 57       	subi	r28, 0x73	; 115
    3164:	d1 40       	sbci	r29, 0x01	; 1
    3166:	cd 58       	subi	r28, 0x8D	; 141
    3168:	de 4f       	sbci	r29, 0xFE	; 254
    316a:	88 81       	ld	r24, Y
    316c:	c3 57       	subi	r28, 0x73	; 115
    316e:	d1 40       	sbci	r29, 0x01	; 1
    3170:	88 31       	cpi	r24, 0x18	; 24
    3172:	88 f2       	brcs	.-94     	; 0x3116 <generate_Random+0x71a>
    3174:	89 ce       	rjmp	.-750    	; 0x2e88 <generate_Random+0x48c>
		}
	}

	else
	{
		derived_function(a_data, seed, &(LEN->add_data_len));
    3176:	b3 01       	movw	r22, r6
    3178:	c1 01       	movw	r24, r2
    317a:	0e 94 80 10 	call	0x2100	; 0x2100 <derived_function>
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    317e:	cd 58       	subi	r28, 0x8D	; 141
    3180:	de 4f       	sbci	r29, 0xFE	; 254
    3182:	18 82       	st	Y, r1
    3184:	c3 57       	subi	r28, 0x73	; 115
    3186:	d1 40       	sbci	r29, 0x01	; 1
    3188:	cd 58       	subi	r28, 0x8D	; 141
    318a:	de 4f       	sbci	r29, 0xFE	; 254
    318c:	88 81       	ld	r24, Y
    318e:	c3 57       	subi	r28, 0x73	; 115
    3190:	d1 40       	sbci	r29, 0x01	; 1
    3192:	83 30       	cpi	r24, 0x03	; 3
    3194:	08 f0       	brcs	.+2      	; 0x3198 <generate_Random+0x79c>
    3196:	57 c0       	rjmp	.+174    	; 0x3246 <generate_Random+0x84a>
		{
			state->V[15]++;
    3198:	f4 01       	movw	r30, r8
    319a:	87 a1       	ldd	r24, Z+39	; 0x27
    319c:	8f 5f       	subi	r24, 0xFF	; 255
    319e:	87 a3       	std	Z+39, r24	; 0x27
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    31a0:	be 01       	movw	r22, r28
    31a2:	6f 5f       	subi	r22, 0xFF	; 255
    31a4:	7f 4f       	sbci	r23, 0xFF	; 255
    31a6:	c8 01       	movw	r24, r16
    31a8:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    31ac:	ce 58       	subi	r28, 0x8E	; 142
    31ae:	de 4f       	sbci	r29, 0xFE	; 254
    31b0:	18 82       	st	Y, r1
    31b2:	c2 57       	subi	r28, 0x72	; 114
    31b4:	d1 40       	sbci	r29, 0x01	; 1
    31b6:	ce 58       	subi	r28, 0x8E	; 142
    31b8:	de 4f       	sbci	r29, 0xFE	; 254
    31ba:	88 81       	ld	r24, Y
    31bc:	c2 57       	subi	r28, 0x72	; 114
    31be:	d1 40       	sbci	r29, 0x01	; 1
    31c0:	80 31       	cpi	r24, 0x10	; 16
    31c2:	70 f5       	brcc	.+92     	; 0x3220 <generate_Random+0x824>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
    31c4:	cd 58       	subi	r28, 0x8D	; 141
    31c6:	de 4f       	sbci	r29, 0xFE	; 254
    31c8:	28 81       	ld	r18, Y
    31ca:	c3 57       	subi	r28, 0x73	; 115
    31cc:	d1 40       	sbci	r29, 0x01	; 1
    31ce:	ce 58       	subi	r28, 0x8E	; 142
    31d0:	de 4f       	sbci	r29, 0xFE	; 254
    31d2:	98 81       	ld	r25, Y
    31d4:	c2 57       	subi	r28, 0x72	; 114
    31d6:	d1 40       	sbci	r29, 0x01	; 1
    31d8:	ce 58       	subi	r28, 0x8E	; 142
    31da:	de 4f       	sbci	r29, 0xFE	; 254
    31dc:	88 81       	ld	r24, Y
    31de:	c2 57       	subi	r28, 0x72	; 114
    31e0:	d1 40       	sbci	r29, 0x01	; 1
    31e2:	f5 01       	movw	r30, r10
    31e4:	30 e1       	ldi	r19, 0x10	; 16
    31e6:	23 9f       	mul	r18, r19
    31e8:	e0 0d       	add	r30, r0
    31ea:	f1 1d       	adc	r31, r1
    31ec:	11 24       	eor	r1, r1
    31ee:	e9 0f       	add	r30, r25
    31f0:	f1 1d       	adc	r31, r1
    31f2:	d8 01       	movw	r26, r16
    31f4:	a8 0f       	add	r26, r24
    31f6:	b1 1d       	adc	r27, r1
    31f8:	8c 91       	ld	r24, X
    31fa:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    31fc:	ce 58       	subi	r28, 0x8E	; 142
    31fe:	de 4f       	sbci	r29, 0xFE	; 254
    3200:	88 81       	ld	r24, Y
    3202:	c2 57       	subi	r28, 0x72	; 114
    3204:	d1 40       	sbci	r29, 0x01	; 1
    3206:	8f 5f       	subi	r24, 0xFF	; 255
    3208:	ce 58       	subi	r28, 0x8E	; 142
    320a:	de 4f       	sbci	r29, 0xFE	; 254
    320c:	88 83       	st	Y, r24
    320e:	c2 57       	subi	r28, 0x72	; 114
    3210:	d1 40       	sbci	r29, 0x01	; 1
    3212:	ce 58       	subi	r28, 0x8E	; 142
    3214:	de 4f       	sbci	r29, 0xFE	; 254
    3216:	88 81       	ld	r24, Y
    3218:	c2 57       	subi	r28, 0x72	; 114
    321a:	d1 40       	sbci	r29, 0x01	; 1
    321c:	80 31       	cpi	r24, 0x10	; 16
    321e:	90 f2       	brcs	.-92     	; 0x31c4 <generate_Random+0x7c8>
	}

	else
	{
		derived_function(a_data, seed, &(LEN->add_data_len));
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3220:	cd 58       	subi	r28, 0x8D	; 141
    3222:	de 4f       	sbci	r29, 0xFE	; 254
    3224:	88 81       	ld	r24, Y
    3226:	c3 57       	subi	r28, 0x73	; 115
    3228:	d1 40       	sbci	r29, 0x01	; 1
    322a:	8f 5f       	subi	r24, 0xFF	; 255
    322c:	cd 58       	subi	r28, 0x8D	; 141
    322e:	de 4f       	sbci	r29, 0xFE	; 254
    3230:	88 83       	st	Y, r24
    3232:	c3 57       	subi	r28, 0x73	; 115
    3234:	d1 40       	sbci	r29, 0x01	; 1
    3236:	cd 58       	subi	r28, 0x8D	; 141
    3238:	de 4f       	sbci	r29, 0xFE	; 254
    323a:	88 81       	ld	r24, Y
    323c:	c3 57       	subi	r28, 0x73	; 115
    323e:	d1 40       	sbci	r29, 0x01	; 1
    3240:	83 30       	cpi	r24, 0x03	; 3
    3242:	08 f4       	brcc	.+2      	; 0x3246 <generate_Random+0x84a>
    3244:	a9 cf       	rjmp	.-174    	; 0x3198 <generate_Random+0x79c>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}

		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3246:	cd 58       	subi	r28, 0x8D	; 141
    3248:	de 4f       	sbci	r29, 0xFE	; 254
    324a:	18 82       	st	Y, r1
    324c:	c3 57       	subi	r28, 0x73	; 115
    324e:	d1 40       	sbci	r29, 0x01	; 1
    3250:	cd 58       	subi	r28, 0x8D	; 141
    3252:	de 4f       	sbci	r29, 0xFE	; 254
    3254:	88 81       	ld	r24, Y
    3256:	c3 57       	subi	r28, 0x73	; 115
    3258:	d1 40       	sbci	r29, 0x01	; 1
    325a:	83 30       	cpi	r24, 0x03	; 3
    325c:	08 f0       	brcs	.+2      	; 0x3260 <generate_Random+0x864>
    325e:	5a c0       	rjmp	.+180    	; 0x3314 <generate_Random+0x918>
		{
			state->V[15]++;
    3260:	d4 01       	movw	r26, r8
    3262:	97 96       	adiw	r26, 0x27	; 39
    3264:	8c 91       	ld	r24, X
    3266:	97 97       	sbiw	r26, 0x27	; 39
    3268:	8f 5f       	subi	r24, 0xFF	; 255
    326a:	97 96       	adiw	r26, 0x27	; 39
    326c:	8c 93       	st	X, r24
#if KEY_BIT == 128
			aes128_enc_CBC_asm(result, &aes_test);
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
    326e:	be 01       	movw	r22, r28
    3270:	6f 5f       	subi	r22, 0xFF	; 255
    3272:	7f 4f       	sbci	r23, 0xFF	; 255
    3274:	c8 01       	movw	r24, r16
    3276:	0e 94 68 00 	call	0xd0	; 0xd0 <aes192_enc_CBC_asm>
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    327a:	ce 58       	subi	r28, 0x8E	; 142
    327c:	de 4f       	sbci	r29, 0xFE	; 254
    327e:	18 82       	st	Y, r1
    3280:	c2 57       	subi	r28, 0x72	; 114
    3282:	d1 40       	sbci	r29, 0x01	; 1
    3284:	ce 58       	subi	r28, 0x8E	; 142
    3286:	de 4f       	sbci	r29, 0xFE	; 254
    3288:	88 81       	ld	r24, Y
    328a:	c2 57       	subi	r28, 0x72	; 114
    328c:	d1 40       	sbci	r29, 0x01	; 1
    328e:	80 31       	cpi	r24, 0x10	; 16
    3290:	70 f5       	brcc	.+92     	; 0x32ee <generate_Random+0x8f2>
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
    3292:	cd 58       	subi	r28, 0x8D	; 141
    3294:	de 4f       	sbci	r29, 0xFE	; 254
    3296:	28 81       	ld	r18, Y
    3298:	c3 57       	subi	r28, 0x73	; 115
    329a:	d1 40       	sbci	r29, 0x01	; 1
    329c:	ce 58       	subi	r28, 0x8E	; 142
    329e:	de 4f       	sbci	r29, 0xFE	; 254
    32a0:	98 81       	ld	r25, Y
    32a2:	c2 57       	subi	r28, 0x72	; 114
    32a4:	d1 40       	sbci	r29, 0x01	; 1
    32a6:	ce 58       	subi	r28, 0x8E	; 142
    32a8:	de 4f       	sbci	r29, 0xFE	; 254
    32aa:	88 81       	ld	r24, Y
    32ac:	c2 57       	subi	r28, 0x72	; 114
    32ae:	d1 40       	sbci	r29, 0x01	; 1
    32b0:	f6 01       	movw	r30, r12
    32b2:	b0 e1       	ldi	r27, 0x10	; 16
    32b4:	2b 9f       	mul	r18, r27
    32b6:	e0 0d       	add	r30, r0
    32b8:	f1 1d       	adc	r31, r1
    32ba:	11 24       	eor	r1, r1
    32bc:	e9 0f       	add	r30, r25
    32be:	f1 1d       	adc	r31, r1
    32c0:	d8 01       	movw	r26, r16
    32c2:	a8 0f       	add	r26, r24
    32c4:	b1 1d       	adc	r27, r1
    32c6:	8c 91       	ld	r24, X
    32c8:	80 83       	st	Z, r24
#elif KEY_BIT == 192
			aes192_enc_CBC_asm(result, &aes_test);
#else //KEY_BIT ==256
			aes256_enc_CBC_asm(result, &aes_test);
#endif
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
    32ca:	ce 58       	subi	r28, 0x8E	; 142
    32cc:	de 4f       	sbci	r29, 0xFE	; 254
    32ce:	88 81       	ld	r24, Y
    32d0:	c2 57       	subi	r28, 0x72	; 114
    32d2:	d1 40       	sbci	r29, 0x01	; 1
    32d4:	8f 5f       	subi	r24, 0xFF	; 255
    32d6:	ce 58       	subi	r28, 0x8E	; 142
    32d8:	de 4f       	sbci	r29, 0xFE	; 254
    32da:	88 83       	st	Y, r24
    32dc:	c2 57       	subi	r28, 0x72	; 114
    32de:	d1 40       	sbci	r29, 0x01	; 1
    32e0:	ce 58       	subi	r28, 0x8E	; 142
    32e2:	de 4f       	sbci	r29, 0xFE	; 254
    32e4:	88 81       	ld	r24, Y
    32e6:	c2 57       	subi	r28, 0x72	; 114
    32e8:	d1 40       	sbci	r29, 0x01	; 1
    32ea:	80 31       	cpi	r24, 0x10	; 16
    32ec:	90 f2       	brcs	.-92     	; 0x3292 <generate_Random+0x896>
			{
				random[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}

		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    32ee:	cd 58       	subi	r28, 0x8D	; 141
    32f0:	de 4f       	sbci	r29, 0xFE	; 254
    32f2:	88 81       	ld	r24, Y
    32f4:	c3 57       	subi	r28, 0x73	; 115
    32f6:	d1 40       	sbci	r29, 0x01	; 1
    32f8:	8f 5f       	subi	r24, 0xFF	; 255
    32fa:	cd 58       	subi	r28, 0x8D	; 141
    32fc:	de 4f       	sbci	r29, 0xFE	; 254
    32fe:	88 83       	st	Y, r24
    3300:	c3 57       	subi	r28, 0x73	; 115
    3302:	d1 40       	sbci	r29, 0x01	; 1
    3304:	cd 58       	subi	r28, 0x8D	; 141
    3306:	de 4f       	sbci	r29, 0xFE	; 254
    3308:	88 81       	ld	r24, Y
    330a:	c3 57       	subi	r28, 0x73	; 115
    330c:	d1 40       	sbci	r29, 0x01	; 1
    330e:	83 30       	cpi	r24, 0x03	; 3
    3310:	08 f4       	brcc	.+2      	; 0x3314 <generate_Random+0x918>
    3312:	a6 cf       	rjmp	.-180    	; 0x3260 <generate_Random+0x864>
			for (cnt_j = 0; cnt_j < BLOCK_SIZE; cnt_j++)
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		cnt_j = KEY_BIT / 8;
    3314:	88 e1       	ldi	r24, 0x18	; 24
    3316:	ce 58       	subi	r28, 0x8E	; 142
    3318:	de 4f       	sbci	r29, 0xFE	; 254
    331a:	88 83       	st	Y, r24
    331c:	c2 57       	subi	r28, 0x72	; 114
    331e:	d1 40       	sbci	r29, 0x01	; 1
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3320:	cd 58       	subi	r28, 0x8D	; 141
    3322:	de 4f       	sbci	r29, 0xFE	; 254
    3324:	18 82       	st	Y, r1
    3326:	c3 57       	subi	r28, 0x73	; 115
    3328:	d1 40       	sbci	r29, 0x01	; 1
    332a:	cd 58       	subi	r28, 0x8D	; 141
    332c:	de 4f       	sbci	r29, 0xFE	; 254
    332e:	88 81       	ld	r24, Y
    3330:	c3 57       	subi	r28, 0x73	; 115
    3332:	d1 40       	sbci	r29, 0x01	; 1
    3334:	83 30       	cpi	r24, 0x03	; 3
    3336:	30 f5       	brcc	.+76     	; 0x3384 <generate_Random+0x988>
		{
			temp[cnt_i] ^= seed[cnt_i];
    3338:	cd 58       	subi	r28, 0x8D	; 141
    333a:	de 4f       	sbci	r29, 0xFE	; 254
    333c:	88 81       	ld	r24, Y
    333e:	c3 57       	subi	r28, 0x73	; 115
    3340:	d1 40       	sbci	r29, 0x01	; 1
    3342:	cd 58       	subi	r28, 0x8D	; 141
    3344:	de 4f       	sbci	r29, 0xFE	; 254
    3346:	98 81       	ld	r25, Y
    3348:	c3 57       	subi	r28, 0x73	; 115
    334a:	d1 40       	sbci	r29, 0x01	; 1
    334c:	f6 01       	movw	r30, r12
    334e:	e9 0f       	add	r30, r25
    3350:	f1 1d       	adc	r31, r1
    3352:	d3 01       	movw	r26, r6
    3354:	a8 0f       	add	r26, r24
    3356:	b1 1d       	adc	r27, r1
    3358:	9c 91       	ld	r25, X
    335a:	80 81       	ld	r24, Z
    335c:	89 27       	eor	r24, r25
    335e:	80 83       	st	Z, r24
			{
				temp[cnt_i * 16 + cnt_j] = result[cnt_j];
			}
		}
		cnt_j = KEY_BIT / 8;
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
    3360:	cd 58       	subi	r28, 0x8D	; 141
    3362:	de 4f       	sbci	r29, 0xFE	; 254
    3364:	88 81       	ld	r24, Y
    3366:	c3 57       	subi	r28, 0x73	; 115
    3368:	d1 40       	sbci	r29, 0x01	; 1
    336a:	8f 5f       	subi	r24, 0xFF	; 255
    336c:	cd 58       	subi	r28, 0x8D	; 141
    336e:	de 4f       	sbci	r29, 0xFE	; 254
    3370:	88 83       	st	Y, r24
    3372:	c3 57       	subi	r28, 0x73	; 115
    3374:	d1 40       	sbci	r29, 0x01	; 1
    3376:	cd 58       	subi	r28, 0x8D	; 141
    3378:	de 4f       	sbci	r29, 0xFE	; 254
    337a:	88 81       	ld	r24, Y
    337c:	c3 57       	subi	r28, 0x73	; 115
    337e:	d1 40       	sbci	r29, 0x01	; 1
    3380:	83 30       	cpi	r24, 0x03	; 3
    3382:	d0 f2       	brcs	.-76     	; 0x3338 <generate_Random+0x93c>
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
    3384:	cd 58       	subi	r28, 0x8D	; 141
    3386:	de 4f       	sbci	r29, 0xFE	; 254
    3388:	18 82       	st	Y, r1
    338a:	c3 57       	subi	r28, 0x73	; 115
    338c:	d1 40       	sbci	r29, 0x01	; 1
    338e:	cd 58       	subi	r28, 0x8D	; 141
    3390:	de 4f       	sbci	r29, 0xFE	; 254
    3392:	98 81       	ld	r25, Y
    3394:	c3 57       	subi	r28, 0x73	; 115
    3396:	d1 40       	sbci	r29, 0x01	; 1
    3398:	ce 58       	subi	r28, 0x8E	; 142
    339a:	de 4f       	sbci	r29, 0xFE	; 254
    339c:	88 81       	ld	r24, Y
    339e:	c2 57       	subi	r28, 0x72	; 114
    33a0:	d1 40       	sbci	r29, 0x01	; 1
    33a2:	98 17       	cp	r25, r24
    33a4:	a0 f5       	brcc	.+104    	; 0x340e <generate_Random+0xa12>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
    33a6:	cd 58       	subi	r28, 0x8D	; 141
    33a8:	de 4f       	sbci	r29, 0xFE	; 254
    33aa:	98 81       	ld	r25, Y
    33ac:	c3 57       	subi	r28, 0x73	; 115
    33ae:	d1 40       	sbci	r29, 0x01	; 1
    33b0:	cd 58       	subi	r28, 0x8D	; 141
    33b2:	de 4f       	sbci	r29, 0xFE	; 254
    33b4:	88 81       	ld	r24, Y
    33b6:	c3 57       	subi	r28, 0x73	; 115
    33b8:	d1 40       	sbci	r29, 0x01	; 1
    33ba:	cd 58       	subi	r28, 0x8D	; 141
    33bc:	de 4f       	sbci	r29, 0xFE	; 254
    33be:	28 81       	ld	r18, Y
    33c0:	c3 57       	subi	r28, 0x73	; 115
    33c2:	d1 40       	sbci	r29, 0x01	; 1
    33c4:	b4 01       	movw	r22, r8
    33c6:	69 0f       	add	r22, r25
    33c8:	71 1d       	adc	r23, r1
    33ca:	f6 01       	movw	r30, r12
    33cc:	e8 0f       	add	r30, r24
    33ce:	f1 1d       	adc	r31, r1
    33d0:	d3 01       	movw	r26, r6
    33d2:	a2 0f       	add	r26, r18
    33d4:	b1 1d       	adc	r27, r1
    33d6:	90 81       	ld	r25, Z
    33d8:	8c 91       	ld	r24, X
    33da:	89 27       	eor	r24, r25
    33dc:	db 01       	movw	r26, r22
    33de:	8c 93       	st	X, r24
		cnt_j = KEY_BIT / 8;
		for (cnt_i = 0; cnt_i < LEN_SEED; cnt_i++)
		{
			temp[cnt_i] ^= seed[cnt_i];
		}
		for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
    33e0:	cd 58       	subi	r28, 0x8D	; 141
    33e2:	de 4f       	sbci	r29, 0xFE	; 254
    33e4:	88 81       	ld	r24, Y
    33e6:	c3 57       	subi	r28, 0x73	; 115
    33e8:	d1 40       	sbci	r29, 0x01	; 1
    33ea:	8f 5f       	subi	r24, 0xFF	; 255
    33ec:	cd 58       	subi	r28, 0x8D	; 141
    33ee:	de 4f       	sbci	r29, 0xFE	; 254
    33f0:	88 83       	st	Y, r24
    33f2:	c3 57       	subi	r28, 0x73	; 115
    33f4:	d1 40       	sbci	r29, 0x01	; 1
    33f6:	cd 58       	subi	r28, 0x8D	; 141
    33f8:	de 4f       	sbci	r29, 0xFE	; 254
    33fa:	98 81       	ld	r25, Y
    33fc:	c3 57       	subi	r28, 0x73	; 115
    33fe:	d1 40       	sbci	r29, 0x01	; 1
    3400:	ce 58       	subi	r28, 0x8E	; 142
    3402:	de 4f       	sbci	r29, 0xFE	; 254
    3404:	88 81       	ld	r24, Y
    3406:	c2 57       	subi	r28, 0x72	; 114
    3408:	d1 40       	sbci	r29, 0x01	; 1
    340a:	98 17       	cp	r25, r24
    340c:	60 f2       	brcs	.-104    	; 0x33a6 <generate_Random+0x9aa>
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
		}
		cnt_j = LEN_SEED - cnt_j;
    340e:	ce 58       	subi	r28, 0x8E	; 142
    3410:	de 4f       	sbci	r29, 0xFE	; 254
    3412:	98 81       	ld	r25, Y
    3414:	c2 57       	subi	r28, 0x72	; 114
    3416:	d1 40       	sbci	r29, 0x01	; 1
    3418:	83 e0       	ldi	r24, 0x03	; 3
    341a:	89 1b       	sub	r24, r25
    341c:	ce 58       	subi	r28, 0x8E	; 142
    341e:	de 4f       	sbci	r29, 0xFE	; 254
    3420:	88 83       	st	Y, r24
    3422:	c2 57       	subi	r28, 0x72	; 114
    3424:	d1 40       	sbci	r29, 0x01	; 1
		for (cnt_i = 0; cnt_i< cnt_j; cnt_i++)
    3426:	cd 58       	subi	r28, 0x8D	; 141
    3428:	de 4f       	sbci	r29, 0xFE	; 254
    342a:	18 82       	st	Y, r1
    342c:	c3 57       	subi	r28, 0x73	; 115
    342e:	d1 40       	sbci	r29, 0x01	; 1
    3430:	cd 58       	subi	r28, 0x8D	; 141
    3432:	de 4f       	sbci	r29, 0xFE	; 254
    3434:	98 81       	ld	r25, Y
    3436:	c3 57       	subi	r28, 0x73	; 115
    3438:	d1 40       	sbci	r29, 0x01	; 1
    343a:	ce 58       	subi	r28, 0x8E	; 142
    343c:	de 4f       	sbci	r29, 0xFE	; 254
    343e:	88 81       	ld	r24, Y
    3440:	c2 57       	subi	r28, 0x72	; 114
    3442:	d1 40       	sbci	r29, 0x01	; 1
    3444:	98 17       	cp	r25, r24
    3446:	08 f0       	brcs	.+2      	; 0x344a <generate_Random+0xa4e>
    3448:	29 cd       	rjmp	.-1454   	; 0x2e9c <generate_Random+0x4a0>
		{
			state->V[cnt_i] = temp[16 + cnt_i] ^ seed[16 + cnt_i];
    344a:	cd 58       	subi	r28, 0x8D	; 141
    344c:	de 4f       	sbci	r29, 0xFE	; 254
    344e:	98 81       	ld	r25, Y
    3450:	c3 57       	subi	r28, 0x73	; 115
    3452:	d1 40       	sbci	r29, 0x01	; 1
    3454:	cd 58       	subi	r28, 0x8D	; 141
    3456:	de 4f       	sbci	r29, 0xFE	; 254
    3458:	88 81       	ld	r24, Y
    345a:	c3 57       	subi	r28, 0x73	; 115
    345c:	d1 40       	sbci	r29, 0x01	; 1
    345e:	cd 58       	subi	r28, 0x8D	; 141
    3460:	de 4f       	sbci	r29, 0xFE	; 254
    3462:	28 81       	ld	r18, Y
    3464:	c3 57       	subi	r28, 0x73	; 115
    3466:	d1 40       	sbci	r29, 0x01	; 1
    3468:	b4 01       	movw	r22, r8
    346a:	69 0f       	add	r22, r25
    346c:	71 1d       	adc	r23, r1
    346e:	f6 01       	movw	r30, r12
    3470:	e8 0f       	add	r30, r24
    3472:	f1 1d       	adc	r31, r1
    3474:	d3 01       	movw	r26, r6
    3476:	a2 0f       	add	r26, r18
    3478:	b1 1d       	adc	r27, r1
    347a:	90 89       	ldd	r25, Z+16	; 0x10
    347c:	50 96       	adiw	r26, 0x10	; 16
    347e:	8c 91       	ld	r24, X
    3480:	89 27       	eor	r24, r25
    3482:	db 01       	movw	r26, r22
    3484:	58 96       	adiw	r26, 0x18	; 24
    3486:	8c 93       	st	X, r24
		for (cnt_i = 0; cnt_i < cnt_j; cnt_i++)
		{
			state->key[cnt_i] = temp[cnt_i] ^ seed[cnt_i];
		}
		cnt_j = LEN_SEED - cnt_j;
		for (cnt_i = 0; cnt_i< cnt_j; cnt_i++)
    3488:	cd 58       	subi	r28, 0x8D	; 141
    348a:	de 4f       	sbci	r29, 0xFE	; 254
    348c:	88 81       	ld	r24, Y
    348e:	c3 57       	subi	r28, 0x73	; 115
    3490:	d1 40       	sbci	r29, 0x01	; 1
    3492:	8f 5f       	subi	r24, 0xFF	; 255
    3494:	cd 58       	subi	r28, 0x8D	; 141
    3496:	de 4f       	sbci	r29, 0xFE	; 254
    3498:	88 83       	st	Y, r24
    349a:	c3 57       	subi	r28, 0x73	; 115
    349c:	d1 40       	sbci	r29, 0x01	; 1
    349e:	cd 58       	subi	r28, 0x8D	; 141
    34a0:	de 4f       	sbci	r29, 0xFE	; 254
    34a2:	98 81       	ld	r25, Y
    34a4:	c3 57       	subi	r28, 0x73	; 115
    34a6:	d1 40       	sbci	r29, 0x01	; 1
    34a8:	ce 58       	subi	r28, 0x8E	; 142
    34aa:	de 4f       	sbci	r29, 0xFE	; 254
    34ac:	88 81       	ld	r24, Y
    34ae:	c2 57       	subi	r28, 0x72	; 114
    34b0:	d1 40       	sbci	r29, 0x01	; 1
    34b2:	98 17       	cp	r25, r24
    34b4:	50 f2       	brcs	.-108    	; 0x344a <generate_Random+0xa4e>
    34b6:	f2 cc       	rjmp	.-1564   	; 0x2e9c <generate_Random+0x4a0>

000034b8 <CTR_DRBG>:
	update(state, seed);
	free(input_data);
}

void CTR_DRBG(st_state *in_state, st_len *len, u8 *in, u8 *seed, u8 *random, u8 *re_add_data, u8 *re_Entrophy, u8 *add_data)
{
    34b8:	4f 92       	push	r4
    34ba:	5f 92       	push	r5
    34bc:	6f 92       	push	r6
    34be:	7f 92       	push	r7
    34c0:	8f 92       	push	r8
    34c2:	9f 92       	push	r9
    34c4:	af 92       	push	r10
    34c6:	bf 92       	push	r11
    34c8:	cf 92       	push	r12
    34ca:	df 92       	push	r13
    34cc:	ef 92       	push	r14
    34ce:	ff 92       	push	r15
    34d0:	0f 93       	push	r16
    34d2:	1f 93       	push	r17
    34d4:	cf 93       	push	r28
    34d6:	df 93       	push	r29
    34d8:	ec 01       	movw	r28, r24
    34da:	4b 01       	movw	r8, r22
    34dc:	ca 01       	movw	r24, r20
    34de:	39 01       	movw	r6, r18
    34e0:	28 01       	movw	r4, r16
    34e2:	87 01       	movw	r16, r14
	derived_function(in, seed, &len->input_len);
    34e4:	ab 01       	movw	r20, r22
    34e6:	4b 5f       	subi	r20, 0xFB	; 251
    34e8:	5f 4f       	sbci	r21, 0xFF	; 255
    34ea:	b9 01       	movw	r22, r18
    34ec:	0e 94 80 10 	call	0x2100	; 0x2100 <derived_function>
	update(in_state, seed);
    34f0:	b3 01       	movw	r22, r6
    34f2:	ce 01       	movw	r24, r28
    34f4:	bd d8       	rcall	.-3718   	; 0x2670 <update>
	generate_Random(in_state, random, add_data, re_Entrophy, re_add_data, len);
    34f6:	74 01       	movw	r14, r8
    34f8:	96 01       	movw	r18, r12
    34fa:	a5 01       	movw	r20, r10
    34fc:	b2 01       	movw	r22, r4
    34fe:	ce 01       	movw	r24, r28
    3500:	7d da       	rcall	.-2822   	; 0x29fc <generate_Random>
    3502:	df 91       	pop	r29
    3504:	cf 91       	pop	r28
    3506:	1f 91       	pop	r17
    3508:	0f 91       	pop	r16
    350a:	ff 90       	pop	r15
    350c:	ef 90       	pop	r14
    350e:	df 90       	pop	r13
    3510:	cf 90       	pop	r12
    3512:	bf 90       	pop	r11
    3514:	af 90       	pop	r10
    3516:	9f 90       	pop	r9
    3518:	8f 90       	pop	r8
    351a:	7f 90       	pop	r7
    351c:	6f 90       	pop	r6
    351e:	5f 90       	pop	r5
    3520:	4f 90       	pop	r4
    3522:	08 95       	ret

00003524 <main>:
 *  Author: 김영범
 */ 
#include "ctr_drbg.h"

int main(void)
{
    3524:	8f 92       	push	r8
    3526:	9f 92       	push	r9
    3528:	af 92       	push	r10
    352a:	bf 92       	push	r11
    352c:	cf 92       	push	r12
    352e:	df 92       	push	r13
    3530:	ef 92       	push	r14
    3532:	ff 92       	push	r15
    3534:	0f 93       	push	r16
    3536:	1f 93       	push	r17
    3538:	cf 93       	push	r28
    353a:	df 93       	push	r29
    353c:	cd b7       	in	r28, 0x3d	; 61
    353e:	de b7       	in	r29, 0x3e	; 62
    3540:	c8 58       	subi	r28, 0x88	; 136
    3542:	d1 09       	sbc	r29, r1
    3544:	0f b6       	in	r0, 0x3f	; 63
    3546:	f8 94       	cli
    3548:	de bf       	out	0x3e, r29	; 62
    354a:	0f be       	out	0x3f, r0	; 63
    354c:	cd bf       	out	0x3d, r28	; 61

	/* Replace with your application code */
	st_state INSTATE = {0x00};
    354e:	ce 01       	movw	r24, r28
    3550:	01 96       	adiw	r24, 0x01	; 1
    3552:	4c 01       	movw	r8, r24
    3554:	8a e2       	ldi	r24, 0x2A	; 42
    3556:	d4 01       	movw	r26, r8
    3558:	1d 92       	st	X+, r1
    355a:	8a 95       	dec	r24
    355c:	e9 f7       	brne	.-6      	; 0x3558 <main+0x34>
	st_state *in_state = &INSTATE;
	st_len st_LEN = {0x00};
    355e:	fe 01       	movw	r30, r28
    3560:	ed 57       	subi	r30, 0x7D	; 125
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	86 e0       	ldi	r24, 0x06	; 6
    3566:	df 01       	movw	r26, r30
    3568:	1d 92       	st	X+, r1
    356a:	8a 95       	dec	r24
    356c:	e9 f7       	brne	.-6      	; 0x3568 <main+0x44>
	st_len *len = &st_LEN;

	u8 in[16] = {0x00};
    356e:	ae 01       	movw	r20, r28
    3570:	4d 58       	subi	r20, 0x8D	; 141
    3572:	5f 4f       	sbci	r21, 0xFF	; 255
    3574:	90 e1       	ldi	r25, 0x10	; 16
    3576:	da 01       	movw	r26, r20
    3578:	89 2f       	mov	r24, r25
    357a:	1d 92       	st	X+, r1
    357c:	8a 95       	dec	r24
    357e:	e9 f7       	brne	.-6      	; 0x357a <main+0x56>
	u8 seed[SEED_LEN] = {0x00};
    3580:	9e 01       	movw	r18, r28
    3582:	25 5d       	subi	r18, 0xD5	; 213
    3584:	3f 4f       	sbci	r19, 0xFF	; 255
    3586:	88 e2       	ldi	r24, 0x28	; 40
    3588:	d9 01       	movw	r26, r18
    358a:	1d 92       	st	X+, r1
    358c:	8a 95       	dec	r24
    358e:	e9 f7       	brne	.-6      	; 0x358a <main+0x66>
	u8 *re_add_data = NULL;
	u8 *add_data = NULL;
	u8 random[16] = {0x00};
    3590:	8e 01       	movw	r16, r28
    3592:	0d 59       	subi	r16, 0x9D	; 157
    3594:	1f 4f       	sbci	r17, 0xFF	; 255
    3596:	d8 01       	movw	r26, r16
    3598:	89 2f       	mov	r24, r25
    359a:	1d 92       	st	X+, r1
    359c:	8a 95       	dec	r24
    359e:	e9 f7       	brne	.-6      	; 0x359a <main+0x76>
	u8 re_Entrophy[16] = {0x00};
    35a0:	6e 01       	movw	r12, r28
    35a2:	a3 e5       	ldi	r26, 0x53	; 83
    35a4:	ca 0e       	add	r12, r26
    35a6:	d1 1c       	adc	r13, r1
    35a8:	d6 01       	movw	r26, r12
    35aa:	89 2f       	mov	r24, r25
    35ac:	1d 92       	st	X+, r1
    35ae:	8a 95       	dec	r24
    35b0:	e9 f7       	brne	.-6      	; 0x35ac <main+0x88>

	in_state->prediction_flag = FALSE;
	len->add_data_len = 0;
	len->general_len = 16;
    35b2:	94 83       	std	Z+4, r25	; 0x04
	len->re_adddata = 16;
    35b4:	91 83       	std	Z+1, r25	; 0x01
	len->re_Entrophy = 16;
    35b6:	92 83       	std	Z+2, r25	; 0x02
	len->input_len = 16;
    35b8:	95 83       	std	Z+5, r25	; 0x05
aes192_ctx_t aes_test;
	#else //KEY_BIT ==256
aes256_ctx_t aes_test;
	#endif

	CTR_DRBG(in_state, len, in, seed, random, re_add_data, re_Entrophy, add_data);
    35ba:	a1 2c       	mov	r10, r1
    35bc:	b1 2c       	mov	r11, r1
    35be:	e1 2c       	mov	r14, r1
    35c0:	f1 2c       	mov	r15, r1
    35c2:	bf 01       	movw	r22, r30
    35c4:	c4 01       	movw	r24, r8
    35c6:	78 df       	rcall	.-272    	; 0x34b8 <CTR_DRBG>

	return 0;
}
    35c8:	80 e0       	ldi	r24, 0x00	; 0
    35ca:	90 e0       	ldi	r25, 0x00	; 0
    35cc:	c8 57       	subi	r28, 0x78	; 120
    35ce:	df 4f       	sbci	r29, 0xFF	; 255
    35d0:	0f b6       	in	r0, 0x3f	; 63
    35d2:	f8 94       	cli
    35d4:	de bf       	out	0x3e, r29	; 62
    35d6:	0f be       	out	0x3f, r0	; 63
    35d8:	cd bf       	out	0x3d, r28	; 61
    35da:	df 91       	pop	r29
    35dc:	cf 91       	pop	r28
    35de:	1f 91       	pop	r17
    35e0:	0f 91       	pop	r16
    35e2:	ff 90       	pop	r15
    35e4:	ef 90       	pop	r14
    35e6:	df 90       	pop	r13
    35e8:	cf 90       	pop	r12
    35ea:	bf 90       	pop	r11
    35ec:	af 90       	pop	r10
    35ee:	9f 90       	pop	r9
    35f0:	8f 90       	pop	r8
    35f2:	08 95       	ret

000035f4 <calloc>:
    35f4:	0f 93       	push	r16
    35f6:	1f 93       	push	r17
    35f8:	cf 93       	push	r28
    35fa:	df 93       	push	r29
    35fc:	86 9f       	mul	r24, r22
    35fe:	80 01       	movw	r16, r0
    3600:	87 9f       	mul	r24, r23
    3602:	10 0d       	add	r17, r0
    3604:	96 9f       	mul	r25, r22
    3606:	10 0d       	add	r17, r0
    3608:	11 24       	eor	r1, r1
    360a:	c8 01       	movw	r24, r16
    360c:	0d d0       	rcall	.+26     	; 0x3628 <malloc>
    360e:	ec 01       	movw	r28, r24
    3610:	00 97       	sbiw	r24, 0x00	; 0
    3612:	21 f0       	breq	.+8      	; 0x361c <calloc+0x28>
    3614:	a8 01       	movw	r20, r16
    3616:	60 e0       	ldi	r22, 0x00	; 0
    3618:	70 e0       	ldi	r23, 0x00	; 0
    361a:	27 d1       	rcall	.+590    	; 0x386a <memset>
    361c:	ce 01       	movw	r24, r28
    361e:	df 91       	pop	r29
    3620:	cf 91       	pop	r28
    3622:	1f 91       	pop	r17
    3624:	0f 91       	pop	r16
    3626:	08 95       	ret

00003628 <malloc>:
    3628:	0f 93       	push	r16
    362a:	1f 93       	push	r17
    362c:	cf 93       	push	r28
    362e:	df 93       	push	r29
    3630:	82 30       	cpi	r24, 0x02	; 2
    3632:	91 05       	cpc	r25, r1
    3634:	10 f4       	brcc	.+4      	; 0x363a <malloc+0x12>
    3636:	82 e0       	ldi	r24, 0x02	; 2
    3638:	90 e0       	ldi	r25, 0x00	; 0
    363a:	e0 91 18 03 	lds	r30, 0x0318	; 0x800318 <__flp>
    363e:	f0 91 19 03 	lds	r31, 0x0319	; 0x800319 <__flp+0x1>
    3642:	20 e0       	ldi	r18, 0x00	; 0
    3644:	30 e0       	ldi	r19, 0x00	; 0
    3646:	a0 e0       	ldi	r26, 0x00	; 0
    3648:	b0 e0       	ldi	r27, 0x00	; 0
    364a:	30 97       	sbiw	r30, 0x00	; 0
    364c:	19 f1       	breq	.+70     	; 0x3694 <malloc+0x6c>
    364e:	40 81       	ld	r20, Z
    3650:	51 81       	ldd	r21, Z+1	; 0x01
    3652:	02 81       	ldd	r16, Z+2	; 0x02
    3654:	13 81       	ldd	r17, Z+3	; 0x03
    3656:	48 17       	cp	r20, r24
    3658:	59 07       	cpc	r21, r25
    365a:	c8 f0       	brcs	.+50     	; 0x368e <malloc+0x66>
    365c:	84 17       	cp	r24, r20
    365e:	95 07       	cpc	r25, r21
    3660:	69 f4       	brne	.+26     	; 0x367c <malloc+0x54>
    3662:	10 97       	sbiw	r26, 0x00	; 0
    3664:	31 f0       	breq	.+12     	; 0x3672 <malloc+0x4a>
    3666:	12 96       	adiw	r26, 0x02	; 2
    3668:	0c 93       	st	X, r16
    366a:	12 97       	sbiw	r26, 0x02	; 2
    366c:	13 96       	adiw	r26, 0x03	; 3
    366e:	1c 93       	st	X, r17
    3670:	27 c0       	rjmp	.+78     	; 0x36c0 <malloc+0x98>
    3672:	00 93 18 03 	sts	0x0318, r16	; 0x800318 <__flp>
    3676:	10 93 19 03 	sts	0x0319, r17	; 0x800319 <__flp+0x1>
    367a:	22 c0       	rjmp	.+68     	; 0x36c0 <malloc+0x98>
    367c:	21 15       	cp	r18, r1
    367e:	31 05       	cpc	r19, r1
    3680:	19 f0       	breq	.+6      	; 0x3688 <malloc+0x60>
    3682:	42 17       	cp	r20, r18
    3684:	53 07       	cpc	r21, r19
    3686:	18 f4       	brcc	.+6      	; 0x368e <malloc+0x66>
    3688:	9a 01       	movw	r18, r20
    368a:	bd 01       	movw	r22, r26
    368c:	ef 01       	movw	r28, r30
    368e:	df 01       	movw	r26, r30
    3690:	f8 01       	movw	r30, r16
    3692:	db cf       	rjmp	.-74     	; 0x364a <malloc+0x22>
    3694:	21 15       	cp	r18, r1
    3696:	31 05       	cpc	r19, r1
    3698:	f9 f0       	breq	.+62     	; 0x36d8 <malloc+0xb0>
    369a:	28 1b       	sub	r18, r24
    369c:	39 0b       	sbc	r19, r25
    369e:	24 30       	cpi	r18, 0x04	; 4
    36a0:	31 05       	cpc	r19, r1
    36a2:	80 f4       	brcc	.+32     	; 0x36c4 <malloc+0x9c>
    36a4:	8a 81       	ldd	r24, Y+2	; 0x02
    36a6:	9b 81       	ldd	r25, Y+3	; 0x03
    36a8:	61 15       	cp	r22, r1
    36aa:	71 05       	cpc	r23, r1
    36ac:	21 f0       	breq	.+8      	; 0x36b6 <malloc+0x8e>
    36ae:	fb 01       	movw	r30, r22
    36b0:	93 83       	std	Z+3, r25	; 0x03
    36b2:	82 83       	std	Z+2, r24	; 0x02
    36b4:	04 c0       	rjmp	.+8      	; 0x36be <malloc+0x96>
    36b6:	90 93 19 03 	sts	0x0319, r25	; 0x800319 <__flp+0x1>
    36ba:	80 93 18 03 	sts	0x0318, r24	; 0x800318 <__flp>
    36be:	fe 01       	movw	r30, r28
    36c0:	32 96       	adiw	r30, 0x02	; 2
    36c2:	44 c0       	rjmp	.+136    	; 0x374c <malloc+0x124>
    36c4:	fe 01       	movw	r30, r28
    36c6:	e2 0f       	add	r30, r18
    36c8:	f3 1f       	adc	r31, r19
    36ca:	81 93       	st	Z+, r24
    36cc:	91 93       	st	Z+, r25
    36ce:	22 50       	subi	r18, 0x02	; 2
    36d0:	31 09       	sbc	r19, r1
    36d2:	39 83       	std	Y+1, r19	; 0x01
    36d4:	28 83       	st	Y, r18
    36d6:	3a c0       	rjmp	.+116    	; 0x374c <malloc+0x124>
    36d8:	20 91 16 03 	lds	r18, 0x0316	; 0x800316 <__data_end>
    36dc:	30 91 17 03 	lds	r19, 0x0317	; 0x800317 <__data_end+0x1>
    36e0:	23 2b       	or	r18, r19
    36e2:	41 f4       	brne	.+16     	; 0x36f4 <malloc+0xcc>
    36e4:	20 91 02 03 	lds	r18, 0x0302	; 0x800302 <__malloc_heap_start>
    36e8:	30 91 03 03 	lds	r19, 0x0303	; 0x800303 <__malloc_heap_start+0x1>
    36ec:	30 93 17 03 	sts	0x0317, r19	; 0x800317 <__data_end+0x1>
    36f0:	20 93 16 03 	sts	0x0316, r18	; 0x800316 <__data_end>
    36f4:	20 91 00 03 	lds	r18, 0x0300	; 0x800300 <__malloc_heap_end>
    36f8:	30 91 01 03 	lds	r19, 0x0301	; 0x800301 <__malloc_heap_end+0x1>
    36fc:	21 15       	cp	r18, r1
    36fe:	31 05       	cpc	r19, r1
    3700:	41 f4       	brne	.+16     	; 0x3712 <malloc+0xea>
    3702:	2d b7       	in	r18, 0x3d	; 61
    3704:	3e b7       	in	r19, 0x3e	; 62
    3706:	40 91 04 03 	lds	r20, 0x0304	; 0x800304 <__malloc_margin>
    370a:	50 91 05 03 	lds	r21, 0x0305	; 0x800305 <__malloc_margin+0x1>
    370e:	24 1b       	sub	r18, r20
    3710:	35 0b       	sbc	r19, r21
    3712:	e0 91 16 03 	lds	r30, 0x0316	; 0x800316 <__data_end>
    3716:	f0 91 17 03 	lds	r31, 0x0317	; 0x800317 <__data_end+0x1>
    371a:	e2 17       	cp	r30, r18
    371c:	f3 07       	cpc	r31, r19
    371e:	a0 f4       	brcc	.+40     	; 0x3748 <malloc+0x120>
    3720:	2e 1b       	sub	r18, r30
    3722:	3f 0b       	sbc	r19, r31
    3724:	28 17       	cp	r18, r24
    3726:	39 07       	cpc	r19, r25
    3728:	78 f0       	brcs	.+30     	; 0x3748 <malloc+0x120>
    372a:	ac 01       	movw	r20, r24
    372c:	4e 5f       	subi	r20, 0xFE	; 254
    372e:	5f 4f       	sbci	r21, 0xFF	; 255
    3730:	24 17       	cp	r18, r20
    3732:	35 07       	cpc	r19, r21
    3734:	48 f0       	brcs	.+18     	; 0x3748 <malloc+0x120>
    3736:	4e 0f       	add	r20, r30
    3738:	5f 1f       	adc	r21, r31
    373a:	50 93 17 03 	sts	0x0317, r21	; 0x800317 <__data_end+0x1>
    373e:	40 93 16 03 	sts	0x0316, r20	; 0x800316 <__data_end>
    3742:	81 93       	st	Z+, r24
    3744:	91 93       	st	Z+, r25
    3746:	02 c0       	rjmp	.+4      	; 0x374c <malloc+0x124>
    3748:	e0 e0       	ldi	r30, 0x00	; 0
    374a:	f0 e0       	ldi	r31, 0x00	; 0
    374c:	cf 01       	movw	r24, r30
    374e:	df 91       	pop	r29
    3750:	cf 91       	pop	r28
    3752:	1f 91       	pop	r17
    3754:	0f 91       	pop	r16
    3756:	08 95       	ret

00003758 <free>:
    3758:	cf 93       	push	r28
    375a:	df 93       	push	r29
    375c:	00 97       	sbiw	r24, 0x00	; 0
    375e:	09 f4       	brne	.+2      	; 0x3762 <free+0xa>
    3760:	81 c0       	rjmp	.+258    	; 0x3864 <free+0x10c>
    3762:	fc 01       	movw	r30, r24
    3764:	32 97       	sbiw	r30, 0x02	; 2
    3766:	13 82       	std	Z+3, r1	; 0x03
    3768:	12 82       	std	Z+2, r1	; 0x02
    376a:	a0 91 18 03 	lds	r26, 0x0318	; 0x800318 <__flp>
    376e:	b0 91 19 03 	lds	r27, 0x0319	; 0x800319 <__flp+0x1>
    3772:	10 97       	sbiw	r26, 0x00	; 0
    3774:	81 f4       	brne	.+32     	; 0x3796 <free+0x3e>
    3776:	20 81       	ld	r18, Z
    3778:	31 81       	ldd	r19, Z+1	; 0x01
    377a:	82 0f       	add	r24, r18
    377c:	93 1f       	adc	r25, r19
    377e:	20 91 16 03 	lds	r18, 0x0316	; 0x800316 <__data_end>
    3782:	30 91 17 03 	lds	r19, 0x0317	; 0x800317 <__data_end+0x1>
    3786:	28 17       	cp	r18, r24
    3788:	39 07       	cpc	r19, r25
    378a:	51 f5       	brne	.+84     	; 0x37e0 <free+0x88>
    378c:	f0 93 17 03 	sts	0x0317, r31	; 0x800317 <__data_end+0x1>
    3790:	e0 93 16 03 	sts	0x0316, r30	; 0x800316 <__data_end>
    3794:	67 c0       	rjmp	.+206    	; 0x3864 <free+0x10c>
    3796:	ed 01       	movw	r28, r26
    3798:	20 e0       	ldi	r18, 0x00	; 0
    379a:	30 e0       	ldi	r19, 0x00	; 0
    379c:	ce 17       	cp	r28, r30
    379e:	df 07       	cpc	r29, r31
    37a0:	40 f4       	brcc	.+16     	; 0x37b2 <free+0x5a>
    37a2:	4a 81       	ldd	r20, Y+2	; 0x02
    37a4:	5b 81       	ldd	r21, Y+3	; 0x03
    37a6:	9e 01       	movw	r18, r28
    37a8:	41 15       	cp	r20, r1
    37aa:	51 05       	cpc	r21, r1
    37ac:	f1 f0       	breq	.+60     	; 0x37ea <free+0x92>
    37ae:	ea 01       	movw	r28, r20
    37b0:	f5 cf       	rjmp	.-22     	; 0x379c <free+0x44>
    37b2:	d3 83       	std	Z+3, r29	; 0x03
    37b4:	c2 83       	std	Z+2, r28	; 0x02
    37b6:	40 81       	ld	r20, Z
    37b8:	51 81       	ldd	r21, Z+1	; 0x01
    37ba:	84 0f       	add	r24, r20
    37bc:	95 1f       	adc	r25, r21
    37be:	c8 17       	cp	r28, r24
    37c0:	d9 07       	cpc	r29, r25
    37c2:	59 f4       	brne	.+22     	; 0x37da <free+0x82>
    37c4:	88 81       	ld	r24, Y
    37c6:	99 81       	ldd	r25, Y+1	; 0x01
    37c8:	84 0f       	add	r24, r20
    37ca:	95 1f       	adc	r25, r21
    37cc:	02 96       	adiw	r24, 0x02	; 2
    37ce:	91 83       	std	Z+1, r25	; 0x01
    37d0:	80 83       	st	Z, r24
    37d2:	8a 81       	ldd	r24, Y+2	; 0x02
    37d4:	9b 81       	ldd	r25, Y+3	; 0x03
    37d6:	93 83       	std	Z+3, r25	; 0x03
    37d8:	82 83       	std	Z+2, r24	; 0x02
    37da:	21 15       	cp	r18, r1
    37dc:	31 05       	cpc	r19, r1
    37de:	29 f4       	brne	.+10     	; 0x37ea <free+0x92>
    37e0:	f0 93 19 03 	sts	0x0319, r31	; 0x800319 <__flp+0x1>
    37e4:	e0 93 18 03 	sts	0x0318, r30	; 0x800318 <__flp>
    37e8:	3d c0       	rjmp	.+122    	; 0x3864 <free+0x10c>
    37ea:	e9 01       	movw	r28, r18
    37ec:	fb 83       	std	Y+3, r31	; 0x03
    37ee:	ea 83       	std	Y+2, r30	; 0x02
    37f0:	49 91       	ld	r20, Y+
    37f2:	59 91       	ld	r21, Y+
    37f4:	c4 0f       	add	r28, r20
    37f6:	d5 1f       	adc	r29, r21
    37f8:	ec 17       	cp	r30, r28
    37fa:	fd 07       	cpc	r31, r29
    37fc:	61 f4       	brne	.+24     	; 0x3816 <free+0xbe>
    37fe:	80 81       	ld	r24, Z
    3800:	91 81       	ldd	r25, Z+1	; 0x01
    3802:	84 0f       	add	r24, r20
    3804:	95 1f       	adc	r25, r21
    3806:	02 96       	adiw	r24, 0x02	; 2
    3808:	e9 01       	movw	r28, r18
    380a:	99 83       	std	Y+1, r25	; 0x01
    380c:	88 83       	st	Y, r24
    380e:	82 81       	ldd	r24, Z+2	; 0x02
    3810:	93 81       	ldd	r25, Z+3	; 0x03
    3812:	9b 83       	std	Y+3, r25	; 0x03
    3814:	8a 83       	std	Y+2, r24	; 0x02
    3816:	e0 e0       	ldi	r30, 0x00	; 0
    3818:	f0 e0       	ldi	r31, 0x00	; 0
    381a:	12 96       	adiw	r26, 0x02	; 2
    381c:	8d 91       	ld	r24, X+
    381e:	9c 91       	ld	r25, X
    3820:	13 97       	sbiw	r26, 0x03	; 3
    3822:	00 97       	sbiw	r24, 0x00	; 0
    3824:	19 f0       	breq	.+6      	; 0x382c <free+0xd4>
    3826:	fd 01       	movw	r30, r26
    3828:	dc 01       	movw	r26, r24
    382a:	f7 cf       	rjmp	.-18     	; 0x381a <free+0xc2>
    382c:	8d 91       	ld	r24, X+
    382e:	9c 91       	ld	r25, X
    3830:	11 97       	sbiw	r26, 0x01	; 1
    3832:	9d 01       	movw	r18, r26
    3834:	2e 5f       	subi	r18, 0xFE	; 254
    3836:	3f 4f       	sbci	r19, 0xFF	; 255
    3838:	82 0f       	add	r24, r18
    383a:	93 1f       	adc	r25, r19
    383c:	20 91 16 03 	lds	r18, 0x0316	; 0x800316 <__data_end>
    3840:	30 91 17 03 	lds	r19, 0x0317	; 0x800317 <__data_end+0x1>
    3844:	28 17       	cp	r18, r24
    3846:	39 07       	cpc	r19, r25
    3848:	69 f4       	brne	.+26     	; 0x3864 <free+0x10c>
    384a:	30 97       	sbiw	r30, 0x00	; 0
    384c:	29 f4       	brne	.+10     	; 0x3858 <free+0x100>
    384e:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <__flp+0x1>
    3852:	10 92 18 03 	sts	0x0318, r1	; 0x800318 <__flp>
    3856:	02 c0       	rjmp	.+4      	; 0x385c <free+0x104>
    3858:	13 82       	std	Z+3, r1	; 0x03
    385a:	12 82       	std	Z+2, r1	; 0x02
    385c:	b0 93 17 03 	sts	0x0317, r27	; 0x800317 <__data_end+0x1>
    3860:	a0 93 16 03 	sts	0x0316, r26	; 0x800316 <__data_end>
    3864:	df 91       	pop	r29
    3866:	cf 91       	pop	r28
    3868:	08 95       	ret

0000386a <memset>:
    386a:	dc 01       	movw	r26, r24
    386c:	01 c0       	rjmp	.+2      	; 0x3870 <memset+0x6>
    386e:	6d 93       	st	X+, r22
    3870:	41 50       	subi	r20, 0x01	; 1
    3872:	50 40       	sbci	r21, 0x00	; 0
    3874:	e0 f7       	brcc	.-8      	; 0x386e <memset+0x4>
    3876:	08 95       	ret

00003878 <_exit>:
    3878:	f8 94       	cli

0000387a <__stop_program>:
    387a:	ff cf       	rjmp	.-2      	; 0x387a <__stop_program>
