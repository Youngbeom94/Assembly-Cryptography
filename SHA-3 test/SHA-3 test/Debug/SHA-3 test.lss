
SHA-3 test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  0000168a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000158a  00000000  00000000  00000100  2**8
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000168a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016bc  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  00001700  2**3
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000009ba  00000000  00000000  00001760  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000080c  00000000  00000000  0000211a  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000b94  00000000  00000000  00002926  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000004c  00000000  00000000  000034bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003dd  00000000  00000000  00003508  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000007c  00000000  00000000  000038e5  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00003961  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
       2:	00 00       	nop
       4:	4d c0       	rjmp	.+154    	; 0xa0 <__bad_interrupt>
       6:	00 00       	nop
       8:	4b c0       	rjmp	.+150    	; 0xa0 <__bad_interrupt>
       a:	00 00       	nop
       c:	49 c0       	rjmp	.+146    	; 0xa0 <__bad_interrupt>
       e:	00 00       	nop
      10:	47 c0       	rjmp	.+142    	; 0xa0 <__bad_interrupt>
      12:	00 00       	nop
      14:	45 c0       	rjmp	.+138    	; 0xa0 <__bad_interrupt>
      16:	00 00       	nop
      18:	43 c0       	rjmp	.+134    	; 0xa0 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	41 c0       	rjmp	.+130    	; 0xa0 <__bad_interrupt>
      1e:	00 00       	nop
      20:	3f c0       	rjmp	.+126    	; 0xa0 <__bad_interrupt>
      22:	00 00       	nop
      24:	3d c0       	rjmp	.+122    	; 0xa0 <__bad_interrupt>
      26:	00 00       	nop
      28:	3b c0       	rjmp	.+118    	; 0xa0 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	39 c0       	rjmp	.+114    	; 0xa0 <__bad_interrupt>
      2e:	00 00       	nop
      30:	37 c0       	rjmp	.+110    	; 0xa0 <__bad_interrupt>
      32:	00 00       	nop
      34:	35 c0       	rjmp	.+106    	; 0xa0 <__bad_interrupt>
      36:	00 00       	nop
      38:	33 c0       	rjmp	.+102    	; 0xa0 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	31 c0       	rjmp	.+98     	; 0xa0 <__bad_interrupt>
      3e:	00 00       	nop
      40:	2f c0       	rjmp	.+94     	; 0xa0 <__bad_interrupt>
      42:	00 00       	nop
      44:	2d c0       	rjmp	.+90     	; 0xa0 <__bad_interrupt>
      46:	00 00       	nop
      48:	2b c0       	rjmp	.+86     	; 0xa0 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	29 c0       	rjmp	.+82     	; 0xa0 <__bad_interrupt>
      4e:	00 00       	nop
      50:	27 c0       	rjmp	.+78     	; 0xa0 <__bad_interrupt>
      52:	00 00       	nop
      54:	25 c0       	rjmp	.+74     	; 0xa0 <__bad_interrupt>
      56:	00 00       	nop
      58:	23 c0       	rjmp	.+70     	; 0xa0 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	21 c0       	rjmp	.+66     	; 0xa0 <__bad_interrupt>
      5e:	00 00       	nop
      60:	1f c0       	rjmp	.+62     	; 0xa0 <__bad_interrupt>
      62:	00 00       	nop
      64:	1d c0       	rjmp	.+58     	; 0xa0 <__bad_interrupt>
      66:	00 00       	nop
      68:	1b c0       	rjmp	.+54     	; 0xa0 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	19 c0       	rjmp	.+50     	; 0xa0 <__bad_interrupt>
      6e:	00 00       	nop
      70:	17 c0       	rjmp	.+46     	; 0xa0 <__bad_interrupt>
      72:	00 00       	nop
      74:	15 c0       	rjmp	.+42     	; 0xa0 <__bad_interrupt>
      76:	00 00       	nop
      78:	13 c0       	rjmp	.+38     	; 0xa0 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	11 c0       	rjmp	.+34     	; 0xa0 <__bad_interrupt>
      7e:	00 00       	nop
      80:	0f c0       	rjmp	.+30     	; 0xa0 <__bad_interrupt>
      82:	00 00       	nop
      84:	0d c0       	rjmp	.+26     	; 0xa0 <__bad_interrupt>
      86:	00 00       	nop
      88:	0b c0       	rjmp	.+22     	; 0xa0 <__bad_interrupt>
	...

0000008c <__ctors_end>:
      8c:	11 24       	eor	r1, r1
      8e:	1f be       	out	0x3f, r1	; 63
      90:	cf ef       	ldi	r28, 0xFF	; 255
      92:	d0 e4       	ldi	r29, 0x40	; 64
      94:	de bf       	out	0x3e, r29	; 62
      96:	cd bf       	out	0x3d, r28	; 61
      98:	0e 94 80 0a 	call	0x1500	; 0x1500 <main>
      9c:	0c 94 c3 0a 	jmp	0x1586	; 0x1586 <_exit>

000000a0 <__bad_interrupt>:
      a0:	af cf       	rjmp	.-162    	; 0x0 <__vectors>

000000a2 <init>:
 *			  'state' <- r22:r23
 *			  'temp'  <- r20:r21
 */			  
 .global init
	init:
		push r17
      a2:	1f 93       	push	r17
		push r18
      a4:	2f 93       	push	r18
		push r0
      a6:	0f 92       	push	r0

		movw rZ,	r24
      a8:	fc 01       	movw	r30, r24
		movw rY,	r22
      aa:	eb 01       	movw	r28, r22
		movw rX,	r20
      ac:	da 01       	movw	r26, r20
		
		eor  r0,	r0		;r0 초기화
      ae:	00 24       	eor	r0, r0
		ldi  r17,	136		
      b0:	18 e8       	ldi	r17, 0x88	; 136
		add  rZ,	r17
      b2:	e1 0f       	add	r30, r17
		adc  r31,	r0
      b4:	f0 1d       	adc	r31, r0
	    ldi  r17,	2
      b6:	12 e0       	ldi	r17, 0x02	; 2

	1:
		ld	r18,	Z+
      b8:	21 91       	ld	r18, Z+
		st	Y+,		r18
      ba:	29 93       	st	Y+, r18
		st	Z+,		r0
      bc:	01 92       	st	Z+, r0
		dec	r17
      be:	1a 95       	dec	r17
		brne 1b
      c0:	d9 f7       	brne	.-10     	; 0xb8 <init+0x16>

		ldi r17,	0x06
      c2:	16 e0       	ldi	r17, 0x06	; 6
		st	Y+,		r17
      c4:	19 93       	st	Y+, r17
		ldi r17,	132
      c6:	14 e8       	ldi	r17, 0x84	; 132
		add	rY,		r17
      c8:	c1 0f       	add	r28, r17
		adc	r29,	r0
      ca:	d0 1d       	adc	r29, r0
		ldi r18,	0x80
      cc:	20 e8       	ldi	r18, 0x80	; 128
		st	Y,		r18
      ce:	28 83       	st	Y, r18

		pop r0
      d0:	0f 90       	pop	r0
		pop r18
      d2:	2f 91       	pop	r18
		pop r17
      d4:	1f 91       	pop	r17

		ret
      d6:	08 95       	ret
	...

00000100 <PHI_TABLE>:
	...

00000200 <RoundConstants_24>:
     200:	8b 80       	ldd	r8, Y+3	; 0x03
     202:	00 80       	ld	r0, Z
     204:	00 00       	nop
     206:	00 00       	nop
     208:	8b 00       	.word	0x008b	; ????
     20a:	00 00       	nop
     20c:	00 00       	nop
     20e:	00 80       	ld	r0, Z
     210:	89 80       	ldd	r8, Y+1	; 0x01
     212:	00 00       	nop
     214:	00 00       	nop
     216:	00 80       	ld	r0, Z
     218:	03 80       	ldd	r0, Z+3	; 0x03
     21a:	00 00       	nop
     21c:	00 00       	nop
     21e:	00 80       	ld	r0, Z
     220:	02 80       	ldd	r0, Z+2	; 0x02
     222:	00 00       	nop
     224:	00 00       	nop
     226:	00 80       	ld	r0, Z
     228:	80 00       	.word	0x0080	; ????
     22a:	00 00       	nop
     22c:	00 00       	nop
     22e:	00 80       	ld	r0, Z
     230:	0a 80       	ldd	r0, Y+2	; 0x02
     232:	00 00       	nop
     234:	00 00       	nop
     236:	00 00       	nop
     238:	0a 00       	.word	0x000a	; ????
     23a:	00 80       	ld	r0, Z
     23c:	00 00       	nop
     23e:	00 80       	ld	r0, Z
     240:	81 80       	ldd	r8, Z+1	; 0x01
     242:	00 80       	ld	r0, Z
     244:	00 00       	nop
     246:	00 80       	ld	r0, Z
     248:	80 80       	ld	r8, Z
     24a:	00 00       	nop
     24c:	00 00       	nop
     24e:	00 80       	ld	r0, Z
     250:	01 00       	.word	0x0001	; ????
     252:	00 80       	ld	r0, Z
     254:	00 00       	nop
     256:	00 00       	nop
     258:	08 80       	ld	r0, Y
     25a:	00 80       	ld	r0, Z
     25c:	00 00       	nop
     25e:	00 80       	ld	r0, Z
     260:	01 00       	.word	0x0001	; ????
     262:	00 00       	nop
     264:	00 00       	nop
     266:	00 00       	nop
     268:	82 80       	ldd	r8, Z+2	; 0x02
     26a:	00 00       	nop
     26c:	00 00       	nop
     26e:	00 00       	nop
     270:	8a 80       	ldd	r8, Y+2	; 0x02
     272:	00 00       	nop
     274:	00 00       	nop
     276:	00 80       	ld	r0, Z
     278:	00 80       	ld	r0, Z
     27a:	00 80       	ld	r0, Z
     27c:	00 00       	nop
     27e:	00 80       	ld	r0, Z
     280:	8b 80       	ldd	r8, Y+3	; 0x03
     282:	00 00       	nop
     284:	00 00       	nop
     286:	00 00       	nop
     288:	01 00       	.word	0x0001	; ????
     28a:	00 80       	ld	r0, Z
     28c:	00 00       	nop
     28e:	00 00       	nop
     290:	81 80       	ldd	r8, Z+1	; 0x01
     292:	00 80       	ld	r0, Z
     294:	00 00       	nop
     296:	00 80       	ld	r0, Z
     298:	09 80       	ldd	r0, Y+1	; 0x01
     29a:	00 00       	nop
     29c:	00 00       	nop
     29e:	00 80       	ld	r0, Z
     2a0:	8a 00       	.word	0x008a	; ????
     2a2:	00 00       	nop
     2a4:	00 00       	nop
     2a6:	00 00       	nop
     2a8:	88 00       	.word	0x0088	; ????
     2aa:	00 00       	nop
     2ac:	00 00       	nop
     2ae:	00 00       	nop
     2b0:	09 80       	ldd	r0, Y+1	; 0x01
     2b2:	00 80       	ld	r0, Z
     2b4:	00 00       	nop
     2b6:	00 00       	nop
     2b8:	0a 00       	.word	0x000a	; ????
     2ba:	00 80       	ld	r0, Z
     2bc:	00 00       	nop
	...

000002c0 <keccack>:
#define rY       28
#define rZ       30

.global keccack
keccack:
		push_range 0, 31
     2c0:	0f 92       	push	r0
     2c2:	1f 92       	push	r1
     2c4:	2f 92       	push	r2
     2c6:	3f 92       	push	r3
     2c8:	4f 92       	push	r4
     2ca:	5f 92       	push	r5
     2cc:	6f 92       	push	r6
     2ce:	7f 92       	push	r7
     2d0:	8f 92       	push	r8
     2d2:	9f 92       	push	r9
     2d4:	af 92       	push	r10
     2d6:	bf 92       	push	r11
     2d8:	cf 92       	push	r12
     2da:	df 92       	push	r13
     2dc:	ef 92       	push	r14
     2de:	ff 92       	push	r15
     2e0:	0f 93       	push	r16
     2e2:	1f 93       	push	r17
     2e4:	2f 93       	push	r18
     2e6:	3f 93       	push	r19
     2e8:	4f 93       	push	r20
     2ea:	5f 93       	push	r21
     2ec:	6f 93       	push	r22
     2ee:	7f 93       	push	r23
     2f0:	8f 93       	push	r24
     2f2:	9f 93       	push	r25
     2f4:	af 93       	push	r26
     2f6:	bf 93       	push	r27
     2f8:	cf 93       	push	r28
     2fa:	df 93       	push	r29
     2fc:	ef 93       	push	r30
     2fe:	ff 93       	push	r31
		push r23
     300:	7f 93       	push	r23
		push r22;  state --> stack
     302:	6f 93       	push	r22

		movw 		rX,	r24 ; in   --> X
     304:	dc 01       	movw	r26, r24
		movw 		rY,	r20 ; temp --> Y
     306:	ea 01       	movw	r28, r20
		ldi			count,		24
     308:	88 e1       	ldi	r24, 0x18	; 24
		mov 		main_count,		 count
     30a:	78 2e       	mov	r7, r24

		ldi		r31,	hi8(RoundConstants_24)
     30c:	f2 e0       	ldi	r31, 0x02	; 2
		ldi		r30,	lo8(RoundConstants_24)
     30e:	e0 e0       	ldi	r30, 0x00	; 0
		push		r30
     310:	ef 93       	push	r30
		push		r31
     312:	ff 93       	push	r31

		movw		therz,	rZ
     314:	1f 01       	movw	r2, r30
		eor		zero,	zero
     316:	11 24       	eor	r1, r1

00000318 <start>:

start:
		ldi		count2,	5		;//main count:o : count:x, count2:o, count3:x
     318:	95 e0       	ldi	r25, 0x05	; 5
		movw		rZ,	therz
     31a:	f1 01       	movw	r30, r2
		movw		therx,	X
     31c:	2d 01       	movw	r4, r26

		ldi		count,	160		;//main count:o : count:160, count2:5, count3:32
     31e:	80 ea       	ldi	r24, 0xA0	; 160

00000320 <Theta_init_Loop>:


Theta_init_Loop:

		load_from_temp_to_X	; state[x]
     320:	0d 91       	ld	r16, X+
     322:	1d 91       	ld	r17, X+
     324:	2d 91       	ld	r18, X+
     326:	3d 91       	ld	r19, X+
     328:	4d 91       	ld	r20, X+
     32a:	5d 91       	ld	r21, X+
     32c:	6d 91       	ld	r22, X+
     32e:	7d 91       	ld	r23, X+

		theta_initial_help	; state[x+5]
     330:	90 96       	adiw	r26, 0x20	; 32
     332:	b1 1d       	adc	r27, r1
     334:	0d 90       	ld	r0, X+
     336:	00 25       	eor	r16, r0
     338:	0d 90       	ld	r0, X+
     33a:	10 25       	eor	r17, r0
     33c:	0d 90       	ld	r0, X+
     33e:	20 25       	eor	r18, r0
     340:	0d 90       	ld	r0, X+
     342:	30 25       	eor	r19, r0
     344:	0d 90       	ld	r0, X+
     346:	40 25       	eor	r20, r0
     348:	0d 90       	ld	r0, X+
     34a:	50 25       	eor	r21, r0
     34c:	0d 90       	ld	r0, X+
     34e:	60 25       	eor	r22, r0
     350:	0d 90       	ld	r0, X+
     352:	70 25       	eor	r23, r0
		theta_initial_help	; state[x+10]
     354:	90 96       	adiw	r26, 0x20	; 32
     356:	b1 1d       	adc	r27, r1
     358:	0d 90       	ld	r0, X+
     35a:	00 25       	eor	r16, r0
     35c:	0d 90       	ld	r0, X+
     35e:	10 25       	eor	r17, r0
     360:	0d 90       	ld	r0, X+
     362:	20 25       	eor	r18, r0
     364:	0d 90       	ld	r0, X+
     366:	30 25       	eor	r19, r0
     368:	0d 90       	ld	r0, X+
     36a:	40 25       	eor	r20, r0
     36c:	0d 90       	ld	r0, X+
     36e:	50 25       	eor	r21, r0
     370:	0d 90       	ld	r0, X+
     372:	60 25       	eor	r22, r0
     374:	0d 90       	ld	r0, X+
     376:	70 25       	eor	r23, r0
		theta_initial_help	; state[x+15]
     378:	90 96       	adiw	r26, 0x20	; 32
     37a:	b1 1d       	adc	r27, r1
     37c:	0d 90       	ld	r0, X+
     37e:	00 25       	eor	r16, r0
     380:	0d 90       	ld	r0, X+
     382:	10 25       	eor	r17, r0
     384:	0d 90       	ld	r0, X+
     386:	20 25       	eor	r18, r0
     388:	0d 90       	ld	r0, X+
     38a:	30 25       	eor	r19, r0
     38c:	0d 90       	ld	r0, X+
     38e:	40 25       	eor	r20, r0
     390:	0d 90       	ld	r0, X+
     392:	50 25       	eor	r21, r0
     394:	0d 90       	ld	r0, X+
     396:	60 25       	eor	r22, r0
     398:	0d 90       	ld	r0, X+
     39a:	70 25       	eor	r23, r0
		theta_initial_help	; state[x+20]
     39c:	90 96       	adiw	r26, 0x20	; 32
     39e:	b1 1d       	adc	r27, r1
     3a0:	0d 90       	ld	r0, X+
     3a2:	00 25       	eor	r16, r0
     3a4:	0d 90       	ld	r0, X+
     3a6:	10 25       	eor	r17, r0
     3a8:	0d 90       	ld	r0, X+
     3aa:	20 25       	eor	r18, r0
     3ac:	0d 90       	ld	r0, X+
     3ae:	30 25       	eor	r19, r0
     3b0:	0d 90       	ld	r0, X+
     3b2:	40 25       	eor	r20, r0
     3b4:	0d 90       	ld	r0, X+
     3b6:	50 25       	eor	r21, r0
     3b8:	0d 90       	ld	r0, X+
     3ba:	60 25       	eor	r22, r0
     3bc:	0d 90       	ld	r0, X+
     3be:	70 25       	eor	r23, r0

		store_from_Y_to_temp
     3c0:	09 93       	st	Y+, r16
     3c2:	19 93       	st	Y+, r17
     3c4:	29 93       	st	Y+, r18
     3c6:	39 93       	st	Y+, r19
     3c8:	49 93       	st	Y+, r20
     3ca:	59 93       	st	Y+, r21
     3cc:	69 93       	st	Y+, r22
     3ce:	79 93       	st	Y+, r23
		sub		rX,		count
     3d0:	a8 1b       	sub	r26, r24
		sbc		rX+1,	zero	;//main count:o : count:160, count2:5, count3:32
     3d2:	b1 09       	sbc	r27, r1
		dec		count2
     3d4:	9a 95       	dec	r25
		breq		END_Theta
     3d6:	09 f0       	breq	.+2      	; 0x3da <END_Theta>
		rjmp		Theta_init_Loop		
     3d8:	a3 cf       	rjmp	.-186    	; 0x320 <Theta_init_Loop>

000003da <END_Theta>:

END_Theta:						;//main count:o : count:x, count2:x, count3:x			
		sbiw		rY,	 40
     3da:	a8 97       	sbiw	r28, 0x28	; 40
		sbc			rY+1,	zero
     3dc:	d1 09       	sbc	r29, r1
		movw		X,	 therx ; X inital 
     3de:	d2 01       	movw	r26, r4

000003e0 <Theta_update_1>:

Theta_update_1:					;//main count:o : count:o, count2:x, count3:x

			ld       	rTemp0, Y   ;0 저장
     3e0:	08 81       	ld	r16, Y
    		ldd      	rTemp1, Y+1
     3e2:	19 81       	ldd	r17, Y+1	; 0x01
    		ldd      	rTemp2, Y+2
     3e4:	2a 81       	ldd	r18, Y+2	; 0x02
    		ldd      	rTemp3, Y+3
     3e6:	3b 81       	ldd	r19, Y+3	; 0x03
    		ldd      	rTemp4, Y+4
     3e8:	4c 81       	ldd	r20, Y+4	; 0x04
    		ldd     	rTemp5, Y+5
     3ea:	5d 81       	ldd	r21, Y+5	; 0x05
    		ldd      	rTemp6, Y+6
     3ec:	6e 81       	ldd	r22, Y+6	; 0x06
    		ldd      	rTemp7, Y+7
     3ee:	7f 81       	ldd	r23, Y+7	; 0x07

			ldd      	rState0, Y+16   ; 2저장
     3f0:	88 88       	ldd	r8, Y+16	; 0x10
    		ldd      	rState1, Y+17
     3f2:	99 88       	ldd	r9, Y+17	; 0x11
    		ldd      	rState2, Y+18
     3f4:	aa 88       	ldd	r10, Y+18	; 0x12
    		ldd      	rState3, Y+19
     3f6:	bb 88       	ldd	r11, Y+19	; 0x13
    		ldd      	rState4, Y+20
     3f8:	cc 88       	ldd	r12, Y+20	; 0x14
    		ldd      	rState5, Y+21
     3fa:	dd 88       	ldd	r13, Y+21	; 0x15
    		ldd     	rState6, Y+22
     3fc:	ee 88       	ldd	r14, Y+22	; 0x16
    		ldd      	rState7, Y+23
     3fe:	ff 88       	ldd	r15, Y+23	; 0x17

		initial_theta_rotate_state ;2 -rotate
     400:	88 0c       	add	r8, r8
     402:	99 1c       	adc	r9, r9
     404:	aa 1c       	adc	r10, r10
     406:	bb 1c       	adc	r11, r11
     408:	cc 1c       	adc	r12, r12
     40a:	dd 1c       	adc	r13, r13
     40c:	ee 1c       	adc	r14, r14
     40e:	ff 1c       	adc	r15, r15
     410:	81 1c       	adc	r8, r1
		initial_theta_eor_form_temp_to_state;저장값 1 만들기
     412:	80 26       	eor	r8, r16
     414:	91 26       	eor	r9, r17
     416:	a2 26       	eor	r10, r18
     418:	b3 26       	eor	r11, r19
     41a:	c4 26       	eor	r12, r20
     41c:	d5 26       	eor	r13, r21
     41e:	e6 26       	eor	r14, r22
     420:	f7 26       	eor	r15, r23
	
		ldi		count,	48
     422:	80 e3       	ldi	r24, 0x30	; 48
		add		rY,		count
     424:	c8 0f       	add	r28, r24
		adc		rY+1,	zero
     426:	d1 1d       	adc	r29, r1
		store_from_Y_to_state	;-------------------------------------------------02 ->1
     428:	89 92       	st	Y+, r8
     42a:	99 92       	st	Y+, r9
     42c:	a9 92       	st	Y+, r10
     42e:	b9 92       	st	Y+, r11
     430:	c9 92       	st	Y+, r12
     432:	d9 92       	st	Y+, r13
     434:	e9 92       	st	Y+, r14
     436:	f9 92       	st	Y+, r15
		sub		rY,	count
     438:	c8 1b       	sub	r28, r24
		sbc		rY+1,zero
     43a:	d1 09       	sbc	r29, r1
		sbiw		Y,	8
     43c:	28 97       	sbiw	r28, 0x08	; 8
		sbc		rY+1,zero
     43e:	d1 09       	sbc	r29, r1

00000440 <Theta_update_2>:


Theta_update_2:
							 ;rTemp <-- 0저장
		ldd      	rState0, Y+24   ; 3저장
     440:	88 8c       	ldd	r8, Y+24	; 0x18
		ldd      	rState1, Y+25
     442:	99 8c       	ldd	r9, Y+25	; 0x19
		ldd      	rState2, Y+26
     444:	aa 8c       	ldd	r10, Y+26	; 0x1a
		ldd      	rState3, Y+27
     446:	bb 8c       	ldd	r11, Y+27	; 0x1b
		ldd      	rState4, Y+28
     448:	cc 8c       	ldd	r12, Y+28	; 0x1c
		ldd      	rState5, Y+29
     44a:	dd 8c       	ldd	r13, Y+29	; 0x1d
		ldd      	rState6, Y+30
     44c:	ee 8c       	ldd	r14, Y+30	; 0x1e
		ldd      	rState7, Y+31
     44e:	ff 8c       	ldd	r15, Y+31	; 0x1f

		initial_theta_rotate_temp ;0 -rotate
     450:	00 0f       	add	r16, r16
     452:	11 1f       	adc	r17, r17
     454:	22 1f       	adc	r18, r18
     456:	33 1f       	adc	r19, r19
     458:	44 1f       	adc	r20, r20
     45a:	55 1f       	adc	r21, r21
     45c:	66 1f       	adc	r22, r22
     45e:	77 1f       	adc	r23, r23
     460:	01 1d       	adc	r16, r1
		initial_theta_eor_form_state_to_temp;저장값 4 만들기
     462:	08 25       	eor	r16, r8
     464:	19 25       	eor	r17, r9
     466:	2a 25       	eor	r18, r10
     468:	3b 25       	eor	r19, r11
     46a:	4c 25       	eor	r20, r12
     46c:	5d 25       	eor	r21, r13
     46e:	6e 25       	eor	r22, r14
     470:	7f 25       	eor	r23, r15

	
		ldi		count,	72
     472:	88 e4       	ldi	r24, 0x48	; 72
		add		rY,	count
     474:	c8 0f       	add	r28, r24
		adc		rY+1,	zero
     476:	d1 1d       	adc	r29, r1
		store_from_Y_to_temp	;-------------------------------------------------30 ->4
     478:	09 93       	st	Y+, r16
     47a:	19 93       	st	Y+, r17
     47c:	29 93       	st	Y+, r18
     47e:	39 93       	st	Y+, r19
     480:	49 93       	st	Y+, r20
     482:	59 93       	st	Y+, r21
     484:	69 93       	st	Y+, r22
     486:	79 93       	st	Y+, r23
		sub		rY,	count
     488:	c8 1b       	sub	r28, r24
		sbc		rY+1,zero
     48a:	d1 09       	sbc	r29, r1
		sbiw		Y,	8
     48c:	28 97       	sbiw	r28, 0x08	; 8
		sbc		rY+1,zero
     48e:	d1 09       	sbc	r29, r1

00000490 <Theta_update_3>:

Theta_update_3:
						  ; rstate 3 저장
		ldd      	rTemp0, Y+8  ;1 저장
     490:	08 85       	ldd	r16, Y+8	; 0x08
		ldd      	rTemp1, Y+9
     492:	19 85       	ldd	r17, Y+9	; 0x09
		ldd      	rTemp2, Y+10
     494:	2a 85       	ldd	r18, Y+10	; 0x0a
		ldd      	rTemp3, Y+11
     496:	3b 85       	ldd	r19, Y+11	; 0x0b
		ldd      	rTemp4, Y+12
     498:	4c 85       	ldd	r20, Y+12	; 0x0c
		ldd      	rTemp5, Y+13
     49a:	5d 85       	ldd	r21, Y+13	; 0x0d
		ldd      	rTemp6, Y+14
     49c:	6e 85       	ldd	r22, Y+14	; 0x0e
		ldd      	rTemp7, Y+15
     49e:	7f 85       	ldd	r23, Y+15	; 0x0f

		initial_theta_rotate_state ; 3-rotate
     4a0:	88 0c       	add	r8, r8
     4a2:	99 1c       	adc	r9, r9
     4a4:	aa 1c       	adc	r10, r10
     4a6:	bb 1c       	adc	r11, r11
     4a8:	cc 1c       	adc	r12, r12
     4aa:	dd 1c       	adc	r13, r13
     4ac:	ee 1c       	adc	r14, r14
     4ae:	ff 1c       	adc	r15, r15
     4b0:	81 1c       	adc	r8, r1
		initial_theta_eor_form_temp_to_state;저장값 2 만들기
     4b2:	80 26       	eor	r8, r16
     4b4:	91 26       	eor	r9, r17
     4b6:	a2 26       	eor	r10, r18
     4b8:	b3 26       	eor	r11, r19
     4ba:	c4 26       	eor	r12, r20
     4bc:	d5 26       	eor	r13, r21
     4be:	e6 26       	eor	r14, r22
     4c0:	f7 26       	eor	r15, r23

		ldi		count,	56
     4c2:	88 e3       	ldi	r24, 0x38	; 56
		add		rY,	count
     4c4:	c8 0f       	add	r28, r24
		adc		rY+1,	zero
     4c6:	d1 1d       	adc	r29, r1
		store_from_Y_to_state;-------------------------------------------------13 ->2
     4c8:	89 92       	st	Y+, r8
     4ca:	99 92       	st	Y+, r9
     4cc:	a9 92       	st	Y+, r10
     4ce:	b9 92       	st	Y+, r11
     4d0:	c9 92       	st	Y+, r12
     4d2:	d9 92       	st	Y+, r13
     4d4:	e9 92       	st	Y+, r14
     4d6:	f9 92       	st	Y+, r15
		sub		rY,		count
     4d8:	c8 1b       	sub	r28, r24
		sbc		rY+1,zero
     4da:	d1 09       	sbc	r29, r1
		sbiw		Y,	8
     4dc:	28 97       	sbiw	r28, 0x08	; 8
		sbc		rY+1,zero
     4de:	d1 09       	sbc	r29, r1

000004e0 <Theta_update_4>:

Theta_update_4:
						;rTemp <-- 1저장	 
		ldd      	rState0, Y+32   ; 4저장
     4e0:	88 a0       	ldd	r8, Y+32	; 0x20
    		ldd      	rState1, Y+33
     4e2:	99 a0       	ldd	r9, Y+33	; 0x21
    		ldd      	rState2, Y+34
     4e4:	aa a0       	ldd	r10, Y+34	; 0x22
    		ldd      	rState3, Y+35
     4e6:	bb a0       	ldd	r11, Y+35	; 0x23
    		ldd      	rState4, Y+36
     4e8:	cc a0       	ldd	r12, Y+36	; 0x24
    		ldd      	rState5, Y+37
     4ea:	dd a0       	ldd	r13, Y+37	; 0x25
    		ldd      	rState6, Y+38
     4ec:	ee a0       	ldd	r14, Y+38	; 0x26
    		ldd      	rState7, Y+39
     4ee:	ff a0       	ldd	r15, Y+39	; 0x27

		initial_theta_rotate_temp ;0 -rotate
     4f0:	00 0f       	add	r16, r16
     4f2:	11 1f       	adc	r17, r17
     4f4:	22 1f       	adc	r18, r18
     4f6:	33 1f       	adc	r19, r19
     4f8:	44 1f       	adc	r20, r20
     4fa:	55 1f       	adc	r21, r21
     4fc:	66 1f       	adc	r22, r22
     4fe:	77 1f       	adc	r23, r23
     500:	01 1d       	adc	r16, r1
		initial_theta_eor_form_state_to_temp;저장값 0 만들기
     502:	08 25       	eor	r16, r8
     504:	19 25       	eor	r17, r9
     506:	2a 25       	eor	r18, r10
     508:	3b 25       	eor	r19, r11
     50a:	4c 25       	eor	r20, r12
     50c:	5d 25       	eor	r21, r13
     50e:	6e 25       	eor	r22, r14
     510:	7f 25       	eor	r23, r15

		ldi		count,	40
     512:	88 e2       	ldi	r24, 0x28	; 40
		add		rY,	count
     514:	c8 0f       	add	r28, r24
		adc		rY+1,	zero
     516:	d1 1d       	adc	r29, r1
		store_from_Y_to_temp	;-------------------------------------------------31 ->0
     518:	09 93       	st	Y+, r16
     51a:	19 93       	st	Y+, r17
     51c:	29 93       	st	Y+, r18
     51e:	39 93       	st	Y+, r19
     520:	49 93       	st	Y+, r20
     522:	59 93       	st	Y+, r21
     524:	69 93       	st	Y+, r22
     526:	79 93       	st	Y+, r23
		sub		rY,	count
     528:	c8 1b       	sub	r28, r24
		sbc		rY+1,zero
     52a:	d1 09       	sbc	r29, r1
		sbiw		Y,	8
     52c:	28 97       	sbiw	r28, 0x08	; 8
		sbc		rY+1,zero		;Y 저장값에 주소 fix
     52e:	d1 09       	sbc	r29, r1

00000530 <Theta_update_5>:


Theta_update_5:
						  ; rstate 4 저장
			ldd      	rTemp0, Y+16  ;2 저장
     530:	08 89       	ldd	r16, Y+16	; 0x10
    		ldd      	rTemp1, Y+17
     532:	19 89       	ldd	r17, Y+17	; 0x11
    		ldd      	rTemp2, Y+18
     534:	2a 89       	ldd	r18, Y+18	; 0x12
    		ldd      	rTemp3, Y+19
     536:	3b 89       	ldd	r19, Y+19	; 0x13
    		ldd      	rTemp4, Y+20
     538:	4c 89       	ldd	r20, Y+20	; 0x14
    		ldd      	rTemp5, Y+21
     53a:	5d 89       	ldd	r21, Y+21	; 0x15
    		ldd      	rTemp6, Y+22
     53c:	6e 89       	ldd	r22, Y+22	; 0x16
    		ldd      	rTemp7, Y+23
     53e:	7f 89       	ldd	r23, Y+23	; 0x17

		initial_theta_rotate_state ; 4-rotate
     540:	88 0c       	add	r8, r8
     542:	99 1c       	adc	r9, r9
     544:	aa 1c       	adc	r10, r10
     546:	bb 1c       	adc	r11, r11
     548:	cc 1c       	adc	r12, r12
     54a:	dd 1c       	adc	r13, r13
     54c:	ee 1c       	adc	r14, r14
     54e:	ff 1c       	adc	r15, r15
     550:	81 1c       	adc	r8, r1
		initial_theta_eor_form_temp_to_state;저장값 3 만들기
     552:	80 26       	eor	r8, r16
     554:	91 26       	eor	r9, r17
     556:	a2 26       	eor	r10, r18
     558:	b3 26       	eor	r11, r19
     55a:	c4 26       	eor	r12, r20
     55c:	d5 26       	eor	r13, r21
     55e:	e6 26       	eor	r14, r22
     560:	f7 26       	eor	r15, r23
					
		ldi		count,	64
     562:	80 e4       	ldi	r24, 0x40	; 64
		add		rY,	count
     564:	c8 0f       	add	r28, r24
		adc		rY+1,	zero
     566:	d1 1d       	adc	r29, r1
		store_from_Y_to_state;-------------------------------------------------24 ->3
     568:	89 92       	st	Y+, r8
     56a:	99 92       	st	Y+, r9
     56c:	a9 92       	st	Y+, r10
     56e:	b9 92       	st	Y+, r11
     570:	c9 92       	st	Y+, r12
     572:	d9 92       	st	Y+, r13
     574:	e9 92       	st	Y+, r14
     576:	f9 92       	st	Y+, r15
		sbiw	Y,	32
     578:	a0 97       	sbiw	r28, 0x20	; 32
		sbc		rY+1,zero	
     57a:	d1 09       	sbc	r29, r1

		ldi		count,	8	;//main count:o : ld:count:x, ld:count2:x, count3:8
     57c:	88 e0       	ldi	r24, 0x08	; 8
		mov		count3,	count
     57e:	68 2e       	mov	r6, r24

00000580 <Thetha_Rho_loop>:
		

Thetha_Rho_loop:
		
		eor		count,		count
     580:	88 27       	eor	r24, r24
		eor		count2,		count2
     582:	99 27       	eor	r25, r25
		first_load_state; s[0]
     584:	a8 0f       	add	r26, r24
     586:	b1 1d       	adc	r27, r1
     588:	8d 90       	ld	r8, X+
     58a:	9d 90       	ld	r9, X+
     58c:	ad 90       	ld	r10, X+
     58e:	bd 90       	ld	r11, X+
     590:	cd 90       	ld	r12, X+
     592:	dd 90       	ld	r13, X+
     594:	ed 90       	ld	r14, X+
     596:	fd 90       	ld	r15, X+
     598:	87 0d       	add	r24, r7
     59a:	a8 1b       	sub	r26, r24
     59c:	b1 09       	sbc	r27, r1
     59e:	c9 0f       	add	r28, r25
     5a0:	d1 1d       	adc	r29, r1
     5a2:	09 90       	ld	r0, Y+
     5a4:	80 24       	eor	r8, r0
     5a6:	09 90       	ld	r0, Y+
     5a8:	90 24       	eor	r9, r0
     5aa:	09 90       	ld	r0, Y+
     5ac:	a0 24       	eor	r10, r0
     5ae:	09 90       	ld	r0, Y+
     5b0:	b0 24       	eor	r11, r0
     5b2:	09 90       	ld	r0, Y+
     5b4:	c0 24       	eor	r12, r0
     5b6:	09 90       	ld	r0, Y+
     5b8:	d0 24       	eor	r13, r0
     5ba:	09 90       	ld	r0, Y+
     5bc:	e0 24       	eor	r14, r0
     5be:	09 90       	ld	r0, Y+
     5c0:	f0 24       	eor	r15, r0
     5c2:	97 0d       	add	r25, r7
     5c4:	c9 1b       	sub	r28, r25
     5c6:	d1 09       	sbc	r29, r1
		//no rotate
		ldi		count,		32 ; s[0] ->s[4]
     5c8:	80 e2       	ldi	r24, 0x20	; 32
		ldi		count2,		32 ; 4번째 Temp
     5ca:	90 e2       	ldi	r25, 0x20	; 32
		first_load_temp; s[4]
     5cc:	a8 0f       	add	r26, r24
     5ce:	b1 1d       	adc	r27, r1
     5d0:	0d 91       	ld	r16, X+
     5d2:	1d 91       	ld	r17, X+
     5d4:	2d 91       	ld	r18, X+
     5d6:	3d 91       	ld	r19, X+
     5d8:	4d 91       	ld	r20, X+
     5da:	5d 91       	ld	r21, X+
     5dc:	6d 91       	ld	r22, X+
     5de:	7d 91       	ld	r23, X+
     5e0:	87 0d       	add	r24, r7
     5e2:	a8 1b       	sub	r26, r24
     5e4:	b1 09       	sbc	r27, r1
     5e6:	c9 0f       	add	r28, r25
     5e8:	d1 1d       	adc	r29, r1
     5ea:	09 90       	ld	r0, Y+
     5ec:	00 25       	eor	r16, r0
     5ee:	09 90       	ld	r0, Y+
     5f0:	10 25       	eor	r17, r0
     5f2:	09 90       	ld	r0, Y+
     5f4:	20 25       	eor	r18, r0
     5f6:	09 90       	ld	r0, Y+
     5f8:	30 25       	eor	r19, r0
     5fa:	09 90       	ld	r0, Y+
     5fc:	40 25       	eor	r20, r0
     5fe:	09 90       	ld	r0, Y+
     600:	50 25       	eor	r21, r0
     602:	09 90       	ld	r0, Y+
     604:	60 25       	eor	r22, r0
     606:	09 90       	ld	r0, Y+
     608:	70 25       	eor	r23, r0
     60a:	97 0d       	add	r25, r7
     60c:	c9 1b       	sub	r28, r25
     60e:	d1 09       	sbc	r29, r1
		ldi		count,		32 ; s[0] ->s[4]
     610:	80 e2       	ldi	r24, 0x20	; 32
		rotate64_1byte_right_state ; s[0] ->s[4] clear
     612:	a8 0f       	add	r26, r24
     614:	b1 1d       	adc	r27, r1
     616:	fd 92       	st	X+, r15
     618:	8d 92       	st	X+, r8
     61a:	9d 92       	st	X+, r9
     61c:	ad 92       	st	X+, r10
     61e:	bd 92       	st	X+, r11
     620:	cd 92       	st	X+, r12
     622:	dd 92       	st	X+, r13
     624:	ed 92       	st	X+, r14
     626:	87 0d       	add	r24, r7
     628:	a8 1b       	sub	r26, r24
     62a:	b1 09       	sbc	r27, r1

		rotate64_1bit_right_temp
     62c:	00 fb       	bst	r16, 0
     62e:	77 95       	ror	r23
     630:	67 95       	ror	r22
     632:	57 95       	ror	r21
     634:	47 95       	ror	r20
     636:	37 95       	ror	r19
     638:	27 95       	ror	r18
     63a:	17 95       	ror	r17
     63c:	07 95       	ror	r16
     63e:	77 f9       	bld	r23, 7
		ldi		count,		72; s[4]->s[9]
     640:	88 e4       	ldi	r24, 0x48	; 72
		ldi		count2,		32;
     642:	90 e2       	ldi	r25, 0x20	; 32
		first_load_state;	s[9]
     644:	a8 0f       	add	r26, r24
     646:	b1 1d       	adc	r27, r1
     648:	8d 90       	ld	r8, X+
     64a:	9d 90       	ld	r9, X+
     64c:	ad 90       	ld	r10, X+
     64e:	bd 90       	ld	r11, X+
     650:	cd 90       	ld	r12, X+
     652:	dd 90       	ld	r13, X+
     654:	ed 90       	ld	r14, X+
     656:	fd 90       	ld	r15, X+
     658:	87 0d       	add	r24, r7
     65a:	a8 1b       	sub	r26, r24
     65c:	b1 09       	sbc	r27, r1
     65e:	c9 0f       	add	r28, r25
     660:	d1 1d       	adc	r29, r1
     662:	09 90       	ld	r0, Y+
     664:	80 24       	eor	r8, r0
     666:	09 90       	ld	r0, Y+
     668:	90 24       	eor	r9, r0
     66a:	09 90       	ld	r0, Y+
     66c:	a0 24       	eor	r10, r0
     66e:	09 90       	ld	r0, Y+
     670:	b0 24       	eor	r11, r0
     672:	09 90       	ld	r0, Y+
     674:	c0 24       	eor	r12, r0
     676:	09 90       	ld	r0, Y+
     678:	d0 24       	eor	r13, r0
     67a:	09 90       	ld	r0, Y+
     67c:	e0 24       	eor	r14, r0
     67e:	09 90       	ld	r0, Y+
     680:	f0 24       	eor	r15, r0
     682:	97 0d       	add	r25, r7
     684:	c9 1b       	sub	r28, r25
     686:	d1 09       	sbc	r29, r1
		ldi		count,		72; s[4]->s[9]
     688:	88 e4       	ldi	r24, 0x48	; 72
		rotate64_3byte_right_temp ; s[4] ->s[9] clear
     68a:	a8 0f       	add	r26, r24
     68c:	b1 1d       	adc	r27, r1
     68e:	5d 93       	st	X+, r21
     690:	6d 93       	st	X+, r22
     692:	7d 93       	st	X+, r23
     694:	0d 93       	st	X+, r16
     696:	1d 93       	st	X+, r17
     698:	2d 93       	st	X+, r18
     69a:	3d 93       	st	X+, r19
     69c:	4d 93       	st	X+, r20
     69e:	87 0d       	add	r24, r7
     6a0:	a8 1b       	sub	r26, r24
     6a2:	b1 09       	sbc	r27, r1

		rotate64_3bit_right_state 
     6a4:	80 fa       	bst	r8, 0
     6a6:	f7 94       	ror	r15
     6a8:	e7 94       	ror	r14
     6aa:	d7 94       	ror	r13
     6ac:	c7 94       	ror	r12
     6ae:	b7 94       	ror	r11
     6b0:	a7 94       	ror	r10
     6b2:	97 94       	ror	r9
     6b4:	87 94       	ror	r8
     6b6:	f7 f8       	bld	r15, 7
     6b8:	80 fa       	bst	r8, 0
     6ba:	f7 94       	ror	r15
     6bc:	e7 94       	ror	r14
     6be:	d7 94       	ror	r13
     6c0:	c7 94       	ror	r12
     6c2:	b7 94       	ror	r11
     6c4:	a7 94       	ror	r10
     6c6:	97 94       	ror	r9
     6c8:	87 94       	ror	r8
     6ca:	f7 f8       	bld	r15, 7
     6cc:	80 fa       	bst	r8, 0
     6ce:	f7 94       	ror	r15
     6d0:	e7 94       	ror	r14
     6d2:	d7 94       	ror	r13
     6d4:	c7 94       	ror	r12
     6d6:	b7 94       	ror	r11
     6d8:	a7 94       	ror	r10
     6da:	97 94       	ror	r9
     6dc:	87 94       	ror	r8
     6de:	f7 f8       	bld	r15, 7
		ldi		count,		24; s[9]->s[3]
     6e0:	88 e1       	ldi	r24, 0x18	; 24
		ldi		count2,		24;
     6e2:	98 e1       	ldi	r25, 0x18	; 24
		first_load_temp;	s[3]
     6e4:	a8 0f       	add	r26, r24
     6e6:	b1 1d       	adc	r27, r1
     6e8:	0d 91       	ld	r16, X+
     6ea:	1d 91       	ld	r17, X+
     6ec:	2d 91       	ld	r18, X+
     6ee:	3d 91       	ld	r19, X+
     6f0:	4d 91       	ld	r20, X+
     6f2:	5d 91       	ld	r21, X+
     6f4:	6d 91       	ld	r22, X+
     6f6:	7d 91       	ld	r23, X+
     6f8:	87 0d       	add	r24, r7
     6fa:	a8 1b       	sub	r26, r24
     6fc:	b1 09       	sbc	r27, r1
     6fe:	c9 0f       	add	r28, r25
     700:	d1 1d       	adc	r29, r1
     702:	09 90       	ld	r0, Y+
     704:	00 25       	eor	r16, r0
     706:	09 90       	ld	r0, Y+
     708:	10 25       	eor	r17, r0
     70a:	09 90       	ld	r0, Y+
     70c:	20 25       	eor	r18, r0
     70e:	09 90       	ld	r0, Y+
     710:	30 25       	eor	r19, r0
     712:	09 90       	ld	r0, Y+
     714:	40 25       	eor	r20, r0
     716:	09 90       	ld	r0, Y+
     718:	50 25       	eor	r21, r0
     71a:	09 90       	ld	r0, Y+
     71c:	60 25       	eor	r22, r0
     71e:	09 90       	ld	r0, Y+
     720:	70 25       	eor	r23, r0
     722:	97 0d       	add	r25, r7
     724:	c9 1b       	sub	r28, r25
     726:	d1 09       	sbc	r29, r1
		ldi		count,		24; s[9]->s[3]
     728:	88 e1       	ldi	r24, 0x18	; 24
		rotate64_5byte_right_state ; s[9] ->s[3] clear
     72a:	a8 0f       	add	r26, r24
     72c:	b1 1d       	adc	r27, r1
     72e:	bd 92       	st	X+, r11
     730:	cd 92       	st	X+, r12
     732:	dd 92       	st	X+, r13
     734:	ed 92       	st	X+, r14
     736:	fd 92       	st	X+, r15
     738:	8d 92       	st	X+, r8
     73a:	9d 92       	st	X+, r9
     73c:	ad 92       	st	X+, r10
     73e:	87 0d       	add	r24, r7
     740:	a8 1b       	sub	r26, r24
     742:	b1 09       	sbc	r27, r1

		rotate64_2bit_left_temp
     744:	00 0f       	add	r16, r16
     746:	11 1f       	adc	r17, r17
     748:	22 1f       	adc	r18, r18
     74a:	33 1f       	adc	r19, r19
     74c:	44 1f       	adc	r20, r20
     74e:	55 1f       	adc	r21, r21
     750:	66 1f       	adc	r22, r22
     752:	77 1f       	adc	r23, r23
     754:	01 1d       	adc	r16, r1
     756:	00 0f       	add	r16, r16
     758:	11 1f       	adc	r17, r17
     75a:	22 1f       	adc	r18, r18
     75c:	33 1f       	adc	r19, r19
     75e:	44 1f       	adc	r20, r20
     760:	55 1f       	adc	r21, r21
     762:	66 1f       	adc	r22, r22
     764:	77 1f       	adc	r23, r23
     766:	01 1d       	adc	r16, r1
		ldi		count,		192; s[3]->s[24]
     768:	80 ec       	ldi	r24, 0xC0	; 192
		ldi		count2,		32;
     76a:	90 e2       	ldi	r25, 0x20	; 32
		first_load_state;	s[24]
     76c:	a8 0f       	add	r26, r24
     76e:	b1 1d       	adc	r27, r1
     770:	8d 90       	ld	r8, X+
     772:	9d 90       	ld	r9, X+
     774:	ad 90       	ld	r10, X+
     776:	bd 90       	ld	r11, X+
     778:	cd 90       	ld	r12, X+
     77a:	dd 90       	ld	r13, X+
     77c:	ed 90       	ld	r14, X+
     77e:	fd 90       	ld	r15, X+
     780:	87 0d       	add	r24, r7
     782:	a8 1b       	sub	r26, r24
     784:	b1 09       	sbc	r27, r1
     786:	c9 0f       	add	r28, r25
     788:	d1 1d       	adc	r29, r1
     78a:	09 90       	ld	r0, Y+
     78c:	80 24       	eor	r8, r0
     78e:	09 90       	ld	r0, Y+
     790:	90 24       	eor	r9, r0
     792:	09 90       	ld	r0, Y+
     794:	a0 24       	eor	r10, r0
     796:	09 90       	ld	r0, Y+
     798:	b0 24       	eor	r11, r0
     79a:	09 90       	ld	r0, Y+
     79c:	c0 24       	eor	r12, r0
     79e:	09 90       	ld	r0, Y+
     7a0:	d0 24       	eor	r13, r0
     7a2:	09 90       	ld	r0, Y+
     7a4:	e0 24       	eor	r14, r0
     7a6:	09 90       	ld	r0, Y+
     7a8:	f0 24       	eor	r15, r0
     7aa:	97 0d       	add	r25, r7
     7ac:	c9 1b       	sub	r28, r25
     7ae:	d1 09       	sbc	r29, r1
		ldi		count,		192; s[3]->s[24]
     7b0:	80 ec       	ldi	r24, 0xC0	; 192
		rotate64_0byte_right_temp ; s[3] ->s[24] clear
     7b2:	a8 0f       	add	r26, r24
     7b4:	b1 1d       	adc	r27, r1
     7b6:	0d 93       	st	X+, r16
     7b8:	1d 93       	st	X+, r17
     7ba:	2d 93       	st	X+, r18
     7bc:	3d 93       	st	X+, r19
     7be:	4d 93       	st	X+, r20
     7c0:	5d 93       	st	X+, r21
     7c2:	6d 93       	st	X+, r22
     7c4:	7d 93       	st	X+, r23
     7c6:	87 0d       	add	r24, r7
     7c8:	a8 1b       	sub	r26, r24
     7ca:	b1 09       	sbc	r27, r1

		rotate64_2bit_right_state 
     7cc:	80 fa       	bst	r8, 0
     7ce:	f7 94       	ror	r15
     7d0:	e7 94       	ror	r14
     7d2:	d7 94       	ror	r13
     7d4:	c7 94       	ror	r12
     7d6:	b7 94       	ror	r11
     7d8:	a7 94       	ror	r10
     7da:	97 94       	ror	r9
     7dc:	87 94       	ror	r8
     7de:	f7 f8       	bld	r15, 7
     7e0:	80 fa       	bst	r8, 0
     7e2:	f7 94       	ror	r15
     7e4:	e7 94       	ror	r14
     7e6:	d7 94       	ror	r13
     7e8:	c7 94       	ror	r12
     7ea:	b7 94       	ror	r11
     7ec:	a7 94       	ror	r10
     7ee:	97 94       	ror	r9
     7f0:	87 94       	ror	r8
     7f2:	f7 f8       	bld	r15, 7
		ldi		count,		160; s[24]->s[20]
     7f4:	80 ea       	ldi	r24, 0xA0	; 160
		eor		count2,		count2;
     7f6:	99 27       	eor	r25, r25
		first_load_temp;	s[20]
     7f8:	a8 0f       	add	r26, r24
     7fa:	b1 1d       	adc	r27, r1
     7fc:	0d 91       	ld	r16, X+
     7fe:	1d 91       	ld	r17, X+
     800:	2d 91       	ld	r18, X+
     802:	3d 91       	ld	r19, X+
     804:	4d 91       	ld	r20, X+
     806:	5d 91       	ld	r21, X+
     808:	6d 91       	ld	r22, X+
     80a:	7d 91       	ld	r23, X+
     80c:	87 0d       	add	r24, r7
     80e:	a8 1b       	sub	r26, r24
     810:	b1 09       	sbc	r27, r1
     812:	c9 0f       	add	r28, r25
     814:	d1 1d       	adc	r29, r1
     816:	09 90       	ld	r0, Y+
     818:	00 25       	eor	r16, r0
     81a:	09 90       	ld	r0, Y+
     81c:	10 25       	eor	r17, r0
     81e:	09 90       	ld	r0, Y+
     820:	20 25       	eor	r18, r0
     822:	09 90       	ld	r0, Y+
     824:	30 25       	eor	r19, r0
     826:	09 90       	ld	r0, Y+
     828:	40 25       	eor	r20, r0
     82a:	09 90       	ld	r0, Y+
     82c:	50 25       	eor	r21, r0
     82e:	09 90       	ld	r0, Y+
     830:	60 25       	eor	r22, r0
     832:	09 90       	ld	r0, Y+
     834:	70 25       	eor	r23, r0
     836:	97 0d       	add	r25, r7
     838:	c9 1b       	sub	r28, r25
     83a:	d1 09       	sbc	r29, r1
		ldi		count,		160; s[24]->s[20]
     83c:	80 ea       	ldi	r24, 0xA0	; 160
		rotate64_1byte_right_state ; s[24] ->s[20] clear
     83e:	a8 0f       	add	r26, r24
     840:	b1 1d       	adc	r27, r1
     842:	fd 92       	st	X+, r15
     844:	8d 92       	st	X+, r8
     846:	9d 92       	st	X+, r9
     848:	ad 92       	st	X+, r10
     84a:	bd 92       	st	X+, r11
     84c:	cd 92       	st	X+, r12
     84e:	dd 92       	st	X+, r13
     850:	ed 92       	st	X+, r14
     852:	87 0d       	add	r24, r7
     854:	a8 1b       	sub	r26, r24
     856:	b1 09       	sbc	r27, r1

		rotate64_1bit_left_temp
     858:	00 0f       	add	r16, r16
     85a:	11 1f       	adc	r17, r17
     85c:	22 1f       	adc	r18, r18
     85e:	33 1f       	adc	r19, r19
     860:	44 1f       	adc	r20, r20
     862:	55 1f       	adc	r21, r21
     864:	66 1f       	adc	r22, r22
     866:	77 1f       	adc	r23, r23
     868:	01 1d       	adc	r16, r1
		ldi		count,		80; s[20]->s[10]
     86a:	80 e5       	ldi	r24, 0x50	; 80
		eor		count2,		count2;
     86c:	99 27       	eor	r25, r25
		first_load_state;	s[10]
     86e:	a8 0f       	add	r26, r24
     870:	b1 1d       	adc	r27, r1
     872:	8d 90       	ld	r8, X+
     874:	9d 90       	ld	r9, X+
     876:	ad 90       	ld	r10, X+
     878:	bd 90       	ld	r11, X+
     87a:	cd 90       	ld	r12, X+
     87c:	dd 90       	ld	r13, X+
     87e:	ed 90       	ld	r14, X+
     880:	fd 90       	ld	r15, X+
     882:	87 0d       	add	r24, r7
     884:	a8 1b       	sub	r26, r24
     886:	b1 09       	sbc	r27, r1
     888:	c9 0f       	add	r28, r25
     88a:	d1 1d       	adc	r29, r1
     88c:	09 90       	ld	r0, Y+
     88e:	80 24       	eor	r8, r0
     890:	09 90       	ld	r0, Y+
     892:	90 24       	eor	r9, r0
     894:	09 90       	ld	r0, Y+
     896:	a0 24       	eor	r10, r0
     898:	09 90       	ld	r0, Y+
     89a:	b0 24       	eor	r11, r0
     89c:	09 90       	ld	r0, Y+
     89e:	c0 24       	eor	r12, r0
     8a0:	09 90       	ld	r0, Y+
     8a2:	d0 24       	eor	r13, r0
     8a4:	09 90       	ld	r0, Y+
     8a6:	e0 24       	eor	r14, r0
     8a8:	09 90       	ld	r0, Y+
     8aa:	f0 24       	eor	r15, r0
     8ac:	97 0d       	add	r25, r7
     8ae:	c9 1b       	sub	r28, r25
     8b0:	d1 09       	sbc	r29, r1
		ldi		count,		80; s[20]->s[10]
     8b2:	80 e5       	ldi	r24, 0x50	; 80
		rotate64_2byte_right_temp ; s[20] ->s[10] clear
     8b4:	a8 0f       	add	r26, r24
     8b6:	b1 1d       	adc	r27, r1
     8b8:	6d 93       	st	X+, r22
     8ba:	7d 93       	st	X+, r23
     8bc:	0d 93       	st	X+, r16
     8be:	1d 93       	st	X+, r17
     8c0:	2d 93       	st	X+, r18
     8c2:	3d 93       	st	X+, r19
     8c4:	4d 93       	st	X+, r20
     8c6:	5d 93       	st	X+, r21
     8c8:	87 0d       	add	r24, r7
     8ca:	a8 1b       	sub	r26, r24
     8cc:	b1 09       	sbc	r27, r1

		rotate64_3bit_left_state 
     8ce:	88 0c       	add	r8, r8
     8d0:	99 1c       	adc	r9, r9
     8d2:	aa 1c       	adc	r10, r10
     8d4:	bb 1c       	adc	r11, r11
     8d6:	cc 1c       	adc	r12, r12
     8d8:	dd 1c       	adc	r13, r13
     8da:	ee 1c       	adc	r14, r14
     8dc:	ff 1c       	adc	r15, r15
     8de:	81 1c       	adc	r8, r1
     8e0:	88 0c       	add	r8, r8
     8e2:	99 1c       	adc	r9, r9
     8e4:	aa 1c       	adc	r10, r10
     8e6:	bb 1c       	adc	r11, r11
     8e8:	cc 1c       	adc	r12, r12
     8ea:	dd 1c       	adc	r13, r13
     8ec:	ee 1c       	adc	r14, r14
     8ee:	ff 1c       	adc	r15, r15
     8f0:	81 1c       	adc	r8, r1
     8f2:	88 0c       	add	r8, r8
     8f4:	99 1c       	adc	r9, r9
     8f6:	aa 1c       	adc	r10, r10
     8f8:	bb 1c       	adc	r11, r11
     8fa:	cc 1c       	adc	r12, r12
     8fc:	dd 1c       	adc	r13, r13
     8fe:	ee 1c       	adc	r14, r14
     900:	ff 1c       	adc	r15, r15
     902:	81 1c       	adc	r8, r1
		ldi		count,		56; s[10]->s[7]
     904:	88 e3       	ldi	r24, 0x38	; 56
		ldi		count2,		16;
     906:	90 e1       	ldi	r25, 0x10	; 16
		first_load_temp;	s[7]
     908:	a8 0f       	add	r26, r24
     90a:	b1 1d       	adc	r27, r1
     90c:	0d 91       	ld	r16, X+
     90e:	1d 91       	ld	r17, X+
     910:	2d 91       	ld	r18, X+
     912:	3d 91       	ld	r19, X+
     914:	4d 91       	ld	r20, X+
     916:	5d 91       	ld	r21, X+
     918:	6d 91       	ld	r22, X+
     91a:	7d 91       	ld	r23, X+
     91c:	87 0d       	add	r24, r7
     91e:	a8 1b       	sub	r26, r24
     920:	b1 09       	sbc	r27, r1
     922:	c9 0f       	add	r28, r25
     924:	d1 1d       	adc	r29, r1
     926:	09 90       	ld	r0, Y+
     928:	00 25       	eor	r16, r0
     92a:	09 90       	ld	r0, Y+
     92c:	10 25       	eor	r17, r0
     92e:	09 90       	ld	r0, Y+
     930:	20 25       	eor	r18, r0
     932:	09 90       	ld	r0, Y+
     934:	30 25       	eor	r19, r0
     936:	09 90       	ld	r0, Y+
     938:	40 25       	eor	r20, r0
     93a:	09 90       	ld	r0, Y+
     93c:	50 25       	eor	r21, r0
     93e:	09 90       	ld	r0, Y+
     940:	60 25       	eor	r22, r0
     942:	09 90       	ld	r0, Y+
     944:	70 25       	eor	r23, r0
     946:	97 0d       	add	r25, r7
     948:	c9 1b       	sub	r28, r25
     94a:	d1 09       	sbc	r29, r1
		ldi		count,		56; s[10]->s[7]
     94c:	88 e3       	ldi	r24, 0x38	; 56
		rotate64_3byte_right_state ; s[10] ->s[7] clear
     94e:	a8 0f       	add	r26, r24
     950:	b1 1d       	adc	r27, r1
     952:	dd 92       	st	X+, r13
     954:	ed 92       	st	X+, r14
     956:	fd 92       	st	X+, r15
     958:	8d 92       	st	X+, r8
     95a:	9d 92       	st	X+, r9
     95c:	ad 92       	st	X+, r10
     95e:	bd 92       	st	X+, r11
     960:	cd 92       	st	X+, r12
     962:	87 0d       	add	r24, r7
     964:	a8 1b       	sub	r26, r24
     966:	b1 09       	sbc	r27, r1

		rotate64_4bit_left_temp
     968:	00 0f       	add	r16, r16
     96a:	11 1f       	adc	r17, r17
     96c:	22 1f       	adc	r18, r18
     96e:	33 1f       	adc	r19, r19
     970:	44 1f       	adc	r20, r20
     972:	55 1f       	adc	r21, r21
     974:	66 1f       	adc	r22, r22
     976:	77 1f       	adc	r23, r23
     978:	01 1d       	adc	r16, r1
     97a:	00 0f       	add	r16, r16
     97c:	11 1f       	adc	r17, r17
     97e:	22 1f       	adc	r18, r18
     980:	33 1f       	adc	r19, r19
     982:	44 1f       	adc	r20, r20
     984:	55 1f       	adc	r21, r21
     986:	66 1f       	adc	r22, r22
     988:	77 1f       	adc	r23, r23
     98a:	01 1d       	adc	r16, r1
     98c:	00 0f       	add	r16, r16
     98e:	11 1f       	adc	r17, r17
     990:	22 1f       	adc	r18, r18
     992:	33 1f       	adc	r19, r19
     994:	44 1f       	adc	r20, r20
     996:	55 1f       	adc	r21, r21
     998:	66 1f       	adc	r22, r22
     99a:	77 1f       	adc	r23, r23
     99c:	01 1d       	adc	r16, r1
     99e:	00 0f       	add	r16, r16
     9a0:	11 1f       	adc	r17, r17
     9a2:	22 1f       	adc	r18, r18
     9a4:	33 1f       	adc	r19, r19
     9a6:	44 1f       	adc	r20, r20
     9a8:	55 1f       	adc	r21, r21
     9aa:	66 1f       	adc	r22, r22
     9ac:	77 1f       	adc	r23, r23
     9ae:	01 1d       	adc	r16, r1
		ldi		count,		184; s[7]->s[23]
     9b0:	88 eb       	ldi	r24, 0xB8	; 184
		ldi		count2,		24;
     9b2:	98 e1       	ldi	r25, 0x18	; 24
		first_load_state;	s[23]
     9b4:	a8 0f       	add	r26, r24
     9b6:	b1 1d       	adc	r27, r1
     9b8:	8d 90       	ld	r8, X+
     9ba:	9d 90       	ld	r9, X+
     9bc:	ad 90       	ld	r10, X+
     9be:	bd 90       	ld	r11, X+
     9c0:	cd 90       	ld	r12, X+
     9c2:	dd 90       	ld	r13, X+
     9c4:	ed 90       	ld	r14, X+
     9c6:	fd 90       	ld	r15, X+
     9c8:	87 0d       	add	r24, r7
     9ca:	a8 1b       	sub	r26, r24
     9cc:	b1 09       	sbc	r27, r1
     9ce:	c9 0f       	add	r28, r25
     9d0:	d1 1d       	adc	r29, r1
     9d2:	09 90       	ld	r0, Y+
     9d4:	80 24       	eor	r8, r0
     9d6:	09 90       	ld	r0, Y+
     9d8:	90 24       	eor	r9, r0
     9da:	09 90       	ld	r0, Y+
     9dc:	a0 24       	eor	r10, r0
     9de:	09 90       	ld	r0, Y+
     9e0:	b0 24       	eor	r11, r0
     9e2:	09 90       	ld	r0, Y+
     9e4:	c0 24       	eor	r12, r0
     9e6:	09 90       	ld	r0, Y+
     9e8:	d0 24       	eor	r13, r0
     9ea:	09 90       	ld	r0, Y+
     9ec:	e0 24       	eor	r14, r0
     9ee:	09 90       	ld	r0, Y+
     9f0:	f0 24       	eor	r15, r0
     9f2:	97 0d       	add	r25, r7
     9f4:	c9 1b       	sub	r28, r25
     9f6:	d1 09       	sbc	r29, r1
		ldi		count,		184; s[7]->s[23]
     9f8:	88 eb       	ldi	r24, 0xB8	; 184
		rotate64_4byte_right_temp ; s[7] ->s[23] clear
     9fa:	a8 0f       	add	r26, r24
     9fc:	b1 1d       	adc	r27, r1
     9fe:	4d 93       	st	X+, r20
     a00:	5d 93       	st	X+, r21
     a02:	6d 93       	st	X+, r22
     a04:	7d 93       	st	X+, r23
     a06:	0d 93       	st	X+, r16
     a08:	1d 93       	st	X+, r17
     a0a:	2d 93       	st	X+, r18
     a0c:	3d 93       	st	X+, r19
     a0e:	87 0d       	add	r24, r7
     a10:	a8 1b       	sub	r26, r24
     a12:	b1 09       	sbc	r27, r1

		rotate64_4bit_left_state 
     a14:	88 0c       	add	r8, r8
     a16:	99 1c       	adc	r9, r9
     a18:	aa 1c       	adc	r10, r10
     a1a:	bb 1c       	adc	r11, r11
     a1c:	cc 1c       	adc	r12, r12
     a1e:	dd 1c       	adc	r13, r13
     a20:	ee 1c       	adc	r14, r14
     a22:	ff 1c       	adc	r15, r15
     a24:	81 1c       	adc	r8, r1
     a26:	88 0c       	add	r8, r8
     a28:	99 1c       	adc	r9, r9
     a2a:	aa 1c       	adc	r10, r10
     a2c:	bb 1c       	adc	r11, r11
     a2e:	cc 1c       	adc	r12, r12
     a30:	dd 1c       	adc	r13, r13
     a32:	ee 1c       	adc	r14, r14
     a34:	ff 1c       	adc	r15, r15
     a36:	81 1c       	adc	r8, r1
     a38:	88 0c       	add	r8, r8
     a3a:	99 1c       	adc	r9, r9
     a3c:	aa 1c       	adc	r10, r10
     a3e:	bb 1c       	adc	r11, r11
     a40:	cc 1c       	adc	r12, r12
     a42:	dd 1c       	adc	r13, r13
     a44:	ee 1c       	adc	r14, r14
     a46:	ff 1c       	adc	r15, r15
     a48:	81 1c       	adc	r8, r1
     a4a:	88 0c       	add	r8, r8
     a4c:	99 1c       	adc	r9, r9
     a4e:	aa 1c       	adc	r10, r10
     a50:	bb 1c       	adc	r11, r11
     a52:	cc 1c       	adc	r12, r12
     a54:	dd 1c       	adc	r13, r13
     a56:	ee 1c       	adc	r14, r14
     a58:	ff 1c       	adc	r15, r15
     a5a:	81 1c       	adc	r8, r1
		ldi		count,		40; s[23]->s[5]
     a5c:	88 e2       	ldi	r24, 0x28	; 40
		eor		count2,		count2;
     a5e:	99 27       	eor	r25, r25
		first_load_temp;	s[5]
     a60:	a8 0f       	add	r26, r24
     a62:	b1 1d       	adc	r27, r1
     a64:	0d 91       	ld	r16, X+
     a66:	1d 91       	ld	r17, X+
     a68:	2d 91       	ld	r18, X+
     a6a:	3d 91       	ld	r19, X+
     a6c:	4d 91       	ld	r20, X+
     a6e:	5d 91       	ld	r21, X+
     a70:	6d 91       	ld	r22, X+
     a72:	7d 91       	ld	r23, X+
     a74:	87 0d       	add	r24, r7
     a76:	a8 1b       	sub	r26, r24
     a78:	b1 09       	sbc	r27, r1
     a7a:	c9 0f       	add	r28, r25
     a7c:	d1 1d       	adc	r29, r1
     a7e:	09 90       	ld	r0, Y+
     a80:	00 25       	eor	r16, r0
     a82:	09 90       	ld	r0, Y+
     a84:	10 25       	eor	r17, r0
     a86:	09 90       	ld	r0, Y+
     a88:	20 25       	eor	r18, r0
     a8a:	09 90       	ld	r0, Y+
     a8c:	30 25       	eor	r19, r0
     a8e:	09 90       	ld	r0, Y+
     a90:	40 25       	eor	r20, r0
     a92:	09 90       	ld	r0, Y+
     a94:	50 25       	eor	r21, r0
     a96:	09 90       	ld	r0, Y+
     a98:	60 25       	eor	r22, r0
     a9a:	09 90       	ld	r0, Y+
     a9c:	70 25       	eor	r23, r0
     a9e:	97 0d       	add	r25, r7
     aa0:	c9 1b       	sub	r28, r25
     aa2:	d1 09       	sbc	r29, r1
		ldi		count,		40; s[23]->s[5]
     aa4:	88 e2       	ldi	r24, 0x28	; 40
		rotate64_4byte_right_state ; s[23] ->s[5] clear
     aa6:	a8 0f       	add	r26, r24
     aa8:	b1 1d       	adc	r27, r1
     aaa:	cd 92       	st	X+, r12
     aac:	dd 92       	st	X+, r13
     aae:	ed 92       	st	X+, r14
     ab0:	fd 92       	st	X+, r15
     ab2:	8d 92       	st	X+, r8
     ab4:	9d 92       	st	X+, r9
     ab6:	ad 92       	st	X+, r10
     ab8:	bd 92       	st	X+, r11
     aba:	87 0d       	add	r24, r7
     abc:	a8 1b       	sub	r26, r24
     abe:	b1 09       	sbc	r27, r1

		rotate64_3bit_left_temp
     ac0:	00 0f       	add	r16, r16
     ac2:	11 1f       	adc	r17, r17
     ac4:	22 1f       	adc	r18, r18
     ac6:	33 1f       	adc	r19, r19
     ac8:	44 1f       	adc	r20, r20
     aca:	55 1f       	adc	r21, r21
     acc:	66 1f       	adc	r22, r22
     ace:	77 1f       	adc	r23, r23
     ad0:	01 1d       	adc	r16, r1
     ad2:	00 0f       	add	r16, r16
     ad4:	11 1f       	adc	r17, r17
     ad6:	22 1f       	adc	r18, r18
     ad8:	33 1f       	adc	r19, r19
     ada:	44 1f       	adc	r20, r20
     adc:	55 1f       	adc	r21, r21
     ade:	66 1f       	adc	r22, r22
     ae0:	77 1f       	adc	r23, r23
     ae2:	01 1d       	adc	r16, r1
     ae4:	00 0f       	add	r16, r16
     ae6:	11 1f       	adc	r17, r17
     ae8:	22 1f       	adc	r18, r18
     aea:	33 1f       	adc	r19, r19
     aec:	44 1f       	adc	r20, r20
     aee:	55 1f       	adc	r21, r21
     af0:	66 1f       	adc	r22, r22
     af2:	77 1f       	adc	r23, r23
     af4:	01 1d       	adc	r16, r1
		ldi		count,		144; s[5]->s[18]
     af6:	80 e9       	ldi	r24, 0x90	; 144
		ldi		count2,		24;
     af8:	98 e1       	ldi	r25, 0x18	; 24
		first_load_state;	s[5]
     afa:	a8 0f       	add	r26, r24
     afc:	b1 1d       	adc	r27, r1
     afe:	8d 90       	ld	r8, X+
     b00:	9d 90       	ld	r9, X+
     b02:	ad 90       	ld	r10, X+
     b04:	bd 90       	ld	r11, X+
     b06:	cd 90       	ld	r12, X+
     b08:	dd 90       	ld	r13, X+
     b0a:	ed 90       	ld	r14, X+
     b0c:	fd 90       	ld	r15, X+
     b0e:	87 0d       	add	r24, r7
     b10:	a8 1b       	sub	r26, r24
     b12:	b1 09       	sbc	r27, r1
     b14:	c9 0f       	add	r28, r25
     b16:	d1 1d       	adc	r29, r1
     b18:	09 90       	ld	r0, Y+
     b1a:	80 24       	eor	r8, r0
     b1c:	09 90       	ld	r0, Y+
     b1e:	90 24       	eor	r9, r0
     b20:	09 90       	ld	r0, Y+
     b22:	a0 24       	eor	r10, r0
     b24:	09 90       	ld	r0, Y+
     b26:	b0 24       	eor	r11, r0
     b28:	09 90       	ld	r0, Y+
     b2a:	c0 24       	eor	r12, r0
     b2c:	09 90       	ld	r0, Y+
     b2e:	d0 24       	eor	r13, r0
     b30:	09 90       	ld	r0, Y+
     b32:	e0 24       	eor	r14, r0
     b34:	09 90       	ld	r0, Y+
     b36:	f0 24       	eor	r15, r0
     b38:	97 0d       	add	r25, r7
     b3a:	c9 1b       	sub	r28, r25
     b3c:	d1 09       	sbc	r29, r1
		ldi		count,		144; s[5]->s[18]
     b3e:	80 e9       	ldi	r24, 0x90	; 144
		rotate64_6byte_right_temp ; s[5] ->s[18] clear
     b40:	a8 0f       	add	r26, r24
     b42:	b1 1d       	adc	r27, r1
     b44:	2d 93       	st	X+, r18
     b46:	3d 93       	st	X+, r19
     b48:	4d 93       	st	X+, r20
     b4a:	5d 93       	st	X+, r21
     b4c:	6d 93       	st	X+, r22
     b4e:	7d 93       	st	X+, r23
     b50:	0d 93       	st	X+, r16
     b52:	1d 93       	st	X+, r17
     b54:	87 0d       	add	r24, r7
     b56:	a8 1b       	sub	r26, r24
     b58:	b1 09       	sbc	r27, r1

		rotate64_1bit_left_state 
     b5a:	88 0c       	add	r8, r8
     b5c:	99 1c       	adc	r9, r9
     b5e:	aa 1c       	adc	r10, r10
     b60:	bb 1c       	adc	r11, r11
     b62:	cc 1c       	adc	r12, r12
     b64:	dd 1c       	adc	r13, r13
     b66:	ee 1c       	adc	r14, r14
     b68:	ff 1c       	adc	r15, r15
     b6a:	81 1c       	adc	r8, r1
		ldi		count,		128; s[18]->s[16]
     b6c:	80 e8       	ldi	r24, 0x80	; 128
		ldi		count2,		8;
     b6e:	98 e0       	ldi	r25, 0x08	; 8
		first_load_temp;	s[16]
     b70:	a8 0f       	add	r26, r24
     b72:	b1 1d       	adc	r27, r1
     b74:	0d 91       	ld	r16, X+
     b76:	1d 91       	ld	r17, X+
     b78:	2d 91       	ld	r18, X+
     b7a:	3d 91       	ld	r19, X+
     b7c:	4d 91       	ld	r20, X+
     b7e:	5d 91       	ld	r21, X+
     b80:	6d 91       	ld	r22, X+
     b82:	7d 91       	ld	r23, X+
     b84:	87 0d       	add	r24, r7
     b86:	a8 1b       	sub	r26, r24
     b88:	b1 09       	sbc	r27, r1
     b8a:	c9 0f       	add	r28, r25
     b8c:	d1 1d       	adc	r29, r1
     b8e:	09 90       	ld	r0, Y+
     b90:	00 25       	eor	r16, r0
     b92:	09 90       	ld	r0, Y+
     b94:	10 25       	eor	r17, r0
     b96:	09 90       	ld	r0, Y+
     b98:	20 25       	eor	r18, r0
     b9a:	09 90       	ld	r0, Y+
     b9c:	30 25       	eor	r19, r0
     b9e:	09 90       	ld	r0, Y+
     ba0:	40 25       	eor	r20, r0
     ba2:	09 90       	ld	r0, Y+
     ba4:	50 25       	eor	r21, r0
     ba6:	09 90       	ld	r0, Y+
     ba8:	60 25       	eor	r22, r0
     baa:	09 90       	ld	r0, Y+
     bac:	70 25       	eor	r23, r0
     bae:	97 0d       	add	r25, r7
     bb0:	c9 1b       	sub	r28, r25
     bb2:	d1 09       	sbc	r29, r1
		ldi		count,		128; s[18]->s[16]
     bb4:	80 e8       	ldi	r24, 0x80	; 128
		rotate64_7byte_right_state ; s[18] ->s[16] clear
     bb6:	a8 0f       	add	r26, r24
     bb8:	b1 1d       	adc	r27, r1
     bba:	9d 92       	st	X+, r9
     bbc:	ad 92       	st	X+, r10
     bbe:	bd 92       	st	X+, r11
     bc0:	cd 92       	st	X+, r12
     bc2:	dd 92       	st	X+, r13
     bc4:	ed 92       	st	X+, r14
     bc6:	fd 92       	st	X+, r15
     bc8:	8d 92       	st	X+, r8
     bca:	87 0d       	add	r24, r7
     bcc:	a8 1b       	sub	r26, r24
     bce:	b1 09       	sbc	r27, r1

		
		rotate64_2bit_right_temp
     bd0:	00 fb       	bst	r16, 0
     bd2:	77 95       	ror	r23
     bd4:	67 95       	ror	r22
     bd6:	57 95       	ror	r21
     bd8:	47 95       	ror	r20
     bda:	37 95       	ror	r19
     bdc:	27 95       	ror	r18
     bde:	17 95       	ror	r17
     be0:	07 95       	ror	r16
     be2:	77 f9       	bld	r23, 7
     be4:	00 fb       	bst	r16, 0
     be6:	77 95       	ror	r23
     be8:	67 95       	ror	r22
     bea:	57 95       	ror	r21
     bec:	47 95       	ror	r20
     bee:	37 95       	ror	r19
     bf0:	27 95       	ror	r18
     bf2:	17 95       	ror	r17
     bf4:	07 95       	ror	r16
     bf6:	77 f9       	bld	r23, 7
		ldi		count,		88; s[16]->s[11]
     bf8:	88 e5       	ldi	r24, 0x58	; 88
		ldi		count2,		8;
     bfa:	98 e0       	ldi	r25, 0x08	; 8
		first_load_state;	s[11]
     bfc:	a8 0f       	add	r26, r24
     bfe:	b1 1d       	adc	r27, r1
     c00:	8d 90       	ld	r8, X+
     c02:	9d 90       	ld	r9, X+
     c04:	ad 90       	ld	r10, X+
     c06:	bd 90       	ld	r11, X+
     c08:	cd 90       	ld	r12, X+
     c0a:	dd 90       	ld	r13, X+
     c0c:	ed 90       	ld	r14, X+
     c0e:	fd 90       	ld	r15, X+
     c10:	87 0d       	add	r24, r7
     c12:	a8 1b       	sub	r26, r24
     c14:	b1 09       	sbc	r27, r1
     c16:	c9 0f       	add	r28, r25
     c18:	d1 1d       	adc	r29, r1
     c1a:	09 90       	ld	r0, Y+
     c1c:	80 24       	eor	r8, r0
     c1e:	09 90       	ld	r0, Y+
     c20:	90 24       	eor	r9, r0
     c22:	09 90       	ld	r0, Y+
     c24:	a0 24       	eor	r10, r0
     c26:	09 90       	ld	r0, Y+
     c28:	b0 24       	eor	r11, r0
     c2a:	09 90       	ld	r0, Y+
     c2c:	c0 24       	eor	r12, r0
     c2e:	09 90       	ld	r0, Y+
     c30:	d0 24       	eor	r13, r0
     c32:	09 90       	ld	r0, Y+
     c34:	e0 24       	eor	r14, r0
     c36:	09 90       	ld	r0, Y+
     c38:	f0 24       	eor	r15, r0
     c3a:	97 0d       	add	r25, r7
     c3c:	c9 1b       	sub	r28, r25
     c3e:	d1 09       	sbc	r29, r1
		ldi		count,		88; s[16]->s[11]
     c40:	88 e5       	ldi	r24, 0x58	; 88
		rotate64_0byte_right_temp ; s[16] ->s[11] clear
     c42:	a8 0f       	add	r26, r24
     c44:	b1 1d       	adc	r27, r1
     c46:	0d 93       	st	X+, r16
     c48:	1d 93       	st	X+, r17
     c4a:	2d 93       	st	X+, r18
     c4c:	3d 93       	st	X+, r19
     c4e:	4d 93       	st	X+, r20
     c50:	5d 93       	st	X+, r21
     c52:	6d 93       	st	X+, r22
     c54:	7d 93       	st	X+, r23
     c56:	87 0d       	add	r24, r7
     c58:	a8 1b       	sub	r26, r24
     c5a:	b1 09       	sbc	r27, r1

		rotate64_2bit_left_state 
     c5c:	88 0c       	add	r8, r8
     c5e:	99 1c       	adc	r9, r9
     c60:	aa 1c       	adc	r10, r10
     c62:	bb 1c       	adc	r11, r11
     c64:	cc 1c       	adc	r12, r12
     c66:	dd 1c       	adc	r13, r13
     c68:	ee 1c       	adc	r14, r14
     c6a:	ff 1c       	adc	r15, r15
     c6c:	81 1c       	adc	r8, r1
     c6e:	88 0c       	add	r8, r8
     c70:	99 1c       	adc	r9, r9
     c72:	aa 1c       	adc	r10, r10
     c74:	bb 1c       	adc	r11, r11
     c76:	cc 1c       	adc	r12, r12
     c78:	dd 1c       	adc	r13, r13
     c7a:	ee 1c       	adc	r14, r14
     c7c:	ff 1c       	adc	r15, r15
     c7e:	81 1c       	adc	r8, r1
		ldi		count,		176; s[11]->s[22]
     c80:	80 eb       	ldi	r24, 0xB0	; 176
		ldi		count2,		16;
     c82:	90 e1       	ldi	r25, 0x10	; 16
		first_load_temp;	s[22]
     c84:	a8 0f       	add	r26, r24
     c86:	b1 1d       	adc	r27, r1
     c88:	0d 91       	ld	r16, X+
     c8a:	1d 91       	ld	r17, X+
     c8c:	2d 91       	ld	r18, X+
     c8e:	3d 91       	ld	r19, X+
     c90:	4d 91       	ld	r20, X+
     c92:	5d 91       	ld	r21, X+
     c94:	6d 91       	ld	r22, X+
     c96:	7d 91       	ld	r23, X+
     c98:	87 0d       	add	r24, r7
     c9a:	a8 1b       	sub	r26, r24
     c9c:	b1 09       	sbc	r27, r1
     c9e:	c9 0f       	add	r28, r25
     ca0:	d1 1d       	adc	r29, r1
     ca2:	09 90       	ld	r0, Y+
     ca4:	00 25       	eor	r16, r0
     ca6:	09 90       	ld	r0, Y+
     ca8:	10 25       	eor	r17, r0
     caa:	09 90       	ld	r0, Y+
     cac:	20 25       	eor	r18, r0
     cae:	09 90       	ld	r0, Y+
     cb0:	30 25       	eor	r19, r0
     cb2:	09 90       	ld	r0, Y+
     cb4:	40 25       	eor	r20, r0
     cb6:	09 90       	ld	r0, Y+
     cb8:	50 25       	eor	r21, r0
     cba:	09 90       	ld	r0, Y+
     cbc:	60 25       	eor	r22, r0
     cbe:	09 90       	ld	r0, Y+
     cc0:	70 25       	eor	r23, r0
     cc2:	97 0d       	add	r25, r7
     cc4:	c9 1b       	sub	r28, r25
     cc6:	d1 09       	sbc	r29, r1
		ldi		count,		176; s[11]->s[22]
     cc8:	80 eb       	ldi	r24, 0xB0	; 176
		rotate64_2byte_right_state ; s[11] ->s[22] clear
     cca:	a8 0f       	add	r26, r24
     ccc:	b1 1d       	adc	r27, r1
     cce:	ed 92       	st	X+, r14
     cd0:	fd 92       	st	X+, r15
     cd2:	8d 92       	st	X+, r8
     cd4:	9d 92       	st	X+, r9
     cd6:	ad 92       	st	X+, r10
     cd8:	bd 92       	st	X+, r11
     cda:	cd 92       	st	X+, r12
     cdc:	dd 92       	st	X+, r13
     cde:	87 0d       	add	r24, r7
     ce0:	a8 1b       	sub	r26, r24
     ce2:	b1 09       	sbc	r27, r1

		rotate64_3bit_right_temp 
     ce4:	00 fb       	bst	r16, 0
     ce6:	77 95       	ror	r23
     ce8:	67 95       	ror	r22
     cea:	57 95       	ror	r21
     cec:	47 95       	ror	r20
     cee:	37 95       	ror	r19
     cf0:	27 95       	ror	r18
     cf2:	17 95       	ror	r17
     cf4:	07 95       	ror	r16
     cf6:	77 f9       	bld	r23, 7
     cf8:	00 fb       	bst	r16, 0
     cfa:	77 95       	ror	r23
     cfc:	67 95       	ror	r22
     cfe:	57 95       	ror	r21
     d00:	47 95       	ror	r20
     d02:	37 95       	ror	r19
     d04:	27 95       	ror	r18
     d06:	17 95       	ror	r17
     d08:	07 95       	ror	r16
     d0a:	77 f9       	bld	r23, 7
     d0c:	00 fb       	bst	r16, 0
     d0e:	77 95       	ror	r23
     d10:	67 95       	ror	r22
     d12:	57 95       	ror	r21
     d14:	47 95       	ror	r20
     d16:	37 95       	ror	r19
     d18:	27 95       	ror	r18
     d1a:	17 95       	ror	r17
     d1c:	07 95       	ror	r16
     d1e:	77 f9       	bld	r23, 7
		ldi		count,		120; s[22]->s[15]
     d20:	88 e7       	ldi	r24, 0x78	; 120
		eor		count2,		count2;
     d22:	99 27       	eor	r25, r25
		first_load_state;	s[15]
     d24:	a8 0f       	add	r26, r24
     d26:	b1 1d       	adc	r27, r1
     d28:	8d 90       	ld	r8, X+
     d2a:	9d 90       	ld	r9, X+
     d2c:	ad 90       	ld	r10, X+
     d2e:	bd 90       	ld	r11, X+
     d30:	cd 90       	ld	r12, X+
     d32:	dd 90       	ld	r13, X+
     d34:	ed 90       	ld	r14, X+
     d36:	fd 90       	ld	r15, X+
     d38:	87 0d       	add	r24, r7
     d3a:	a8 1b       	sub	r26, r24
     d3c:	b1 09       	sbc	r27, r1
     d3e:	c9 0f       	add	r28, r25
     d40:	d1 1d       	adc	r29, r1
     d42:	09 90       	ld	r0, Y+
     d44:	80 24       	eor	r8, r0
     d46:	09 90       	ld	r0, Y+
     d48:	90 24       	eor	r9, r0
     d4a:	09 90       	ld	r0, Y+
     d4c:	a0 24       	eor	r10, r0
     d4e:	09 90       	ld	r0, Y+
     d50:	b0 24       	eor	r11, r0
     d52:	09 90       	ld	r0, Y+
     d54:	c0 24       	eor	r12, r0
     d56:	09 90       	ld	r0, Y+
     d58:	d0 24       	eor	r13, r0
     d5a:	09 90       	ld	r0, Y+
     d5c:	e0 24       	eor	r14, r0
     d5e:	09 90       	ld	r0, Y+
     d60:	f0 24       	eor	r15, r0
     d62:	97 0d       	add	r25, r7
     d64:	c9 1b       	sub	r28, r25
     d66:	d1 09       	sbc	r29, r1
		ldi		count,		120; s[22]->s[15]
     d68:	88 e7       	ldi	r24, 0x78	; 120
		rotate64_3byte_right_temp ; s[22] ->s[15] clear
     d6a:	a8 0f       	add	r26, r24
     d6c:	b1 1d       	adc	r27, r1
     d6e:	5d 93       	st	X+, r21
     d70:	6d 93       	st	X+, r22
     d72:	7d 93       	st	X+, r23
     d74:	0d 93       	st	X+, r16
     d76:	1d 93       	st	X+, r17
     d78:	2d 93       	st	X+, r18
     d7a:	3d 93       	st	X+, r19
     d7c:	4d 93       	st	X+, r20
     d7e:	87 0d       	add	r24, r7
     d80:	a8 1b       	sub	r26, r24
     d82:	b1 09       	sbc	r27, r1

		rotate64_1bit_right_state 
     d84:	80 fa       	bst	r8, 0
     d86:	f7 94       	ror	r15
     d88:	e7 94       	ror	r14
     d8a:	d7 94       	ror	r13
     d8c:	c7 94       	ror	r12
     d8e:	b7 94       	ror	r11
     d90:	a7 94       	ror	r10
     d92:	97 94       	ror	r9
     d94:	87 94       	ror	r8
     d96:	f7 f8       	bld	r15, 7
		ldi		count,		168; s[15]->s[21]
     d98:	88 ea       	ldi	r24, 0xA8	; 168
		ldi		count2,		8;
     d9a:	98 e0       	ldi	r25, 0x08	; 8
		first_load_temp;	s[21]
     d9c:	a8 0f       	add	r26, r24
     d9e:	b1 1d       	adc	r27, r1
     da0:	0d 91       	ld	r16, X+
     da2:	1d 91       	ld	r17, X+
     da4:	2d 91       	ld	r18, X+
     da6:	3d 91       	ld	r19, X+
     da8:	4d 91       	ld	r20, X+
     daa:	5d 91       	ld	r21, X+
     dac:	6d 91       	ld	r22, X+
     dae:	7d 91       	ld	r23, X+
     db0:	87 0d       	add	r24, r7
     db2:	a8 1b       	sub	r26, r24
     db4:	b1 09       	sbc	r27, r1
     db6:	c9 0f       	add	r28, r25
     db8:	d1 1d       	adc	r29, r1
     dba:	09 90       	ld	r0, Y+
     dbc:	00 25       	eor	r16, r0
     dbe:	09 90       	ld	r0, Y+
     dc0:	10 25       	eor	r17, r0
     dc2:	09 90       	ld	r0, Y+
     dc4:	20 25       	eor	r18, r0
     dc6:	09 90       	ld	r0, Y+
     dc8:	30 25       	eor	r19, r0
     dca:	09 90       	ld	r0, Y+
     dcc:	40 25       	eor	r20, r0
     dce:	09 90       	ld	r0, Y+
     dd0:	50 25       	eor	r21, r0
     dd2:	09 90       	ld	r0, Y+
     dd4:	60 25       	eor	r22, r0
     dd6:	09 90       	ld	r0, Y+
     dd8:	70 25       	eor	r23, r0
     dda:	97 0d       	add	r25, r7
     ddc:	c9 1b       	sub	r28, r25
     dde:	d1 09       	sbc	r29, r1
		ldi		count,		168; s[15]->s[21]
     de0:	88 ea       	ldi	r24, 0xA8	; 168
		rotate64_5byte_right_state ; s[15] ->s[21] clear
     de2:	a8 0f       	add	r26, r24
     de4:	b1 1d       	adc	r27, r1
     de6:	bd 92       	st	X+, r11
     de8:	cd 92       	st	X+, r12
     dea:	dd 92       	st	X+, r13
     dec:	ed 92       	st	X+, r14
     dee:	fd 92       	st	X+, r15
     df0:	8d 92       	st	X+, r8
     df2:	9d 92       	st	X+, r9
     df4:	ad 92       	st	X+, r10
     df6:	87 0d       	add	r24, r7
     df8:	a8 1b       	sub	r26, r24
     dfa:	b1 09       	sbc	r27, r1

		rotate64_1bit_right_temp   ;  s[21] -> s[0] ;-> s[0] is already Empty
     dfc:	00 fb       	bst	r16, 0
     dfe:	77 95       	ror	r23
     e00:	67 95       	ror	r22
     e02:	57 95       	ror	r21
     e04:	47 95       	ror	r20
     e06:	37 95       	ror	r19
     e08:	27 95       	ror	r18
     e0a:	17 95       	ror	r17
     e0c:	07 95       	ror	r16
     e0e:	77 f9       	bld	r23, 7
		rotate64_3byte_right_temp  ;  s[21] -> s[0] clear////////-new start---------------------------------------
     e10:	a8 0f       	add	r26, r24
     e12:	b1 1d       	adc	r27, r1
     e14:	5d 93       	st	X+, r21
     e16:	6d 93       	st	X+, r22
     e18:	7d 93       	st	X+, r23
     e1a:	0d 93       	st	X+, r16
     e1c:	1d 93       	st	X+, r17
     e1e:	2d 93       	st	X+, r18
     e20:	3d 93       	st	X+, r19
     e22:	4d 93       	st	X+, r20
     e24:	87 0d       	add	r24, r7
     e26:	a8 1b       	sub	r26, r24
     e28:	b1 09       	sbc	r27, r1


		ldi		count,		8
     e2a:	88 e0       	ldi	r24, 0x08	; 8
		ldi		count2,		8
     e2c:	98 e0       	ldi	r25, 0x08	; 8
		first_load_state; s[1]
     e2e:	a8 0f       	add	r26, r24
     e30:	b1 1d       	adc	r27, r1
     e32:	8d 90       	ld	r8, X+
     e34:	9d 90       	ld	r9, X+
     e36:	ad 90       	ld	r10, X+
     e38:	bd 90       	ld	r11, X+
     e3a:	cd 90       	ld	r12, X+
     e3c:	dd 90       	ld	r13, X+
     e3e:	ed 90       	ld	r14, X+
     e40:	fd 90       	ld	r15, X+
     e42:	87 0d       	add	r24, r7
     e44:	a8 1b       	sub	r26, r24
     e46:	b1 09       	sbc	r27, r1
     e48:	c9 0f       	add	r28, r25
     e4a:	d1 1d       	adc	r29, r1
     e4c:	09 90       	ld	r0, Y+
     e4e:	80 24       	eor	r8, r0
     e50:	09 90       	ld	r0, Y+
     e52:	90 24       	eor	r9, r0
     e54:	09 90       	ld	r0, Y+
     e56:	a0 24       	eor	r10, r0
     e58:	09 90       	ld	r0, Y+
     e5a:	b0 24       	eor	r11, r0
     e5c:	09 90       	ld	r0, Y+
     e5e:	c0 24       	eor	r12, r0
     e60:	09 90       	ld	r0, Y+
     e62:	d0 24       	eor	r13, r0
     e64:	09 90       	ld	r0, Y+
     e66:	e0 24       	eor	r14, r0
     e68:	09 90       	ld	r0, Y+
     e6a:	f0 24       	eor	r15, r0
     e6c:	97 0d       	add	r25, r7
     e6e:	c9 1b       	sub	r28, r25
     e70:	d1 09       	sbc	r29, r1

		rotate64_2bit_right_state
     e72:	80 fa       	bst	r8, 0
     e74:	f7 94       	ror	r15
     e76:	e7 94       	ror	r14
     e78:	d7 94       	ror	r13
     e7a:	c7 94       	ror	r12
     e7c:	b7 94       	ror	r11
     e7e:	a7 94       	ror	r10
     e80:	97 94       	ror	r9
     e82:	87 94       	ror	r8
     e84:	f7 f8       	bld	r15, 7
     e86:	80 fa       	bst	r8, 0
     e88:	f7 94       	ror	r15
     e8a:	e7 94       	ror	r14
     e8c:	d7 94       	ror	r13
     e8e:	c7 94       	ror	r12
     e90:	b7 94       	ror	r11
     e92:	a7 94       	ror	r10
     e94:	97 94       	ror	r9
     e96:	87 94       	ror	r8
     e98:	f7 f8       	bld	r15, 7
		ldi		count,		152; s[1] ->s[19]
     e9a:	88 e9       	ldi	r24, 0x98	; 152
		ldi		count2,		32 ;
     e9c:	90 e2       	ldi	r25, 0x20	; 32
		first_load_temp; 
     e9e:	a8 0f       	add	r26, r24
     ea0:	b1 1d       	adc	r27, r1
     ea2:	0d 91       	ld	r16, X+
     ea4:	1d 91       	ld	r17, X+
     ea6:	2d 91       	ld	r18, X+
     ea8:	3d 91       	ld	r19, X+
     eaa:	4d 91       	ld	r20, X+
     eac:	5d 91       	ld	r21, X+
     eae:	6d 91       	ld	r22, X+
     eb0:	7d 91       	ld	r23, X+
     eb2:	87 0d       	add	r24, r7
     eb4:	a8 1b       	sub	r26, r24
     eb6:	b1 09       	sbc	r27, r1
     eb8:	c9 0f       	add	r28, r25
     eba:	d1 1d       	adc	r29, r1
     ebc:	09 90       	ld	r0, Y+
     ebe:	00 25       	eor	r16, r0
     ec0:	09 90       	ld	r0, Y+
     ec2:	10 25       	eor	r17, r0
     ec4:	09 90       	ld	r0, Y+
     ec6:	20 25       	eor	r18, r0
     ec8:	09 90       	ld	r0, Y+
     eca:	30 25       	eor	r19, r0
     ecc:	09 90       	ld	r0, Y+
     ece:	40 25       	eor	r20, r0
     ed0:	09 90       	ld	r0, Y+
     ed2:	50 25       	eor	r21, r0
     ed4:	09 90       	ld	r0, Y+
     ed6:	60 25       	eor	r22, r0
     ed8:	09 90       	ld	r0, Y+
     eda:	70 25       	eor	r23, r0
     edc:	97 0d       	add	r25, r7
     ede:	c9 1b       	sub	r28, r25
     ee0:	d1 09       	sbc	r29, r1
		ldi		count,		152 ; s[1] ->s[19]
     ee2:	88 e9       	ldi	r24, 0x98	; 152
		rotate64_2byte_right_state ; s[1] ->s[19] clear
     ee4:	a8 0f       	add	r26, r24
     ee6:	b1 1d       	adc	r27, r1
     ee8:	ed 92       	st	X+, r14
     eea:	fd 92       	st	X+, r15
     eec:	8d 92       	st	X+, r8
     eee:	9d 92       	st	X+, r9
     ef0:	ad 92       	st	X+, r10
     ef2:	bd 92       	st	X+, r11
     ef4:	cd 92       	st	X+, r12
     ef6:	dd 92       	st	X+, r13
     ef8:	87 0d       	add	r24, r7
     efa:	a8 1b       	sub	r26, r24
     efc:	b1 09       	sbc	r27, r1

		rotate64_1bit_left_temp 
     efe:	00 0f       	add	r16, r16
     f00:	11 1f       	adc	r17, r17
     f02:	22 1f       	adc	r18, r18
     f04:	33 1f       	adc	r19, r19
     f06:	44 1f       	adc	r20, r20
     f08:	55 1f       	adc	r21, r21
     f0a:	66 1f       	adc	r22, r22
     f0c:	77 1f       	adc	r23, r23
     f0e:	01 1d       	adc	r16, r1
		ldi		count,		18; s[19]->s[6]
     f10:	82 e1       	ldi	r24, 0x12	; 18
		ldi		count2,		8 ;
     f12:	98 e0       	ldi	r25, 0x08	; 8
		first_load_state;	s[6]
     f14:	a8 0f       	add	r26, r24
     f16:	b1 1d       	adc	r27, r1
     f18:	8d 90       	ld	r8, X+
     f1a:	9d 90       	ld	r9, X+
     f1c:	ad 90       	ld	r10, X+
     f1e:	bd 90       	ld	r11, X+
     f20:	cd 90       	ld	r12, X+
     f22:	dd 90       	ld	r13, X+
     f24:	ed 90       	ld	r14, X+
     f26:	fd 90       	ld	r15, X+
     f28:	87 0d       	add	r24, r7
     f2a:	a8 1b       	sub	r26, r24
     f2c:	b1 09       	sbc	r27, r1
     f2e:	c9 0f       	add	r28, r25
     f30:	d1 1d       	adc	r29, r1
     f32:	09 90       	ld	r0, Y+
     f34:	80 24       	eor	r8, r0
     f36:	09 90       	ld	r0, Y+
     f38:	90 24       	eor	r9, r0
     f3a:	09 90       	ld	r0, Y+
     f3c:	a0 24       	eor	r10, r0
     f3e:	09 90       	ld	r0, Y+
     f40:	b0 24       	eor	r11, r0
     f42:	09 90       	ld	r0, Y+
     f44:	c0 24       	eor	r12, r0
     f46:	09 90       	ld	r0, Y+
     f48:	d0 24       	eor	r13, r0
     f4a:	09 90       	ld	r0, Y+
     f4c:	e0 24       	eor	r14, r0
     f4e:	09 90       	ld	r0, Y+
     f50:	f0 24       	eor	r15, r0
     f52:	97 0d       	add	r25, r7
     f54:	c9 1b       	sub	r28, r25
     f56:	d1 09       	sbc	r29, r1
		ldi		count,		8; s[19]->s[6]
     f58:	88 e0       	ldi	r24, 0x08	; 8
		rotate64_5byte_right_temp ; s[19] ->s[6] clear
     f5a:	a8 0f       	add	r26, r24
     f5c:	b1 1d       	adc	r27, r1
     f5e:	3d 93       	st	X+, r19
     f60:	4d 93       	st	X+, r20
     f62:	5d 93       	st	X+, r21
     f64:	6d 93       	st	X+, r22
     f66:	7d 93       	st	X+, r23
     f68:	0d 93       	st	X+, r16
     f6a:	1d 93       	st	X+, r17
     f6c:	2d 93       	st	X+, r18
     f6e:	87 0d       	add	r24, r7
     f70:	a8 1b       	sub	r26, r24
     f72:	b1 09       	sbc	r27, r1

		rotate64_3bit_left_state
     f74:	88 0c       	add	r8, r8
     f76:	99 1c       	adc	r9, r9
     f78:	aa 1c       	adc	r10, r10
     f7a:	bb 1c       	adc	r11, r11
     f7c:	cc 1c       	adc	r12, r12
     f7e:	dd 1c       	adc	r13, r13
     f80:	ee 1c       	adc	r14, r14
     f82:	ff 1c       	adc	r15, r15
     f84:	81 1c       	adc	r8, r1
     f86:	88 0c       	add	r8, r8
     f88:	99 1c       	adc	r9, r9
     f8a:	aa 1c       	adc	r10, r10
     f8c:	bb 1c       	adc	r11, r11
     f8e:	cc 1c       	adc	r12, r12
     f90:	dd 1c       	adc	r13, r13
     f92:	ee 1c       	adc	r14, r14
     f94:	ff 1c       	adc	r15, r15
     f96:	81 1c       	adc	r8, r1
     f98:	88 0c       	add	r8, r8
     f9a:	99 1c       	adc	r9, r9
     f9c:	aa 1c       	adc	r10, r10
     f9e:	bb 1c       	adc	r11, r11
     fa0:	cc 1c       	adc	r12, r12
     fa2:	dd 1c       	adc	r13, r13
     fa4:	ee 1c       	adc	r14, r14
     fa6:	ff 1c       	adc	r15, r15
     fa8:	81 1c       	adc	r8, r1
		ldi		count,		64; s[6] ->s[8]
     faa:	80 e4       	ldi	r24, 0x40	; 64
		ldi		count2,		24 ;
     fac:	98 e1       	ldi	r25, 0x18	; 24
		first_load_temp; s[8]
     fae:	a8 0f       	add	r26, r24
     fb0:	b1 1d       	adc	r27, r1
     fb2:	0d 91       	ld	r16, X+
     fb4:	1d 91       	ld	r17, X+
     fb6:	2d 91       	ld	r18, X+
     fb8:	3d 91       	ld	r19, X+
     fba:	4d 91       	ld	r20, X+
     fbc:	5d 91       	ld	r21, X+
     fbe:	6d 91       	ld	r22, X+
     fc0:	7d 91       	ld	r23, X+
     fc2:	87 0d       	add	r24, r7
     fc4:	a8 1b       	sub	r26, r24
     fc6:	b1 09       	sbc	r27, r1
     fc8:	c9 0f       	add	r28, r25
     fca:	d1 1d       	adc	r29, r1
     fcc:	09 90       	ld	r0, Y+
     fce:	00 25       	eor	r16, r0
     fd0:	09 90       	ld	r0, Y+
     fd2:	10 25       	eor	r17, r0
     fd4:	09 90       	ld	r0, Y+
     fd6:	20 25       	eor	r18, r0
     fd8:	09 90       	ld	r0, Y+
     fda:	30 25       	eor	r19, r0
     fdc:	09 90       	ld	r0, Y+
     fde:	40 25       	eor	r20, r0
     fe0:	09 90       	ld	r0, Y+
     fe2:	50 25       	eor	r21, r0
     fe4:	09 90       	ld	r0, Y+
     fe6:	60 25       	eor	r22, r0
     fe8:	09 90       	ld	r0, Y+
     fea:	70 25       	eor	r23, r0
     fec:	97 0d       	add	r25, r7
     fee:	c9 1b       	sub	r28, r25
     ff0:	d1 09       	sbc	r29, r1
		ldi		count,		64 ; s[6] ->s[8]
     ff2:	80 e4       	ldi	r24, 0x40	; 64
		rotate64_0byte_right_state ; s[6] ->s[8] clear
     ff4:	a8 0f       	add	r26, r24
     ff6:	b1 1d       	adc	r27, r1
     ff8:	8d 92       	st	X+, r8
     ffa:	9d 92       	st	X+, r9
     ffc:	ad 92       	st	X+, r10
     ffe:	bd 92       	st	X+, r11
    1000:	cd 92       	st	X+, r12
    1002:	dd 92       	st	X+, r13
    1004:	ed 92       	st	X+, r14
    1006:	fd 92       	st	X+, r15
    1008:	87 0d       	add	r24, r7
    100a:	a8 1b       	sub	r26, r24
    100c:	b1 09       	sbc	r27, r1

		rotate64_4bit_left_temp 
    100e:	00 0f       	add	r16, r16
    1010:	11 1f       	adc	r17, r17
    1012:	22 1f       	adc	r18, r18
    1014:	33 1f       	adc	r19, r19
    1016:	44 1f       	adc	r20, r20
    1018:	55 1f       	adc	r21, r21
    101a:	66 1f       	adc	r22, r22
    101c:	77 1f       	adc	r23, r23
    101e:	01 1d       	adc	r16, r1
    1020:	00 0f       	add	r16, r16
    1022:	11 1f       	adc	r17, r17
    1024:	22 1f       	adc	r18, r18
    1026:	33 1f       	adc	r19, r19
    1028:	44 1f       	adc	r20, r20
    102a:	55 1f       	adc	r21, r21
    102c:	66 1f       	adc	r22, r22
    102e:	77 1f       	adc	r23, r23
    1030:	01 1d       	adc	r16, r1
    1032:	00 0f       	add	r16, r16
    1034:	11 1f       	adc	r17, r17
    1036:	22 1f       	adc	r18, r18
    1038:	33 1f       	adc	r19, r19
    103a:	44 1f       	adc	r20, r20
    103c:	55 1f       	adc	r21, r21
    103e:	66 1f       	adc	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	01 1d       	adc	r16, r1
    1044:	00 0f       	add	r16, r16
    1046:	11 1f       	adc	r17, r17
    1048:	22 1f       	adc	r18, r18
    104a:	33 1f       	adc	r19, r19
    104c:	44 1f       	adc	r20, r20
    104e:	55 1f       	adc	r21, r21
    1050:	66 1f       	adc	r22, r22
    1052:	77 1f       	adc	r23, r23
    1054:	01 1d       	adc	r16, r1
		ldi		count,		104; s[8]->s[13]
    1056:	88 e6       	ldi	r24, 0x68	; 104
		ldi		count2,		24 ;
    1058:	98 e1       	ldi	r25, 0x18	; 24
		first_load_state;	s[13]
    105a:	a8 0f       	add	r26, r24
    105c:	b1 1d       	adc	r27, r1
    105e:	8d 90       	ld	r8, X+
    1060:	9d 90       	ld	r9, X+
    1062:	ad 90       	ld	r10, X+
    1064:	bd 90       	ld	r11, X+
    1066:	cd 90       	ld	r12, X+
    1068:	dd 90       	ld	r13, X+
    106a:	ed 90       	ld	r14, X+
    106c:	fd 90       	ld	r15, X+
    106e:	87 0d       	add	r24, r7
    1070:	a8 1b       	sub	r26, r24
    1072:	b1 09       	sbc	r27, r1
    1074:	c9 0f       	add	r28, r25
    1076:	d1 1d       	adc	r29, r1
    1078:	09 90       	ld	r0, Y+
    107a:	80 24       	eor	r8, r0
    107c:	09 90       	ld	r0, Y+
    107e:	90 24       	eor	r9, r0
    1080:	09 90       	ld	r0, Y+
    1082:	a0 24       	eor	r10, r0
    1084:	09 90       	ld	r0, Y+
    1086:	b0 24       	eor	r11, r0
    1088:	09 90       	ld	r0, Y+
    108a:	c0 24       	eor	r12, r0
    108c:	09 90       	ld	r0, Y+
    108e:	d0 24       	eor	r13, r0
    1090:	09 90       	ld	r0, Y+
    1092:	e0 24       	eor	r14, r0
    1094:	09 90       	ld	r0, Y+
    1096:	f0 24       	eor	r15, r0
    1098:	97 0d       	add	r25, r7
    109a:	c9 1b       	sub	r28, r25
    109c:	d1 09       	sbc	r29, r1
		ldi		count,		104; s[8]->s[13]
    109e:	88 e6       	ldi	r24, 0x68	; 104
		rotate64_3byte_right_temp ; s[8] ->s[13] clear
    10a0:	a8 0f       	add	r26, r24
    10a2:	b1 1d       	adc	r27, r1
    10a4:	5d 93       	st	X+, r21
    10a6:	6d 93       	st	X+, r22
    10a8:	7d 93       	st	X+, r23
    10aa:	0d 93       	st	X+, r16
    10ac:	1d 93       	st	X+, r17
    10ae:	2d 93       	st	X+, r18
    10b0:	3d 93       	st	X+, r19
    10b2:	4d 93       	st	X+, r20
    10b4:	87 0d       	add	r24, r7
    10b6:	a8 1b       	sub	r26, r24
    10b8:	b1 09       	sbc	r27, r1

		rotate64_4bit_left_state
    10ba:	88 0c       	add	r8, r8
    10bc:	99 1c       	adc	r9, r9
    10be:	aa 1c       	adc	r10, r10
    10c0:	bb 1c       	adc	r11, r11
    10c2:	cc 1c       	adc	r12, r12
    10c4:	dd 1c       	adc	r13, r13
    10c6:	ee 1c       	adc	r14, r14
    10c8:	ff 1c       	adc	r15, r15
    10ca:	81 1c       	adc	r8, r1
    10cc:	88 0c       	add	r8, r8
    10ce:	99 1c       	adc	r9, r9
    10d0:	aa 1c       	adc	r10, r10
    10d2:	bb 1c       	adc	r11, r11
    10d4:	cc 1c       	adc	r12, r12
    10d6:	dd 1c       	adc	r13, r13
    10d8:	ee 1c       	adc	r14, r14
    10da:	ff 1c       	adc	r15, r15
    10dc:	81 1c       	adc	r8, r1
    10de:	88 0c       	add	r8, r8
    10e0:	99 1c       	adc	r9, r9
    10e2:	aa 1c       	adc	r10, r10
    10e4:	bb 1c       	adc	r11, r11
    10e6:	cc 1c       	adc	r12, r12
    10e8:	dd 1c       	adc	r13, r13
    10ea:	ee 1c       	adc	r14, r14
    10ec:	ff 1c       	adc	r15, r15
    10ee:	81 1c       	adc	r8, r1
    10f0:	88 0c       	add	r8, r8
    10f2:	99 1c       	adc	r9, r9
    10f4:	aa 1c       	adc	r10, r10
    10f6:	bb 1c       	adc	r11, r11
    10f8:	cc 1c       	adc	r12, r12
    10fa:	dd 1c       	adc	r13, r13
    10fc:	ee 1c       	adc	r14, r14
    10fe:	ff 1c       	adc	r15, r15
    1100:	81 1c       	adc	r8, r1
		ldi		count,		16; s[13] ->s[2]
    1102:	80 e1       	ldi	r24, 0x10	; 16
		ldi		count2,		16 ;
    1104:	90 e1       	ldi	r25, 0x10	; 16
		first_load_temp; s[2]
    1106:	a8 0f       	add	r26, r24
    1108:	b1 1d       	adc	r27, r1
    110a:	0d 91       	ld	r16, X+
    110c:	1d 91       	ld	r17, X+
    110e:	2d 91       	ld	r18, X+
    1110:	3d 91       	ld	r19, X+
    1112:	4d 91       	ld	r20, X+
    1114:	5d 91       	ld	r21, X+
    1116:	6d 91       	ld	r22, X+
    1118:	7d 91       	ld	r23, X+
    111a:	87 0d       	add	r24, r7
    111c:	a8 1b       	sub	r26, r24
    111e:	b1 09       	sbc	r27, r1
    1120:	c9 0f       	add	r28, r25
    1122:	d1 1d       	adc	r29, r1
    1124:	09 90       	ld	r0, Y+
    1126:	00 25       	eor	r16, r0
    1128:	09 90       	ld	r0, Y+
    112a:	10 25       	eor	r17, r0
    112c:	09 90       	ld	r0, Y+
    112e:	20 25       	eor	r18, r0
    1130:	09 90       	ld	r0, Y+
    1132:	30 25       	eor	r19, r0
    1134:	09 90       	ld	r0, Y+
    1136:	40 25       	eor	r20, r0
    1138:	09 90       	ld	r0, Y+
    113a:	50 25       	eor	r21, r0
    113c:	09 90       	ld	r0, Y+
    113e:	60 25       	eor	r22, r0
    1140:	09 90       	ld	r0, Y+
    1142:	70 25       	eor	r23, r0
    1144:	97 0d       	add	r25, r7
    1146:	c9 1b       	sub	r28, r25
    1148:	d1 09       	sbc	r29, r1
		ldi		count,		16 ; s[13] ->s[2]
    114a:	80 e1       	ldi	r24, 0x10	; 16
		rotate64_6byte_right_state ; s[13] ->s[2] clear
    114c:	a8 0f       	add	r26, r24
    114e:	b1 1d       	adc	r27, r1
    1150:	ad 92       	st	X+, r10
    1152:	bd 92       	st	X+, r11
    1154:	cd 92       	st	X+, r12
    1156:	dd 92       	st	X+, r13
    1158:	ed 92       	st	X+, r14
    115a:	fd 92       	st	X+, r15
    115c:	8d 92       	st	X+, r8
    115e:	9d 92       	st	X+, r9
    1160:	87 0d       	add	r24, r7
    1162:	a8 1b       	sub	r26, r24
    1164:	b1 09       	sbc	r27, r1

		rotate64_1bit_right_temp 
    1166:	00 fb       	bst	r16, 0
    1168:	77 95       	ror	r23
    116a:	67 95       	ror	r22
    116c:	57 95       	ror	r21
    116e:	47 95       	ror	r20
    1170:	37 95       	ror	r19
    1172:	27 95       	ror	r18
    1174:	17 95       	ror	r17
    1176:	07 95       	ror	r16
    1178:	77 f9       	bld	r23, 7
		ldi		count,		112   ; s[2]->s[14]
    117a:	80 e7       	ldi	r24, 0x70	; 112
		ldi		count2,		32  ;
    117c:	90 e2       	ldi	r25, 0x20	; 32
		first_load_state;	s[14]
    117e:	a8 0f       	add	r26, r24
    1180:	b1 1d       	adc	r27, r1
    1182:	8d 90       	ld	r8, X+
    1184:	9d 90       	ld	r9, X+
    1186:	ad 90       	ld	r10, X+
    1188:	bd 90       	ld	r11, X+
    118a:	cd 90       	ld	r12, X+
    118c:	dd 90       	ld	r13, X+
    118e:	ed 90       	ld	r14, X+
    1190:	fd 90       	ld	r15, X+
    1192:	87 0d       	add	r24, r7
    1194:	a8 1b       	sub	r26, r24
    1196:	b1 09       	sbc	r27, r1
    1198:	c9 0f       	add	r28, r25
    119a:	d1 1d       	adc	r29, r1
    119c:	09 90       	ld	r0, Y+
    119e:	80 24       	eor	r8, r0
    11a0:	09 90       	ld	r0, Y+
    11a2:	90 24       	eor	r9, r0
    11a4:	09 90       	ld	r0, Y+
    11a6:	a0 24       	eor	r10, r0
    11a8:	09 90       	ld	r0, Y+
    11aa:	b0 24       	eor	r11, r0
    11ac:	09 90       	ld	r0, Y+
    11ae:	c0 24       	eor	r12, r0
    11b0:	09 90       	ld	r0, Y+
    11b2:	d0 24       	eor	r13, r0
    11b4:	09 90       	ld	r0, Y+
    11b6:	e0 24       	eor	r14, r0
    11b8:	09 90       	ld	r0, Y+
    11ba:	f0 24       	eor	r15, r0
    11bc:	97 0d       	add	r25, r7
    11be:	c9 1b       	sub	r28, r25
    11c0:	d1 09       	sbc	r29, r1
		ldi		count,		112   ; s[2]->s[14]
    11c2:	80 e7       	ldi	r24, 0x70	; 112
		rotate64_0byte_right_temp ; s[2] ->s[14] clear
    11c4:	a8 0f       	add	r26, r24
    11c6:	b1 1d       	adc	r27, r1
    11c8:	0d 93       	st	X+, r16
    11ca:	1d 93       	st	X+, r17
    11cc:	2d 93       	st	X+, r18
    11ce:	3d 93       	st	X+, r19
    11d0:	4d 93       	st	X+, r20
    11d2:	5d 93       	st	X+, r21
    11d4:	6d 93       	st	X+, r22
    11d6:	7d 93       	st	X+, r23
    11d8:	87 0d       	add	r24, r7
    11da:	a8 1b       	sub	r26, r24
    11dc:	b1 09       	sbc	r27, r1

		rcall last_Rho_Process
    11de:	86 d0       	rcall	.+268    	; 0x12ec <last_Rho_Process>



		//--------Chi setting
		movw		rX,		therx
    11e0:	d2 01       	movw	r26, r4
		movw		therx,	rY
    11e2:	2e 01       	movw	r4, r28
		movw		rY,		rX
    11e4:	ed 01       	movw	r28, r26
		movw		rX,		therx
    11e6:	d2 01       	movw	r26, r4


		ldi		count2,	5
    11e8:	95 e0       	ldi	r25, 0x05	; 5

000011ea <Chi_Lota_Setting>:

Chi_Lota_Setting:
	
		ldi		count,	8	
    11ea:	88 e0       	ldi	r24, 0x08	; 8

000011ec <Chi_Lota>:

Chi_Lota:

		ld      	rTemp0, Y
    11ec:	08 81       	ld	r16, Y
		ldd     	rTemp1, Y+8
    11ee:	18 85       	ldd	r17, Y+8	; 0x08
		ldd     	rTemp2, Y+16
    11f0:	28 89       	ldd	r18, Y+16	; 0x10
		ldd     	rTemp3, Y+24
    11f2:	38 8d       	ldd	r19, Y+24	; 0x18
		ldd     	rTemp4, Y+32
    11f4:	48 a1       	ldd	r20, Y+32	; 0x20
	
;*p = t = a0 ^ ((~a1) & a2); c0 ^= t;

		mov     	load, rTemp1
    11f6:	01 2e       	mov	r0, r17
    		com     	load
    11f8:	00 94       	com	r0
    		and     	load, rTemp2
    11fa:	02 22       	and	r0, r18
   		eor    		load, rTemp0
    11fc:	00 26       	eor	r0, r16
    		eor     	rTemp0, load
    11fe:	00 25       	eor	r16, r0
    		st      	Y, load
    1200:	08 82       	st	Y, r0

;*(p+8) = t = a1 ^ ((~a2) & a3); c1 ^= t;

		 mov     	load, rTemp2
    1202:	02 2e       	mov	r0, r18
		 com     	load
    1204:	00 94       	com	r0
		 and     	load, rTemp3
    1206:	03 22       	and	r0, r19
		 eor     	load, rTemp1
    1208:	01 26       	eor	r0, r17
		 eor     	rTemp1, load
    120a:	10 25       	eor	r17, r0
		 std     	Y+8, r0
    120c:	08 86       	std	Y+8, r0	; 0x08

;*(p+16) = a2 ^= ((~a3) & a4); c2 ^= a2;

    		mov     	load, rTemp3
    120e:	03 2e       	mov	r0, r19
    		com     	load
    1210:	00 94       	com	r0
    		and     	load, rTemp4
    1212:	04 22       	and	r0, r20
    		eor     	load, rTemp2
    1214:	02 26       	eor	r0, r18
    		eor     	rTemp2, load
    1216:	20 25       	eor	r18, r0
    		std     	Y+16, load
    1218:	08 8a       	std	Y+16, r0	; 0x10

;*(p+24) = a3 ^= ((~a4) & a0); c3 ^= a3;

    		mov     	load, rTemp4
    121a:	04 2e       	mov	r0, r20
    		com     	load
    121c:	00 94       	com	r0
    		and     	load, rTemp0
    121e:	00 22       	and	r0, r16
    		eor     	load, rTemp3
    1220:	03 26       	eor	r0, r19
    		eor     	rTemp3, load
    1222:	30 25       	eor	r19, r0
    		std     	Y+24, load
    1224:	08 8e       	std	Y+24, r0	; 0x18

;*(p+32) = a4 ^= ((~a0) & a1); c4 ^= a4;

    		com     	rTemp0
    1226:	00 95       	com	r16
    		and     	rTemp0, rTemp1
    1228:	01 23       	and	r16, r17
    		eor     	rTemp0, rTemp4
    122a:	04 27       	eor	r16, r20
    		eor     	rTemp4, rTemp0
    122c:	40 27       	eor	r20, r16
    		std     	Y+32, rTemp0
    122e:	08 a3       	std	Y+32, r16	; 0x20

00001230 <Chi_Condition>:

Chi_Condition:

		adiw   		rY, 8
    1230:	28 96       	adiw	r28, 0x08	; 8
		adc		rY+1,	zero
    1232:	d1 1d       	adc	r29, r1
    		dec     	count
    1234:	8a 95       	dec	r24
    		brne    	Chi_Lota
    1236:	d1 f6       	brne	.-76     	; 0x11ec <Chi_Lota>

		adiw		rY,32
    1238:	a0 96       	adiw	r28, 0x20	; 32
		adc		rY+1,	zero
    123a:	d1 1d       	adc	r29, r1
		dec		count2
    123c:	9a 95       	dec	r25
		brne		Chi_Lota_Setting
    123e:	a9 f6       	brne	.-86     	; 0x11ea <Chi_Lota_Setting>

		movw		rX,	rY
    1240:	de 01       	movw	r26, r28
		movw		rY,	therx
    1242:	e2 01       	movw	r28, r4

		movw		therx,	rZ
    1244:	2f 01       	movw	r4, r30

00001246 <Lota>:

Lota:

		pop		r31
    1246:	ff 91       	pop	r31
		pop		r30
    1248:	ef 91       	pop	r30

		ldi		count,	96
    124a:	80 e6       	ldi	r24, 0x60	; 96
		adiw		rY,	count
    124c:	68 96       	adiw	r28, 0x18	; 24
		adc		rY,	zero
    124e:	c1 1d       	adc	r28, r1

		ld		rState0,	Y
    1250:	88 80       	ld	r8, Y
		ldd		rState1,	Y+1
    1252:	99 80       	ldd	r9, Y+1	; 0x01
		ldd		rState2,	Y+2
    1254:	aa 80       	ldd	r10, Y+2	; 0x02
		ldd		rState3,	Y+3
    1256:	bb 80       	ldd	r11, Y+3	; 0x03
		ldd		rState4,	Y+4
    1258:	cc 80       	ldd	r12, Y+4	; 0x04
		ldd		rState5,	Y+5
    125a:	dd 80       	ldd	r13, Y+5	; 0x05
		ldd		rState6,	Y+6
    125c:	ee 80       	ldd	r14, Y+6	; 0x06
		ldd		rState7,	Y+7
    125e:	ff 80       	ldd	r15, Y+7	; 0x07

		lpm		rTemp0,		Z+
    1260:	05 91       	lpm	r16, Z+
		lpm		rTemp1,		Z+
    1262:	15 91       	lpm	r17, Z+
		lpm		rTemp2,		Z+
    1264:	25 91       	lpm	r18, Z+
		lpm		rTemp3,		Z+
    1266:	35 91       	lpm	r19, Z+
		lpm		rTemp4,		Z+
    1268:	45 91       	lpm	r20, Z+
		lpm		rTemp5,		Z+
    126a:	55 91       	lpm	r21, Z+
		lpm		rTemp6,		Z+
    126c:	65 91       	lpm	r22, Z+
		lpm		rTemp7,		Z+
    126e:	75 91       	lpm	r23, Z+

		initial_theta_eor_form_temp_to_state
    1270:	80 26       	eor	r8, r16
    1272:	91 26       	eor	r9, r17
    1274:	a2 26       	eor	r10, r18
    1276:	b3 26       	eor	r11, r19
    1278:	c4 26       	eor	r12, r20
    127a:	d5 26       	eor	r13, r21
    127c:	e6 26       	eor	r14, r22
    127e:	f7 26       	eor	r15, r23

		st		Y,			rState0
    1280:	88 82       	st	Y, r8
		std		Y+1,		rState1
    1282:	99 82       	std	Y+1, r9	; 0x01
		std		Y+2,		rState2
    1284:	aa 82       	std	Y+2, r10	; 0x02
		std		Y+3,		rState3
    1286:	bb 82       	std	Y+3, r11	; 0x03
		std		Y+4,		rState4
    1288:	cc 82       	std	Y+4, r12	; 0x04
		std		Y+5,		rState5
    128a:	dd 82       	std	Y+5, r13	; 0x05
		std		Y+6,		rState6
    128c:	ee 82       	std	Y+6, r14	; 0x06
		std		Y+7,		rState7
    128e:	ff 82       	std	Y+7, r15	; 0x07

		sbiw		rY,		count
    1290:	68 97       	sbiw	r28, 0x18	; 24
		sbc		rY+1,		zero
    1292:	d1 09       	sbc	r29, r1
		push		r30
    1294:	ef 93       	push	r30
		push		r31
    1296:	ff 93       	push	r31

		movw		rZ,		therx
    1298:	f2 01       	movw	r30, r4
		movw		therx,		rX
    129a:	2d 01       	movw	r4, r26

0000129c <END_Condtion>:
	
END_Condtion:
		dec		main_count
    129c:	7a 94       	dec	r7
		breq 		Keccack_END
    129e:	09 f0       	breq	.+2      	; 0x12a2 <Keccack_END>
		rjmp 		start
    12a0:	3b c8       	rjmp	.-3978   	; 0x318 <start>

000012a2 <Keccack_END>:

Keccack_END:
		pop		r31
    12a2:	ff 91       	pop	r31
		pop		r30
    12a4:	ef 91       	pop	r30
		pop 		r22
    12a6:	6f 91       	pop	r22
		pop 		r23
    12a8:	7f 91       	pop	r23
		pop_range 0, 31
    12aa:	ff 91       	pop	r31
    12ac:	ef 91       	pop	r30
    12ae:	df 91       	pop	r29
    12b0:	cf 91       	pop	r28
    12b2:	bf 91       	pop	r27
    12b4:	af 91       	pop	r26
    12b6:	9f 91       	pop	r25
    12b8:	8f 91       	pop	r24
    12ba:	7f 91       	pop	r23
    12bc:	6f 91       	pop	r22
    12be:	5f 91       	pop	r21
    12c0:	4f 91       	pop	r20
    12c2:	3f 91       	pop	r19
    12c4:	2f 91       	pop	r18
    12c6:	1f 91       	pop	r17
    12c8:	0f 91       	pop	r16
    12ca:	ff 90       	pop	r15
    12cc:	ef 90       	pop	r14
    12ce:	df 90       	pop	r13
    12d0:	cf 90       	pop	r12
    12d2:	bf 90       	pop	r11
    12d4:	af 90       	pop	r10
    12d6:	9f 90       	pop	r9
    12d8:	8f 90       	pop	r8
    12da:	7f 90       	pop	r7
    12dc:	6f 90       	pop	r6
    12de:	5f 90       	pop	r5
    12e0:	4f 90       	pop	r4
    12e2:	3f 90       	pop	r3
    12e4:	2f 90       	pop	r2
    12e6:	1f 90       	pop	r1
    12e8:	0f 90       	pop	r0
		
		ret
    12ea:	08 95       	ret

000012ec <last_Rho_Process>:


last_Rho_Process:

		rotate64_1bit_right_state
    12ec:	80 fa       	bst	r8, 0
    12ee:	f7 94       	ror	r15
    12f0:	e7 94       	ror	r14
    12f2:	d7 94       	ror	r13
    12f4:	c7 94       	ror	r12
    12f6:	b7 94       	ror	r11
    12f8:	a7 94       	ror	r10
    12fa:	97 94       	ror	r9
    12fc:	87 94       	ror	r8
    12fe:	f7 f8       	bld	r15, 7
		ldi		count,		136; s[14] ->s[17]
    1300:	88 e8       	ldi	r24, 0x88	; 136
		ldi		count2,		16 ;
    1302:	90 e1       	ldi	r25, 0x10	; 16
		first_load_temp; s[17]
    1304:	a8 0f       	add	r26, r24
    1306:	b1 1d       	adc	r27, r1
    1308:	0d 91       	ld	r16, X+
    130a:	1d 91       	ld	r17, X+
    130c:	2d 91       	ld	r18, X+
    130e:	3d 91       	ld	r19, X+
    1310:	4d 91       	ld	r20, X+
    1312:	5d 91       	ld	r21, X+
    1314:	6d 91       	ld	r22, X+
    1316:	7d 91       	ld	r23, X+
    1318:	87 0d       	add	r24, r7
    131a:	a8 1b       	sub	r26, r24
    131c:	b1 09       	sbc	r27, r1
    131e:	c9 0f       	add	r28, r25
    1320:	d1 1d       	adc	r29, r1
    1322:	09 90       	ld	r0, Y+
    1324:	00 25       	eor	r16, r0
    1326:	09 90       	ld	r0, Y+
    1328:	10 25       	eor	r17, r0
    132a:	09 90       	ld	r0, Y+
    132c:	20 25       	eor	r18, r0
    132e:	09 90       	ld	r0, Y+
    1330:	30 25       	eor	r19, r0
    1332:	09 90       	ld	r0, Y+
    1334:	40 25       	eor	r20, r0
    1336:	09 90       	ld	r0, Y+
    1338:	50 25       	eor	r21, r0
    133a:	09 90       	ld	r0, Y+
    133c:	60 25       	eor	r22, r0
    133e:	09 90       	ld	r0, Y+
    1340:	70 25       	eor	r23, r0
    1342:	97 0d       	add	r25, r7
    1344:	c9 1b       	sub	r28, r25
    1346:	d1 09       	sbc	r29, r1
		ldi		count,		136 ; s[14] ->s[17]
    1348:	88 e8       	ldi	r24, 0x88	; 136
		rotate64_0byte_right_state ; s[14] ->s[17] clear
    134a:	a8 0f       	add	r26, r24
    134c:	b1 1d       	adc	r27, r1
    134e:	8d 92       	st	X+, r8
    1350:	9d 92       	st	X+, r9
    1352:	ad 92       	st	X+, r10
    1354:	bd 92       	st	X+, r11
    1356:	cd 92       	st	X+, r12
    1358:	dd 92       	st	X+, r13
    135a:	ed 92       	st	X+, r14
    135c:	fd 92       	st	X+, r15
    135e:	87 0d       	add	r24, r7
    1360:	a8 1b       	sub	r26, r24
    1362:	b1 09       	sbc	r27, r1

		rotate64_2bit_left_temp
    1364:	00 0f       	add	r16, r16
    1366:	11 1f       	adc	r17, r17
    1368:	22 1f       	adc	r18, r18
    136a:	33 1f       	adc	r19, r19
    136c:	44 1f       	adc	r20, r20
    136e:	55 1f       	adc	r21, r21
    1370:	66 1f       	adc	r22, r22
    1372:	77 1f       	adc	r23, r23
    1374:	01 1d       	adc	r16, r1
    1376:	00 0f       	add	r16, r16
    1378:	11 1f       	adc	r17, r17
    137a:	22 1f       	adc	r18, r18
    137c:	33 1f       	adc	r19, r19
    137e:	44 1f       	adc	r20, r20
    1380:	55 1f       	adc	r21, r21
    1382:	66 1f       	adc	r22, r22
    1384:	77 1f       	adc	r23, r23
    1386:	01 1d       	adc	r16, r1
		ldi		count,	8;	s[17]->S[1]
    1388:	88 e0       	ldi	r24, 0x08	; 8
		rotate64_0byte_right_temp; s[17]->S[1] clear
    138a:	a8 0f       	add	r26, r24
    138c:	b1 1d       	adc	r27, r1
    138e:	0d 93       	st	X+, r16
    1390:	1d 93       	st	X+, r17
    1392:	2d 93       	st	X+, r18
    1394:	3d 93       	st	X+, r19
    1396:	4d 93       	st	X+, r20
    1398:	5d 93       	st	X+, r21
    139a:	6d 93       	st	X+, r22
    139c:	7d 93       	st	X+, r23
    139e:	87 0d       	add	r24, r7
    13a0:	a8 1b       	sub	r26, r24
    13a2:	b1 09       	sbc	r27, r1


		ldi		count,	96; S[12]
    13a4:	80 e6       	ldi	r24, 0x60	; 96
		first_load_temp
    13a6:	a8 0f       	add	r26, r24
    13a8:	b1 1d       	adc	r27, r1
    13aa:	0d 91       	ld	r16, X+
    13ac:	1d 91       	ld	r17, X+
    13ae:	2d 91       	ld	r18, X+
    13b0:	3d 91       	ld	r19, X+
    13b2:	4d 91       	ld	r20, X+
    13b4:	5d 91       	ld	r21, X+
    13b6:	6d 91       	ld	r22, X+
    13b8:	7d 91       	ld	r23, X+
    13ba:	87 0d       	add	r24, r7
    13bc:	a8 1b       	sub	r26, r24
    13be:	b1 09       	sbc	r27, r1
    13c0:	c9 0f       	add	r28, r25
    13c2:	d1 1d       	adc	r29, r1
    13c4:	09 90       	ld	r0, Y+
    13c6:	00 25       	eor	r16, r0
    13c8:	09 90       	ld	r0, Y+
    13ca:	10 25       	eor	r17, r0
    13cc:	09 90       	ld	r0, Y+
    13ce:	20 25       	eor	r18, r0
    13d0:	09 90       	ld	r0, Y+
    13d2:	30 25       	eor	r19, r0
    13d4:	09 90       	ld	r0, Y+
    13d6:	40 25       	eor	r20, r0
    13d8:	09 90       	ld	r0, Y+
    13da:	50 25       	eor	r21, r0
    13dc:	09 90       	ld	r0, Y+
    13de:	60 25       	eor	r22, r0
    13e0:	09 90       	ld	r0, Y+
    13e2:	70 25       	eor	r23, r0
    13e4:	97 0d       	add	r25, r7
    13e6:	c9 1b       	sub	r28, r25
    13e8:	d1 09       	sbc	r29, r1
		ldi		count,	96; S[12]
    13ea:	80 e6       	ldi	r24, 0x60	; 96
		rotate64_0byte_right_temp ; S[12] clear
    13ec:	a8 0f       	add	r26, r24
    13ee:	b1 1d       	adc	r27, r1
    13f0:	0d 93       	st	X+, r16
    13f2:	1d 93       	st	X+, r17
    13f4:	2d 93       	st	X+, r18
    13f6:	3d 93       	st	X+, r19
    13f8:	4d 93       	st	X+, r20
    13fa:	5d 93       	st	X+, r21
    13fc:	6d 93       	st	X+, r22
    13fe:	7d 93       	st	X+, r23
    1400:	87 0d       	add	r24, r7
    1402:	a8 1b       	sub	r26, r24
    1404:	b1 09       	sbc	r27, r1
		
    1406:	08 95       	ret
	...

00001500 <main>:
void keccack(u8* in,u8* state, u8* temp);



int main(void)
{
    1500:	ef 92       	push	r14
    1502:	ff 92       	push	r15
    1504:	0f 93       	push	r16
    1506:	1f 93       	push	r17
    1508:	cf 93       	push	r28
    150a:	df 93       	push	r29
    150c:	cd b7       	in	r28, 0x3d	; 61
    150e:	de b7       	in	r29, 0x3e	; 62
    1510:	c9 51       	subi	r28, 0x19	; 25
    1512:	d1 40       	sbci	r29, 0x01	; 1
    1514:	0f b6       	in	r0, 0x3f	; 63
    1516:	f8 94       	cli
    1518:	de bf       	out	0x3e, r29	; 62
    151a:	0f be       	out	0x3f, r0	; 63
    151c:	cd bf       	out	0x3d, r28	; 61
	u8 in[200] = {0x00,};
    151e:	8e 01       	movw	r16, r28
    1520:	0f 5f       	subi	r16, 0xFF	; 255
    1522:	1f 4f       	sbci	r17, 0xFF	; 255
    1524:	88 ec       	ldi	r24, 0xC8	; 200
    1526:	f8 01       	movw	r30, r16
    1528:	11 92       	st	Z+, r1
    152a:	8a 95       	dec	r24
    152c:	e9 f7       	brne	.-6      	; 0x1528 <main+0x28>
	u8 state[1] = {0x00,};
    152e:	c7 53       	subi	r28, 0x37	; 55
    1530:	df 4f       	sbci	r29, 0xFF	; 255
    1532:	18 82       	st	Y, r1
    1534:	c9 5c       	subi	r28, 0xC9	; 201
    1536:	d0 40       	sbci	r29, 0x00	; 0
	u8 temp[80] = {0x00,};
    1538:	7e 01       	movw	r14, r28
    153a:	fa ec       	ldi	r31, 0xCA	; 202
    153c:	ef 0e       	add	r14, r31
    153e:	f1 1c       	adc	r15, r1
    1540:	80 e5       	ldi	r24, 0x50	; 80
    1542:	f7 01       	movw	r30, r14
    1544:	11 92       	st	Z+, r1
    1546:	8a 95       	dec	r24
    1548:	e9 f7       	brne	.-6      	; 0x1544 <main+0x44>
	
	init(in, state, temp);
    154a:	a7 01       	movw	r20, r14
    154c:	be 01       	movw	r22, r28
    154e:	67 53       	subi	r22, 0x37	; 55
    1550:	7f 4f       	sbci	r23, 0xFF	; 255
    1552:	c8 01       	movw	r24, r16
    1554:	0e 94 51 00 	call	0xa2	; 0xa2 <init>
	keccack(in, state,temp);
    1558:	a7 01       	movw	r20, r14
    155a:	be 01       	movw	r22, r28
    155c:	67 53       	subi	r22, 0x37	; 55
    155e:	7f 4f       	sbci	r23, 0xFF	; 255
    1560:	c8 01       	movw	r24, r16
    1562:	0e 94 60 01 	call	0x2c0	; 0x2c0 <keccack>
	
	//test(state);

	//final(state, in);
	
}
    1566:	80 e0       	ldi	r24, 0x00	; 0
    1568:	90 e0       	ldi	r25, 0x00	; 0
    156a:	c7 5e       	subi	r28, 0xE7	; 231
    156c:	de 4f       	sbci	r29, 0xFE	; 254
    156e:	0f b6       	in	r0, 0x3f	; 63
    1570:	f8 94       	cli
    1572:	de bf       	out	0x3e, r29	; 62
    1574:	0f be       	out	0x3f, r0	; 63
    1576:	cd bf       	out	0x3d, r28	; 61
    1578:	df 91       	pop	r29
    157a:	cf 91       	pop	r28
    157c:	1f 91       	pop	r17
    157e:	0f 91       	pop	r16
    1580:	ff 90       	pop	r15
    1582:	ef 90       	pop	r14
    1584:	08 95       	ret

00001586 <_exit>:
    1586:	f8 94       	cli

00001588 <__stop_program>:
    1588:	ff cf       	rjmp	.-2      	; 0x1588 <__stop_program>
